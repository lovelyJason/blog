{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/hexo-theme-next-master/source/css/main.styl","path":"css/main.styl","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/images/avatar.gif","path":"images/avatar.gif","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/images/cc-by.svg","path":"images/cc-by.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/images/gotop.gif","path":"images/gotop.gif","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/images/gotop.png","path":"images/gotop.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/images/logo.svg","path":"images/logo.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/images/quote-l.svg","path":"images/quote-l.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/images/quote-r.svg","path":"images/quote-r.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/js/affix.js","path":"js/affix.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/js/algolia-search.js","path":"js/algolia-search.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/js/local-search.js","path":"js/local-search.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/js/motion.js","path":"js/motion.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/js/next-boot.js","path":"js/next-boot.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/js/post-details.js","path":"js/post-details.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/js/scrollspy.js","path":"js/scrollspy.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/js/utils.js","path":"js/utils.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/js/schemes/muse.js","path":"js/schemes/muse.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/js/schemes/pisces.js","path":"js/schemes/pisces.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/lib/canvas-nest/LICENSE","path":"lib/canvas-nest/LICENSE","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/lib/canvas-nest/README.md","path":"lib/canvas-nest/README.md","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/lib/canvas-nest/canvas-nest-nomobile.min.js","path":"lib/canvas-nest/canvas-nest-nomobile.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/lib/canvas-nest/canvas-nest.min.js","path":"lib/canvas-nest/canvas-nest.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":1,"renderable":1}],"Cache":[{"_id":"themes/hexo-theme-next-master/.all-contributorsrc","hash":"a5a536579490546f2275da03765738ceabe45584","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/.editorconfig","hash":"8570735a8d8d034a3a175afd1dd40b39140b3e6a","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/.eslintrc.json","hash":"cc5f297f0322672fe3f684f823bc4659e4a54c41","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/.gitattributes","hash":"a54f902957d49356376b59287b894b1a3d7a003f","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/.gitignore","hash":"b80cec1d5e6a73d1cec382aad8046d1352a1e963","modified":1565440325066},{"_id":"themes/hexo-theme-next-master/.stylintrc","hash":"2cf4d637b56d8eb423f59656a11f6403aa90f550","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/.travis.yml","hash":"3d1dc928c4a97933e64379cfde749dedf62f252c","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/LICENSE.md","hash":"18144d8ed58c75af66cb419d54f3f63374cd5c5b","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/README.md","hash":"2fcc7621e898732ef7976b89ca2511f84c577c35","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/_config.yml","hash":"c1a92c5ab167312f272861ebe7316737d6c10a75","modified":1565426143724},{"_id":"themes/hexo-theme-next-master/crowdin.yml","hash":"e026078448c77dcdd9ef50256bb6635a8f83dca6","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/gulpfile.coffee","hash":"2ba4aeddc257a74a209edf5218137010662cd5fb","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/package.json","hash":"170e67ca35a7c1ddc7dae50a90f6d4270143331f","modified":1565349374000},{"_id":"source/_posts/git.md","hash":"5df4936ae0ef2ac63b786b35ae0a447f368cf5c7","modified":1565426547433},{"_id":"source/_posts/hello-world.md","hash":"029f91fccbe8f87c0f3ea10c4042300d2fa7edc0","modified":1565362617034},{"_id":"source/_posts/mysql.md","hash":"f66ca87e4562c86728c37d3daf3369044bec0faa","modified":1565416493685},{"_id":"source/categories/index.md","hash":"5e95c8024c0b130a89fec89b5623a0e03f3c5306","modified":1565426375840},{"_id":"source/tags/index.md","hash":"b33017c391c747fd660eb28c8eb9b4ffd1145f6b","modified":1565426415709},{"_id":"themes/hexo-theme-next-master/.github/CODE_OF_CONDUCT.md","hash":"c149f003d03501565e7688915cd8f2e99fbf8f42","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/.github/CONTRIBUTING.md","hash":"d91296a4c9facf6e2dc15815820b6444262f575c","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/.github/ISSUE_TEMPLATE.md","hash":"00c25366764e6b9ccb40b877c60dc13b2916bbf7","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/.github/PULL_REQUEST_TEMPLATE.md","hash":"3239625bb2573e61f7bcce27a74882a9ff7021e9","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/.github/auto_assign.yml","hash":"cb68a1dca1c4623448c2ca899614a9f21df1b036","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/.github/config.yml","hash":"8a5cbf5aa9529390fe0a782758aca9c3a02f9dcf","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/.github/eslint-disable-bot.yml","hash":"16541fb7b80f5ab90135db96285badb63c4d7d3e","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/.github/issue_label_bot.yaml","hash":"b795f819d4e85197c31ac8892aab55e19bca970a","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/.github/lock.yml","hash":"585d2c471047be320aa62f2b74dad797bf09c530","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/.github/mergeable.yml","hash":"0ee56e23bbc71e1e76427d2bd255a9879bd36e22","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/.github/release-drafter.yml","hash":"fbd6210c4454c2db6cad1960dd03c89488d68c87","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/.github/stale.yml","hash":"41bf97ee86b8940a0b2e754499ec77fd2b44b717","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/.github/support.yml","hash":"d75db6ffa7b4ca3b865a925f9de9aef3fc51925c","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/docs/AGPL3.md","hash":"0d2b8c5fa8a614723be0767cc3bca39c49578036","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/docs/ALGOLIA-SEARCH.md","hash":"4094dab82cbdfdd0de117e94b508bbd5ceb3d363","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/docs/DATA-FILES.md","hash":"290237970f023ad1345dcb8825fe3004de69900c","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/docs/AUTHORS.md","hash":"9b6dea4c6ad89b1cf588251e0886c028d8f427e2","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/docs/INSTALLATION.md","hash":"5385246ab4756e3e26ec9fe1f6a6759812177cc4","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/docs/LEANCLOUD-COUNTER-SECURITY.md","hash":"1fb2c852fad03b73882069f1ec0659db2e1f2da0","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/docs/LICENSE.txt","hash":"368bf2c29d70f27d8726dd914f1b3211cae4bbab","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/docs/MATH.md","hash":"026d2cff73c22a30ea39c50783557ff4913aceac","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/docs/UPDATE-FROM-5.1.X.md","hash":"a07ca23c38f6e4dddd4b74016b30e88cd3796f75","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/languages/de.yml","hash":"88dcfa3e53cef1b7f858f98ca9f980179169ae4c","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/languages/default.yml","hash":"ea5e6aee4cb14510793ac4593a3bddffe23e530c","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/languages/en.yml","hash":"4de207d89824422ccec5bc754a81af032d5e30f9","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/languages/es.yml","hash":"a5203c7bbae70bc40f2ee526f9e8105ca9be851e","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/languages/fa.yml","hash":"cc1f3a13e020e2cc666ddc57aaebc4c1ebd669d0","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/languages/fr.yml","hash":"c1e2e892c678920854e1f3df409118398523849e","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/languages/hu.yml","hash":"3b4c10c86a228da70dc4b1a1784a6f942e186032","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/languages/id.yml","hash":"3a9f4485e6801e0e6fae749133a52e3797760795","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/languages/it.yml","hash":"28ff9197a3d21e838e33bb026d8adb544320cb1a","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/languages/ja.yml","hash":"8f85a6500716191159f16c7f484ba61ddd16eeb6","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/languages/ko.yml","hash":"1df31bf037bcb6868a4bd60c49ff55eec5b8167f","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/languages/nl.yml","hash":"6f4a339ecc67a140f3f9c7bec369cbda6b45afd7","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/languages/pt-BR.yml","hash":"301a0535df5de7b585c7c9752053c41c6ef26f9b","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/languages/pt.yml","hash":"6d87701443e33a13574049e613f064f1eb250c95","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/languages/ru.yml","hash":"93872ac01074159566ee3e1738eea6e9216bab8e","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/languages/tr.yml","hash":"5489606e6c40c0b226a3414c8e5037aac965211d","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/languages/uk.yml","hash":"765ba405778f07d7ec3713606568852b04e1a862","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/languages/vi.yml","hash":"6a812db8606498980cd64f001e9ef2f50e124809","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/languages/zh-CN.yml","hash":"f311ad2cc2edba144764c36c0035b6ed0d356a53","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/languages/zh-HK.yml","hash":"7a5e47f561d4b6e132f7f3b09676afbf8520264e","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/languages/zh-TW.yml","hash":"3f3674cac8f47a9a509a7557ea1557bbfbd027e8","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/layout/_layout.swig","hash":"7c7eeb42b631c46ec02cb723b22b68ae80409aa3","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/layout/archive.swig","hash":"9941337701a8c0377a7af0024d948fcbb3a29a58","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/layout/category.swig","hash":"3020f7646dc3c79d44e3b5f1ce24b06d5b9fc13a","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/layout/index.swig","hash":"8cf3451dd2d5727920b351a8f5eefdddb5bf3638","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/layout/page.swig","hash":"dc48085a0c69c60155d57aa546ded835a1ff767e","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/layout/post.swig","hash":"4291b34b17fc6f1c06eb69852c894913e889a774","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/layout/tag.swig","hash":"02b5dfdfa1d1ff61f161f592d38b09454c941036","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/.github/ISSUE_TEMPLATE/bug-report.md","hash":"c37a60580c901c79ccb22564b228a46e06207445","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/.github/ISSUE_TEMPLATE/custom-issue-template.md","hash":"57e1e06e845193e80c7df4a4454af28352526f7a","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/.github/ISSUE_TEMPLATE/feature-request.md","hash":"07c423cce4157b8e2dbf60907ccbf3f18c4cf98a","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/.github/ISSUE_TEMPLATE/non-english.md","hash":"0b0727ff4d5180ae67f930fb4f8e9488e33eda9f","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/docs/ru/DATA-FILES.md","hash":"67d04e3e29a2675d1a9f87d1ae6ea0769e963ff1","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/docs/ru/INSTALLATION.md","hash":"6c5d69e94961c793da156217ecf1179e868d7ba1","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/docs/ru/README.md","hash":"932d3965d8b1a1ff653c07a0cafcdbf5892d6945","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/docs/ru/UPDATE-FROM-5.1.X.md","hash":"b1dd18d9b890b21718883ea1832e7e02a773104a","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/docs/zh-CN/ALGOLIA-SEARCH.md","hash":"caa624092175d44e3d3a8c6ca23922718da2354c","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/docs/zh-CN/CODE_OF_CONDUCT.md","hash":"0dfb458370a0ffbbe37c00f53c15e3aa3e79b125","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/docs/zh-CN/CONTRIBUTING.md","hash":"2949ccf2cba5238f01a1386a9e91e646c7a22260","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/docs/zh-CN/DATA-FILES.md","hash":"c46f3f7496fc422207cc5954e10a2bc972b650aa","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/docs/zh-CN/INSTALLATION.md","hash":"c13546dd70a99a7d2d409cddf5d59f2f4d4d44a4","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/docs/zh-CN/LEANCLOUD-COUNTER-SECURITY.md","hash":"e568a1b3c532e0ecf33cc237e1425b2579bd006d","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/docs/zh-CN/MATH.md","hash":"83feca62190abcca0332915ffe0eefe582573085","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/docs/zh-CN/README.md","hash":"79a73361b24e7fb7022992702961faacd6a2f9fe","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/docs/zh-CN/UPDATE-FROM-5.1.X.md","hash":"ba918bbd8faf32c28335693f03ff37c6acaff7f3","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/layout/_macro/passage-end-tag.swig","hash":"2bc6f9c072656ccec0b76de5a6810b771532f390","modified":1565411973052},{"_id":"themes/hexo-theme-next-master/layout/_macro/post-collapse.swig","hash":"41625b8424b680e7c81fc9294e0bb1859434ce01","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/layout/_macro/post.swig","hash":"c58ac169075a1dab7d5ffb62cfb0871530610932","modified":1565412232409},{"_id":"themes/hexo-theme-next-master/layout/_macro/sidebar.swig","hash":"6a5ceff84bbe9ad2be780ff58aeea91972c32d44","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/layout/_partials/comments.swig","hash":"62f1556e9b8cc3217dad9ab4db8f474088fa1383","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/layout/_partials/footer.swig","hash":"45ae9d871d9756ca42bb193e7ec5594f10feb977","modified":1565414136922},{"_id":"themes/hexo-theme-next-master/layout/_partials/github-banner.swig","hash":"40e940c3213b74933e529cd64f64c1f6f512b5ca","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/layout/_partials/pagination.swig","hash":"769a983fe2f77908bfc8590ff37a0d8958b47598","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/layout/_partials/pjax.swig","hash":"6d7d2e1676f0abd7d4a4d607eca51065e02d07f4","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/layout/_partials/post-edit.swig","hash":"4b0c972c44bfa7ab07604280563deb9cc3974657","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/layout/_scripts/commons.swig","hash":"e3c54ae7eca24a85148ec3bfb6712abf07c418c9","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/layout/_scripts/index.swig","hash":"3807bed8ae3f632019f26e282ef613d2275287ee","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/layout/_scripts/next-boot.swig","hash":"283e78eb795f52236026434dab6a0667f14d3c08","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/layout/_scripts/noscript.swig","hash":"edaff4766e0c05fd5c889d9dd32884d376bef9d9","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/layout/_scripts/three.swig","hash":"216849ad2503f578839c500ede529744a3abaf03","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/layout/_scripts/vendors.swig","hash":"70482f40ed63cfc3cef805ff93cf1a7c4b512fbc","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/layout/_third-party/baidu-push.swig","hash":"8627c8c8b031ecee16c522433b66fa4d6979b8ea","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/layout/_third-party/bookmark.swig","hash":"2aec6040ac80977dd0c04b918fcc8851ed569947","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/layout/_third-party/facebook-sdk.swig","hash":"e7103dc133c8a6109e2a2e086c8e65ac80dbf6bb","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/layout/_third-party/index.swig","hash":"56133a4237a5cdee2bd874a2b3c0be2ac967dd2b","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/layout/_third-party/quicklink.swig","hash":"ccef9c8ef5406a33af56fe5493492ee8ac2bb965","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/layout/_third-party/rating.swig","hash":"da6a9d14ed10203e378c6e2c00a7b5e7afabca58","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/layout/_third-party/vkontakte-api.swig","hash":"dc9c90c69734e658ec82995f3cfa286003c01281","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/scripts/events/core.js","hash":"a25690d8b03779f7e318108c8eace9baf6d4283a","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/scripts/filters/default-injects.js","hash":"834599d2b83f06e90f8cf618cddc106fe900ba5c","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/scripts/filters/exturl.js","hash":"9c32675f64121ffbe454189b8e418b408f79d9c2","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/scripts/filters/minify.js","hash":"ef2c0280521462da88f220ba69b047d5d99adc76","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/scripts/filters/lazyload.js","hash":"51672320fff6b39f56fe6a2881c611afe4e79b8e","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/scripts/helpers/engine.js","hash":"896a581feb9432e58a325ad04d66d6310a12374e","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/scripts/helpers/font.js","hash":"53169e2d04f0c21e68beb07c212be0a6c2a9aaea","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/scripts/helpers/next-url.js","hash":"799a042bbf497a4c7a2981aa2014ff28fa1bb382","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/scripts/tags/button.js","hash":"1d1d25f7e579d92fa563778dd0f163e8eda190da","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/scripts/tags/caniuse.js","hash":"20e392b8583ba6ae5037449c2c7e191d3927641b","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/scripts/tags/center-quote.js","hash":"f13430d9d1c9773b390787c2f046bb1f12a79878","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/scripts/tags/full-image.js","hash":"70b1d6ed969143e3912daf051ccc3585d984c146","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/scripts/tags/group-pictures.js","hash":"8fc05f22b88553bc1d96e0c925799cd97920fc6a","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/scripts/tags/include-raw.js","hash":"60f880c1e11a7df1aee4f2e01d65451fecc0372c","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/scripts/tags/label.js","hash":"fc5b267d903facb7a35001792db28b801cccb1f8","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/scripts/tags/mermaid.js","hash":"983c6c4adea86160ecc0ba2204bc312aa338121d","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/scripts/tags/note.js","hash":"0a02bb4c15aec41f6d5f1271cdb5c65889e265d9","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/scripts/tags/pdf.js","hash":"f780cc72bff91d2720626e7af69eed25e9c12a29","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/scripts/tags/tabs.js","hash":"00ca6340d4fe0ccdae7525373e4729117775bbfa","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/scripts/tags/video.js","hash":"e5ff4c44faee604dd3ea9db6b222828c4750c227","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/source/css/main.styl","hash":"68c3377b643162aeaae2b60c196486fdb3b509c3","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/source/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/source/images/avatar.gif","hash":"18c53e15eb0c84b139995f9334ed8522b40aeaf6","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/source/images/gotop.gif","hash":"8de3d2d3d4b56433bd27b33bb8a123b842ad160a","modified":1472480887264},{"_id":"themes/hexo-theme-next-master/source/images/gotop.png","hash":"19c3215bb95ba83f52bd605ec2730773541fc8c7","modified":1472480872822},{"_id":"themes/hexo-theme-next-master/source/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/source/js/affix.js","hash":"a2aab233d99297435a5274bf512c3c753fe08e80","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/source/js/algolia-search.js","hash":"955ae621677ae99416dd8f362eea02ef39811eca","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/source/js/local-search.js","hash":"a857346f051001d6fe0c7ef1780b313f9e5c7955","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/source/js/motion.js","hash":"4d1a9ab5ce397c093711769045288ce48fd392bd","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/source/js/next-boot.js","hash":"1fc6c1b80f265396cb193b37d4138cc3c8fe08c7","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/source/js/post-details.js","hash":"b72c145c7995fe6975b637ef3bcbb2c41b47c289","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/source/js/scrollspy.js","hash":"e630d9b05ab6bcc9ebab92435587d5a554eb0e3b","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/source/js/utils.js","hash":"e8e7fde08e6265b13017c1c7a9562dce68b334c1","modified":1565430154822},{"_id":"themes/hexo-theme-next-master/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/layout/_macro/menu/menu-badge.swig","hash":"9e959646899a1dd381c0bea870408cd392c93c70","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/layout/_macro/menu/menu-item.swig","hash":"1dc3875981923aee38b7b1e3ca3813b75ed6ab9c","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/layout/_partials/analytics/busuanzi-counter.swig","hash":"b35b2bf2ce3d73cabe8c443a45c2a82d45baf151","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/layout/_partials/analytics/cnzz-analytics.swig","hash":"a17ace37876822327a2f9306a472974442c9005d","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/layout/_partials/analytics/index.swig","hash":"2925f6353934b1b2adc2808059e64dd7d220edd7","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/layout/_partials/analytics/tencent-analytics.swig","hash":"493a1ef6c8f475d4dd3156a6ab37690dc75695ea","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/layout/_partials/analytics/tencent-mta.swig","hash":"198813a3f382bda4278fe3759bf0f18a5769bb33","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/layout/_partials/head/head-unique.swig","hash":"6f02724e24945d7e5f0dcd351deebc90996ad38d","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/layout/_partials/head/head.swig","hash":"b417b11bd00c8b8e3ba4bf6d19f791bddd5fec60","modified":1565426161009},{"_id":"themes/hexo-theme-next-master/layout/_partials/header/brand.swig","hash":"8dd7ac5ccc52848b3d0fb0f102874c1a8c1c45b6","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/layout/_partials/header/index.swig","hash":"3bb62caf1462aad21335a9b0236c6aed97de2e68","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/layout/_partials/header/menu.swig","hash":"a14a301e3d7187595b37b2ab419709a9c81a3a76","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/layout/_partials/header/sub-menu.swig","hash":"a72e33e11df9d3639cdebab4f480e397c70deacb","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/layout/_partials/page/breadcrumb.swig","hash":"883ea1d024a8262eb8d3213de71c8ccb30daf095","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/layout/_partials/page/page-header.swig","hash":"d3c25d70f0fd76121e4cacb9f8af4ccbe2a3c74d","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/layout/_partials/post/post-copyright.swig","hash":"3ed15de413b9ca83641bbd0b740f94b450630357","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/layout/_partials/post/post-footer.swig","hash":"38683b340b199ab204a43f3d2cd41e21f01ceb06","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/layout/_partials/post/post-related.swig","hash":"e2549106ea26ac48019aa3f8023b8fdc78c0f6db","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/layout/_partials/post/post-reward.swig","hash":"40483139657cde24356c6a4033a6386b909327a9","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/layout/_partials/post/wechat-subscriber.swig","hash":"2edfaf1579ea58e15cb5583fb7962dfee9af2257","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/layout/_partials/search/algolia-search.swig","hash":"d9fe715fee716f78c7976c4e8838da71439ee0e0","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/layout/_partials/search/index.swig","hash":"7bce91d429216724db5e337ec64cf7f05b022c97","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/layout/_partials/search/localsearch.swig","hash":"957701729b85fb0c5bfcf2fb99c19d54582f91ed","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/layout/_partials/share/add-this.swig","hash":"15b542f5b06b7532234af367340b9ed9fcebb0ac","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/layout/_partials/share/index.swig","hash":"609ce79f47756977b90bce365614d4f8d1020196","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/layout/_partials/share/likely.swig","hash":"3ca3fe150c4dc4fd938410f367814445436fb67a","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/layout/_partials/share/needsharebutton.swig","hash":"09ae1250c1e142d251cc0e979097f1dd95e277bb","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/layout/_partials/sidebar/site-overview.swig","hash":"84a4201867c034afbf25862b63af4a582f7086b1","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/layout/_scripts/pages/post-details.swig","hash":"5b05f165547391bf231e52f56f3d925efc09bc44","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/layout/_scripts/pages/schedule.swig","hash":"5258d3dbfbb6d585f798c697463f8b67b7dea02b","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/layout/_scripts/schemes/gemini.swig","hash":"ffc8e8836714ea79abeb77b75859634615652877","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/layout/_scripts/schemes/mist.swig","hash":"108b157fbd1ac3baaf19ae87234fa8728ab79556","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/layout/_scripts/schemes/muse.swig","hash":"f2ff7799baac49eb9779f66e0cd083fac70b87a2","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/layout/_scripts/schemes/pisces.swig","hash":"509621f1a68e7ab41193a14a2c50a21aff976f9e","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/layout/_third-party/analytics/analytics-with-jquery.swig","hash":"b485797073495e24bf2f0b85880d513257bfed72","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/layout/_third-party/analytics/application-insights.swig","hash":"7fd0459d2f1cfe1254f2c2b8087dc094c8cb0e84","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/layout/_third-party/analytics/baidu-analytics.swig","hash":"4790058691b7d36cf6d2d6b4e93795a7b8d608ad","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/layout/_third-party/analytics/firestore.swig","hash":"753ae34ed3852ea3c75a9f29d057f53a9829f247","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/layout/_third-party/analytics/google-analytics.swig","hash":"3b9c50e3cbfa2c4d6cb0ffd443a994a212f3dbfc","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/layout/_third-party/analytics/growingio.swig","hash":"051fadd4cb777769fc4c0fe3cb0b309e3236e5c2","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/layout/_third-party/analytics/index.swig","hash":"20fcbed44aede1b908bd17d7a0279b03639068b1","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/layout/_third-party/analytics/lean-analytics.swig","hash":"4dc2a96ad40b40d9b89da21105feee05df81ff35","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/layout/_third-party/chat/chatra.swig","hash":"fdcf006e1ba2e53eab65e901b6c63159538307ef","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/layout/_third-party/chat/index.swig","hash":"5ab4a8b4306c837d2f8c211a9d7fdaed76fa254d","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/layout/_third-party/chat/tidio.swig","hash":"cba0e6e0fad08568a9e74ba9a5bee5341cfc04c1","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/layout/_third-party/comments/changyan.swig","hash":"1130b8bd60f3b84397974486e6586d7f0afaf836","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/layout/_third-party/comments/disqus.swig","hash":"4e076cb5d50588c8fc5e032b6c9e8f6601628561","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/layout/_third-party/comments/disqusjs.swig","hash":"1e27f34b06f8144905e6904b67dfc03c99d16499","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/layout/_third-party/comments/gitalk.swig","hash":"620ae7b01e6272ce31fb214c2c9422df60aa589a","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/layout/_third-party/comments/livere.swig","hash":"6f95bc4d7ffaddc3c0df0ef3eeeaac58ff83f560","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/layout/_third-party/comments/valine.swig","hash":"f40c1ca8ed4e7e92bc47f130243ef2cc396f38a8","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/layout/_third-party/math/index.swig","hash":"8b2b0997ebf5e9d17dcd6c0b7601dea0eec26b2e","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/layout/_third-party/math/katex.swig","hash":"079910669dcc9b0606dde15c66bfdcf1c97b8119","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/layout/_third-party/math/mathjax.swig","hash":"68d38da0762e82f7188b589479fa1cf80c7688ea","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/layout/_third-party/search/algolia-search.swig","hash":"157abdff4c5fddceae5af2631b5fff202abc0e5e","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/layout/_third-party/search/index.swig","hash":"b2fd17688f0433571b37704bc8df798e175e7811","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/layout/_third-party/search/localsearch.swig","hash":"353da7ea00400897ae920a085aa4bee2224da50d","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/layout/_third-party/search/swiftype.swig","hash":"ba0dbc06b9d244073a1c681ff7a722dcbf920b51","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/layout/_third-party/tags/index.swig","hash":"83d0a8f71878c6b96a04ba08567b9064de6cce83","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/layout/_third-party/tags/mermaid.swig","hash":"119f67181cde1bd5391bc073b11343ea853513fb","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/layout/_third-party/tags/pdf.swig","hash":"f3357db3b0d829f5f104ce740bee16abb4b0f473","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/scripts/events/lib/config.js","hash":"867b23bb231224064a79df5278ba0a02215044eb","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/scripts/events/lib/injects-point.js","hash":"6661c1c91c7cbdefc6a5e6a034b443b8811235a1","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/scripts/events/lib/injects.js","hash":"251dcc22ed213da9b6135e1b958010e3352408d4","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/scripts/filters/comment/changyan.js","hash":"00922e352b5585ae15cc19eaec8f5c31bd57814c","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/scripts/filters/comment/common.js","hash":"0803d4f4d3d02c24417c163ad0b27b60fda79250","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/scripts/filters/comment/default-config.js","hash":"8f4643a844f90ca0ad853de1fe7c687c7569503d","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/scripts/filters/comment/disqus.js","hash":"0388d10adf2330be20ec932010e35a81f4296c5d","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/scripts/filters/comment/disqusjs.js","hash":"a9ebe8e80edb5e19ec4b845090d260ae9de1566a","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/scripts/filters/comment/facebook-comments-plugin.js","hash":"8d5379344310ae67c1e8880e517d643e40670874","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/scripts/filters/comment/gitalk.js","hash":"4505867a0598b83583f9740ecba3e4f053d18ebe","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/scripts/filters/comment/livere.js","hash":"71ee48847a1e54962640a4b64298ecc3e76565f8","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/scripts/filters/comment/valine.js","hash":"0c12943b5d681cf070431c3ff9256eaf358d4a3c","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/scripts/filters/comment/vkontakte.js","hash":"2aa608a4bc664e87e4e56b016a28dc7d798d9966","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/source/css/_mixins/Gemini.styl","hash":"2315dd8a7a2c7aabd29efa6193df08e805cb15fc","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/source/css/_mixins/Pisces.styl","hash":"2bb4c78b5da482751085beb73ab01ecd2dcbccda","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/source/css/_mixins/base.styl","hash":"b82c5b13ca6d1a6424dcc1245fb7722cac090579","modified":1565443262802},{"_id":"themes/hexo-theme-next-master/source/css/_variables/Gemini.styl","hash":"451f1f904df8b39015ccff5ce804c047f132b1f4","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/source/css/_variables/Mist.styl","hash":"4c101c21b4f2712e47dba869ccc116b245fb0909","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/source/css/_variables/Pisces.styl","hash":"3c001c41c5e6ec4ef3c2bb23735ffbf95ef8f289","modified":1565441831218},{"_id":"themes/hexo-theme-next-master/source/css/_variables/base.styl","hash":"fbd6402c9ebf6a7f9f20dd127956397373a675c8","modified":1565441435502},{"_id":"themes/hexo-theme-next-master/source/js/schemes/muse.js","hash":"3367e85556ba4d138b4f9ad33d00b723bb75557a","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/source/js/schemes/pisces.js","hash":"b1bfc528190a93256fda7863685d5424636e87ed","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/source/lib/canvas-nest/LICENSE","hash":"336611e76f0638d3d8aeca6b1b97138d2a07523f","modified":1565411048770},{"_id":"themes/hexo-theme-next-master/source/lib/canvas-nest/README.md","hash":"6df74359266a419a2afed1b5573faf17d3cb9912","modified":1565411048771},{"_id":"themes/hexo-theme-next-master/source/lib/canvas-nest/canvas-nest-nomobile.min.js","hash":"6b4437a9cd8aa04329cc6220a595acfe1fb9b598","modified":1565411048771},{"_id":"themes/hexo-theme-next-master/source/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1565411048771},{"_id":"themes/hexo-theme-next-master/source/lib/font-awesome/.bower.json","hash":"a2aaaf12378db56bd10596ba3daae30950eac051","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/source/lib/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/source/lib/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/source/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/source/lib/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/source/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/source/lib/jquery/index.js","hash":"88523924351bac0b5d560fe0c5781e2556e7693d","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/back-to-top-sidebar.styl","hash":"1c178041435de8076a1ce31304184007a837fcbb","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/back-to-top.styl","hash":"e89060ac3a66662287e98161a87416e27d71ba06","modified":1565442998505},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/buttons.styl","hash":"2b14d2a3f814c9dbd92c00835878925f9f10ca28","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/comments.styl","hash":"dc658f44f4cda38684a584c95a6823e96c970a6d","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/components.styl","hash":"1960299fe99163f44f1cd90210eea1ef4b2cb723","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/pagination.styl","hash":"390993b47942a47d23ed8904c92e0186b6e9af29","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/rainbow.styl","hash":"4bec027d48ebb95acd5f5786456ee1eb19a23ee4","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/scrollbar.styl","hash":"202ee1f1f8e64d8292df16f40ee176ff4e5d7e71","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/source/css/_common/outline/outline.styl","hash":"ab649cf52337d8500de5b0e97d0327a72fe26e94","modified":1565422152895},{"_id":"themes/hexo-theme-next-master/source/css/_common/scaffolding/base.styl","hash":"442f7598991b92ec8bc3ce5343e18730da92e4fb","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/source/css/_common/scaffolding/helpers.styl","hash":"1238932450efc3f4c2e25c704794437ac78e6164","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/source/css/_common/scaffolding/mobile.styl","hash":"4c4986b704c3cc3167c3c2a69c454446cf152528","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/source/css/_common/scaffolding/normalize.styl","hash":"4f7140cc0db08b47a25c4c7aad71047d433051a1","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/source/css/_common/scaffolding/scaffolding.styl","hash":"e9e3bcef3f9a3541a11e5f3edfed2a3d13d22b80","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/source/css/_common/scaffolding/tables.styl","hash":"173fe462331ba12d612f7ade8f18c0f9e259fa5d","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/source/css/_schemes/Gemini/index.styl","hash":"65328fbc073901d78729463e46cb28a4c37a6fac","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/source/css/_schemes/Mist/_base.styl","hash":"71d75fa309cf5b96d876da536f57c047e57afcff","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/source/css/_schemes/Mist/_header.styl","hash":"87d19a45db10689aae9a09736efd1eb896a35b3d","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/source/css/_schemes/Mist/_logo.styl","hash":"3462ffd270f3e218e0a8362262466e79d731f975","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/source/css/_schemes/Mist/_menu.styl","hash":"f87b7a7d30e9111f7af269dcf7bd8c1893343fe8","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/source/css/_schemes/Mist/_posts-expanded.styl","hash":"d46c61153bdba976ea785431d5d4b2c2a47c39b2","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/source/css/_schemes/Mist/index.styl","hash":"49c6c656ed6e7348f967c01f8302fe1f6a5e3cd9","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/source/css/_schemes/Muse/_layout.styl","hash":"54c5e23ec3dcbbc77848ededba76e861cf0f4719","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/source/css/_schemes/Muse/_logo.styl","hash":"bdc0ada1eec3c1d625bfe2c148cdfc1b3460fa32","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/source/css/_schemes/Muse/_menu.styl","hash":"0138165021be463f19e092f8972ac41aea3fb68a","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/source/css/_schemes/Muse/index.styl","hash":"45f03b3bb80e32fd5648ce723055d7552b87d97c","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/source/css/_schemes/Pisces/_brand.styl","hash":"2fa573d7c04b8fa4717fc50265d7e4273f4325ea","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/source/css/_schemes/Pisces/_layout.styl","hash":"cbeb23488b707418a60b59ef8d6abc4f0d671959","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/source/css/_schemes/Pisces/_menu.styl","hash":"2e0681fa265a55f0259969109a3b9e3788bf516c","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/source/css/_schemes/Pisces/_sidebar.styl","hash":"7fad214ad640f9cd35fd3357e3bab03bbe45a2da","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/source/css/_schemes/Pisces/_sub-menu.styl","hash":"4b976940b728a78428e88f40acf9a801223af88a","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/source/css/_schemes/Pisces/index.styl","hash":"10b4794ba62726fc052c74d786d962ed79d0780b","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/source/lib/canvas-nest/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1565411048743},{"_id":"themes/hexo-theme-next-master/source/lib/canvas-nest/.git/config","hash":"78c4459d066ad795856608d603d780b53488073d","modified":1565411048749},{"_id":"themes/hexo-theme-next-master/source/lib/canvas-nest/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1565411042848},{"_id":"themes/hexo-theme-next-master/source/lib/canvas-nest/.git/index","hash":"815fcd909b02dfd2e4ffd657ca0461a7d100e101","modified":1565411048772},{"_id":"themes/hexo-theme-next-master/source/lib/canvas-nest/.git/packed-refs","hash":"5bff92923744dd80f4b681036f6ef109c16c7c0f","modified":1565411048738},{"_id":"themes/hexo-theme-next-master/source/lib/canvas-nest/.github/stale.yml","hash":"dbd5e6bf89b76ad1f2b081578b239c7ae32755af","modified":1565411048769},{"_id":"themes/hexo-theme-next-master/source/lib/font-awesome/css/font-awesome.css","hash":"bd0e734c626f11f98ba5af7bea391a269d09d2e0","modified":1565422726406},{"_id":"themes/hexo-theme-next-master/source/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/source/lib/font-awesome/css/font-awesome.min.css","hash":"bd00f5e3ba4abf25cc5bee851869cee9565dc3f6","modified":1565422722398},{"_id":"themes/hexo-theme-next-master/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/footer/footer.styl","hash":"0442cccb1111eec0d38357fba810319d781b7ef9","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/header/header.styl","hash":"4c7140804d1ca65396959a3e8f8b79b9c4d3233f","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/header/github-banner.styl","hash":"172a83db23cb3f8a95e7cd6046befbc841caa869","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/header/headerband.styl","hash":"0caf32492692ba8e854da43697a2ec8a41612194","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/header/menu.styl","hash":"cf37dc0ef20a8423a28b056458e1fa609875789a","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/header/site-meta.styl","hash":"dada73ae88f01fab2ab4d2c83eddfc558de2110a","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/header/site-nav.styl","hash":"080f22922d89ca714a2463d6eaedfd4cb68e8aef","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/highlight/copy-code.styl","hash":"e13f52684dab8add24e90f1373ac8af578671c65","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/highlight/diff.styl","hash":"d3f73688bb7423e3ab0de1efdf6db46db5e34f80","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/highlight/highlight.styl","hash":"65fa4eb4aaf254be86b407f616ffc7340de9fedd","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/highlight/theme.styl","hash":"a67dc85f6d158dac20e951ab55988ff7e9e1739b","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/pages/archive.styl","hash":"d416014be2accb53931ac0b4c60a0c5e3cf2d180","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/pages/breadcrumb.styl","hash":"1f217159862b12a89350e11b5097a8f3031af28f","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/pages/categories.styl","hash":"2bd0eb1512415325653b26d62a4463e6de83c5ac","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/pages/pages.styl","hash":"621dc55fe935afe68a19f67b7447524292bc7e56","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/pages/schedule.styl","hash":"207019d9e4911060dc23f01f821727fe0fe4717c","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/pages/tag-cloud.styl","hash":"61ca40856e5cacd48e0fa9728fde4605c7dd4c94","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/post/post-button.styl","hash":"e72a89e0f421444453e149ba32c77a64bd8e44e8","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/post/post-collapse.styl","hash":"83afee4c02f63642267a4d1487d028dc83c7739c","modified":1565415166367},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/post/post-copyright.styl","hash":"7cee1dc30f323e9f46e1fd4cf61c1a3d4cebb8b0","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/post/post-eof.styl","hash":"f96b241dea210e494b9173be76cce65faee7157a","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/post/post-expand.styl","hash":"bb892e5934a3b525afd1e578db991b747ea4c1eb","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/post/post-gallery.styl","hash":"8b0dde1df553a5a2f5e0765e4e4ce48e9ab2c90e","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/post/post-meta.styl","hash":"c60afb603d58cad3ad13e1a16c66832538510063","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/post/post-nav.styl","hash":"2e2a09dddd2a394a635bcefb6207b6cddcb784c7","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/post/post-reading_progress.styl","hash":"c898a67edb271c26f81e98acab93299a99fe3b95","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/post/post-reward.styl","hash":"fdebe803d61e781883453d6301b7e2bcf5a8ec05","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/post/post-rtl.styl","hash":"f5c2788a78790aca1a2f37f7149d6058afb539e0","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/post/post-tags.styl","hash":"70d13702896e03013f694f89d5a68adbf0fff4af","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/post/post-title.styl","hash":"7581c1a77831ac128798e8c293923be763dea68c","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/post/post-type.styl","hash":"6d379b38cab56666e24463a7a4d52006e232a8b1","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/post/post-widgets.styl","hash":"dcf801bd2478e125dffc0e23c0e720d048cf580f","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/post/post.styl","hash":"d27b3d93f194454da0d783d9908bfd1da5d40b7c","modified":1565415607555},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"2ef546b4cfa5038ebb050c592c5135bbeb51af41","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/sidebar/sidebar-author.styl","hash":"0dd269f92663c178ab2b7a746bae1caa1a4ecf06","modified":1565412881286},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"cd7ab38366a73edf3e7576d2629339660080b6f6","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/sidebar/sidebar-button.styl","hash":"26226247288e1b2e8eca7af9caa7086b28578a42","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/sidebar/sidebar-dimmer.styl","hash":"8fc3facb9e9d4dae2578d0a271648d997a7f9bf3","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"f3108a247549fbdf11071d023add3f1b34ad2b23","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"b2eca1259b9df8df81c5768bbb9b7ef65826e360","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"bfa93a958115ddd562cd10f74b2eb887b6d3f187","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/sidebar/sidebar.styl","hash":"92381084e1aaf6798f058668aacef15bf1721739","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/sidebar/site-state.styl","hash":"02e5a998748a67fa885fb06fae242bcf3f2786fb","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/tags/blockquote-center.styl","hash":"0527bc64708a9446dc7bbb2c7e39ab3a61251c26","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/tags/group-pictures.styl","hash":"5d63f7479ee0f645e7538c60e827036fad74766d","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/tags/note.styl","hash":"278c31ed96474cd8a2ba465ed4131327e9d598bd","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/tags/label.styl","hash":"78d309e22206a4addda3c393282518dae02250ed","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/tags/pdf.styl","hash":"2dc2a5b7becb11de1d4bdab6b5195588ae878cfc","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/tags/tabs.styl","hash":"f211554f09a9005fad30b3e8f031be7f3fb7016a","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/tags/tags.styl","hash":"9e4c0653cfd3cc6908fa0d97581bcf80861fb1e7","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/third-party/gitalk.styl","hash":"8a7fc03a568b95be8d3337195e38bc7ec5ba2b23","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/third-party/algolia-search.styl","hash":"90edaf377646093a07ea4e26accb861be9ebbb2b","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/third-party/localsearch.styl","hash":"438f3f7209fa6b8ab092a6f200a8c8c009565291","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/third-party/math.styl","hash":"ef66c0a08e4243a25e41408d70ca66682b8dcea1","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/third-party/needsharebutton.styl","hash":"c2fc1a5105d6691d680f7b77b9301db416ebac8b","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/third-party/related-posts.styl","hash":"85b8606763f4177d2f9a11c1909a21ab1ae2011c","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/third-party/third-party.styl","hash":"d048206fad5ace7f8df16cbc0b074b46ade16f81","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/source/css/_schemes/Mist/outline/outline.styl","hash":"dd55feb43312489b5ec5692cc9d83ad150d7b389","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/source/css/_schemes/Muse/sidebar/_sidebar.styl","hash":"bf035f3cb95f1cd0e5ee1244999f91a439c0c4f6","modified":1565442408119},{"_id":"themes/hexo-theme-next-master/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"a29de6af7503a854e962eca8a3b8b911525ef2e5","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/source/lib/canvas-nest/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1565411042849},{"_id":"themes/hexo-theme-next-master/source/lib/canvas-nest/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1565411042850},{"_id":"themes/hexo-theme-next-master/source/lib/canvas-nest/.git/hooks/fsmonitor-watchman.sample","hash":"f7c0aa40cb0d620ff0bca3efe3521ec79e5d7156","modified":1565411042855},{"_id":"themes/hexo-theme-next-master/source/lib/canvas-nest/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1565411042855},{"_id":"themes/hexo-theme-next-master/source/lib/canvas-nest/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1565411042856},{"_id":"themes/hexo-theme-next-master/source/lib/canvas-nest/.git/hooks/pre-commit.sample","hash":"33729ad4ce51acda35094e581e4088f3167a0af8","modified":1565411042857},{"_id":"themes/hexo-theme-next-master/source/lib/canvas-nest/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1565411042857},{"_id":"themes/hexo-theme-next-master/source/lib/canvas-nest/.git/hooks/pre-rebase.sample","hash":"288efdc0027db4cfd8b7c47c4aeddba09b6ded12","modified":1565411042858},{"_id":"themes/hexo-theme-next-master/source/lib/canvas-nest/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1565411042858},{"_id":"themes/hexo-theme-next-master/source/lib/canvas-nest/.git/hooks/prepare-commit-msg.sample","hash":"2584806ba147152ae005cb675aa4f01d5d068456","modified":1565411042859},{"_id":"themes/hexo-theme-next-master/source/lib/canvas-nest/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1565411042860},{"_id":"themes/hexo-theme-next-master/source/lib/canvas-nest/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1565411042860},{"_id":"themes/hexo-theme-next-master/source/lib/canvas-nest/.git/logs/HEAD","hash":"f88e1383a5a83d85680fa7ced84eb01e284352a1","modified":1565411048745},{"_id":"themes/hexo-theme-next-master/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/source/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1565349374000},{"_id":"themes/hexo-theme-next-master/source/lib/canvas-nest/.git/objects/0c/dada082d621dbfdd00f7020c33dc751129167f","hash":"b490c11cdefde6b331a7d4ddb055e34ad08459d8","modified":1565411046707},{"_id":"themes/hexo-theme-next-master/source/lib/canvas-nest/.git/objects/17/9eb5d6cd5f44ba3dd9e08b4ffcd83bb26db80a","hash":"03d593c92c9fad045d298f58afdbbcfbde923999","modified":1565411048437},{"_id":"themes/hexo-theme-next-master/source/lib/canvas-nest/.git/objects/2a/f622a4d7df40a2708946e91d6d7a0df1dc468c","hash":"3da7207fb18d361b83c56f4e35f67e9e945abd82","modified":1565411048037},{"_id":"themes/hexo-theme-next-master/source/lib/canvas-nest/.git/objects/44/6ddf9b6c0e5ade17ca5cb99f9b3a5300919c57","hash":"fb72799ff98445f72fda041337da4cf105d9dcba","modified":1565411047439},{"_id":"themes/hexo-theme-next-master/source/lib/canvas-nest/.git/objects/45/9262fe92f0115707bf8d8764f1886bc5e7c9e0","hash":"36040483f8af76775b7e4b6d87cec53729625399","modified":1565411048246},{"_id":"themes/hexo-theme-next-master/source/lib/canvas-nest/.git/objects/2f/9eba51ec174b1e0c719d12cafa7c3c07140471","hash":"fc994d9d8b3b21ec7c941eea7e3862970e297e9b","modified":1565411046836},{"_id":"themes/hexo-theme-next-master/source/lib/canvas-nest/.git/objects/46/cad4f872aa93e813aed99547c4705322ca483f","hash":"b0465d3186e2d58a8a99c56c6e68aa2965a396d4","modified":1565411045846},{"_id":"themes/hexo-theme-next-master/source/lib/canvas-nest/.git/objects/50/dd2a6539498a70226c81a587db486b47e839ff","hash":"3844b0c815d0b4b32c6312c751a826bf9dc2c945","modified":1565411045961},{"_id":"themes/hexo-theme-next-master/source/lib/canvas-nest/.git/objects/51/7c5eb7dcc2cb9769efea2e7375ff6e04123150","hash":"ec53157077d47430f4729bf164999d18d370aeab","modified":1565411047529},{"_id":"themes/hexo-theme-next-master/source/lib/canvas-nest/.git/objects/5a/69ce9c2e4a1a34f6063ae9a121af1555669c69","hash":"dad25cc0f450e2827b5676975f4a70636e3fd2c8","modified":1565411047032},{"_id":"themes/hexo-theme-next-master/source/lib/canvas-nest/.git/objects/5e/8ae972c99b04af7dd56dabfc485e8fdae5094d","hash":"791b3349c5696ccacae00bffbdbb8d88a03e61a9","modified":1565411046063},{"_id":"themes/hexo-theme-next-master/source/lib/canvas-nest/.git/objects/69/39233ece53c9bdb9a1faf3271ed5768b034aad","hash":"5a770d418c1bb7b0f031f4d5416530002032fcf3","modified":1565411047341},{"_id":"themes/hexo-theme-next-master/source/lib/canvas-nest/.git/objects/69/a20d65d83035fdb01734a8eabe3340f740a4cb","hash":"9e95b02d8e43ec92e06bee3f60dffb74e8e7b9fa","modified":1565411046941},{"_id":"themes/hexo-theme-next-master/source/lib/canvas-nest/.git/objects/75/de2b8fa62d52690de32c351c63ab6446104ed5","hash":"52d10122d633ce4895a0690c5955e1b356f5a391","modified":1565411048141},{"_id":"themes/hexo-theme-next-master/source/lib/canvas-nest/.git/objects/7b/c7e3186212b6f2e06d3370502565e2c6326890","hash":"379f3c6486f589fc9c1ab07d0382adacf4f655a2","modified":1565411046149},{"_id":"themes/hexo-theme-next-master/source/lib/canvas-nest/.git/objects/86/1c9f4241fe0eb6af02ad770d5ce04c1f68972b","hash":"7005c3e36015a4af30d4b91bd5a849a7861a073e","modified":1565411047942},{"_id":"themes/hexo-theme-next-master/source/lib/canvas-nest/.git/objects/90/f6477118d05f5f96ce0a63c6f18b7b2baea200","hash":"385f58e92981f27fa54eb52bf60424e87c70a9d8","modified":1565411046438},{"_id":"themes/hexo-theme-next-master/source/lib/canvas-nest/.git/objects/98/67d1132e0e50bbb7df754a63358d70741df6d5","hash":"3cb710a1faee73c08036f5e2df7df3a7ce29e9dd","modified":1565411046254},{"_id":"themes/hexo-theme-next-master/source/lib/canvas-nest/.git/objects/91/f99a0c53b26dd54f56b9e452c68f56b06f8f7e","hash":"3dca8a5629e66599b6e0f146aa32f1b7ce023d89","modified":1565411047838},{"_id":"themes/hexo-theme-next-master/source/lib/canvas-nest/.git/objects/99/be66a33ab4ebc34f62f2880a0e0cc6d334d0f2","hash":"f2346fe8ddd7d7abf38f2946f3083d8150f502d2","modified":1565411046626},{"_id":"themes/hexo-theme-next-master/source/lib/canvas-nest/.git/objects/aa/da83ad9aa55faa2b34ede31b1d41e16966f80b","hash":"b304541ab95b7969a63ba2ec4f60f5391bd8bb44","modified":1565411046337},{"_id":"themes/hexo-theme-next-master/source/lib/canvas-nest/.git/objects/b1/bb278ca2e50dff1b343f9d5ca025272859432f","hash":"74f0afa72a30268d84613fb0d1d893bba866f01d","modified":1565411047731},{"_id":"themes/hexo-theme-next-master/source/lib/canvas-nest/.git/objects/bb/5755c22b6c1b7461319624f0f000bc947882ee","hash":"2b87a2a354a0fa77cbddf461b03b0b8e43c16a4f","modified":1565411047249},{"_id":"themes/hexo-theme-next-master/source/lib/canvas-nest/.git/objects/ca/3466a8cbf05c2982c58199d6ee71ec6d0271ca","hash":"a9b80b5d827b5e84229b1afd7920d9218dce610f","modified":1565411046529},{"_id":"themes/hexo-theme-next-master/source/lib/canvas-nest/.git/objects/d4/95d28a8fab74d23908f6ccef9e4db2625fbacb","hash":"59e6067b0a806deee7bda6460b36c0f63e2e1db5","modified":1565411047625},{"_id":"themes/hexo-theme-next-master/source/lib/canvas-nest/.git/objects/d6/5de52977302632417c21e015956fb3dab8cabd","hash":"e0c8f0483b20434e63748a649ca4afbb417997f4","modified":1565411048538},{"_id":"themes/hexo-theme-next-master/source/lib/canvas-nest/.git/objects/e1/5c0793114874195462829db04d021face6640e","hash":"ff6c6d9f05b171ba67b44564ae3574d16eae6222","modified":1565411048331},{"_id":"themes/hexo-theme-next-master/source/lib/canvas-nest/.git/refs/heads/master","hash":"cea77028606e86b2fafcf54cf1591416192c5f15","modified":1565411048745},{"_id":"themes/hexo-theme-next-master/source/lib/canvas-nest/.git/logs/refs/heads/master","hash":"f88e1383a5a83d85680fa7ced84eb01e284352a1","modified":1565411048746},{"_id":"themes/hexo-theme-next-master/source/lib/canvas-nest/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1565411048742},{"_id":"themes/hexo-theme-next-master/source/lib/canvas-nest/.git/logs/refs/remotes/origin/HEAD","hash":"f88e1383a5a83d85680fa7ced84eb01e284352a1","modified":1565411048741}],"Category":[{"name":"技术","_id":"cjz5kjzt10005nwqqnuo6hy8k"}],"Data":[],"Page":[{"title":"categories","date":"2019-08-10T08:39:35.000Z","_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2019-08-10 16:39:35\n---\n","updated":"2019-08-10T08:39:35.840Z","path":"categories/index.html","comments":1,"layout":"page","_id":"cjz5kjzlz0001nwqq3vubvda5","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"tags","date":"2019-08-10T08:40:15.000Z","_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2019-08-10 16:40:15\n---\n","updated":"2019-08-10T08:40:15.709Z","path":"tags/index.html","comments":1,"layout":"page","_id":"cjz5kjzm60003nwqq8e8pmyot","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"mysql","date":"2019-08-10T05:54:21.000Z","_content":"#   MySQL\n\n## 数据库 MySQL ##\n\n### 数据库入门 ###\n\n未来我们程序中的数据为了方便管理都通过数据库来存储。\n\n作为前端开发人员，对数据库做一定了解即可。\n\n#### 数据库基础知识 ####\n\n- 什么是数据库\n  - 存储数据的仓库\n  - 使用数据库管理数据的好处\n    - 方便存储、查询、修改、删除\n  - 关系型数据库\n    - MySQL\n    - Sql Server\n    - Orcale\n    - SQLite\n- 数据表\n  - 二维的表，类似于Excel表\n  - 由行和列组成，列：字段，行：记录\n  - 字段的类型\n    - int 整数、double 浮点数、varchar(255) 字符串、text 文本、datetime 日期、float 浮点数\n\n#### MySQL 的服务器 ####\n\n- 下载地址：\n\n  - https://dev.mysql.com/downloads/mysql/5.7.html#downloads\n\n- MySQL 安装与配置\n\n  - 准备工作\n\n    在 **C 盘根目录**建立目录： c:\\develop\n\n  - 解压并移动位置\n\n    解压缩 mysql-5.7.23 的压缩包，将**其中**的 **`mysql-5.7.23-xxxxx` 目录**移动到 `C:\\develop` 目录下并把名字修改为 **`mysql`**\n\n  - MySQL 的配置文件 my.ini\n\n    在 `c:\\develop\\mysql` 目录下新建一个 `my.ini` 的配置文件\n\n    ```ini\n    [mysqld]\n    # MySQL 安装目录\n    basedir=C:/develop/mysql\n    # 数据文件所在目录\n    datadir=C:/develop/mysql/data\n    character-set-server=utf8\n    sql-mode=\"STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION\"\n    ```\n\n  - 以管理员身份运行 CMD 执行以下命令，安装一个 MySQL 服务\n\n    ```bash\n    # 定位到安装目录下的 bin 文件夹\n    # cd <MySQL安装目录>\\bin\n    cd c:\\develep\\mysql\\bin\n    # 初始化数据所需文件以及获取一个临时的访问密码\n    mysqld --initialize --user=mysql --console\n    ```\n\n    初始化成功如下图：记下临时密码(只能使用一次)\n\n    ![1545190967742](assets/1545190967742.png)\n\n    ```bash\n    # 将 MySQL 安装为服务 可以指定服务名称\n    mysqld --install MySQL\n    \n    # 没有以管理员的身份运行命令行\n    # 安装失败提示：Install/Remove of the Service Denied! \n    \n    # 安装成功后，启动 MySQL 服务器\n    net start MySQL\n    ```\n\n  - 重置 MySQL  密码\n\n    ```bash\n    # 先通过用户名密码进入 MySQL 操作环境\n    mysql -u root -p\n    Enter password: # 输入临时密码\n    \n    # 设置数据库访问密码，一定要加分号\n    mysql> set password for root@localhost = password('*******');\n    ```\n\n\n#### MySQL 的客户端 ####\n\n- 数据库的客户端 Navicat\n- 使用 Navicat 创建数据库\n- 使用 Navicat 创建表，添加数据\n\n### SQL ###\n\n要在程序中对数据库进行操作需要 SQL 语句\n\n- 什么是 SQL\n  - SQL 指结构化查询语言\n  - SQL 使我们有能力访问数据库\n  - [参考网站](http://www.w3school.com.cn/sql/index.asp)\n\n- 增删改查\n\n  - 插入数据\n\n    ```sql\n    INSERT INTO users (uname, upwd, uqq) values('zs','123', '12345')\n    INSERT INTO posts SET uname='zs', upwd='123', uqq='12345'\n    -- 如果是所有列，可以省略列名称，不推荐\n    INSERT INTO users values('zs','123', '12345')\n    ```\n\n  - 修改数据\n\n    ```sql\n    UPDATE users SET uname='zsxxx', uqq='111' WHERE uid=1\n    ```\n\n  - 删除数据\n\n    ```sql\n    DELETE FROM users WHERE uid = 1\n    -- 不带条件删除表中所有数据，禁止使用\n    DELETE FROM users\n    ```\n\n  - 查询数据\n\n    ```sql\n    SELECT * FROM users \n    ```\n\n### 查询 ###\n\n- 条件查询\n\n  ```sql\n  SELECT * FROM users WHERE uname='zs' AND uname='000000'\n  \n  SELECT * FROM users WHERE uname='zs' OR uname='ls'\n  ```\n  \n  下面的运算符可在 WHERE 子句中使用：\n  | 操作符  | 描述         |\n  | ------- | ------------ |\n  | =       | 等于         |\n  | <>      | 不等于       |\n  | >       | 大于         |\n  | <       | 小于         |\n  | >=      | 大于等于     |\n  | <=      | 小于等于     |\n  | BETWEEN | 在某个范围内 |\n  | LIKE    | 搜索某种模式 |\n\n- 模糊查询\n\n  ```sql\n  SELECT * FROM users WHERE uname like '%s%'\n  ```\n\n- in 语句\n\n  ```sql\n  SELECT * FROM users WHERE uname in ('zs','ls')\n  ```\n\n- 排序\n\n  order by 要写在 sql 语句的最后\n\n  ```sql\n  -- asc 升序  desc 降序\n  SELECT * FROM users ORDER BY DESC\n  SELECT * FROM users WHERE uage > 18 ORDER by desc\n  ```\n\n- 限制查询条数\n\n    ```sql\n    -- 取前3条数据\n    SELECT * FROM users LIMIT 3  \n    -- 降序后取3条数据\n    SELECT * FROM users ORDER BY DESC LIMIT 3\n    -- 跳过3条，取2条\n    SELECT * FROM users ORDER BY DESC LIMIT 3,2\n    ```\n\n- 获取总条数\n\n  ```sql\n  SELECT COUNT(*) FROM users\n  ```\n\n- 表连接\n\n  ```sql\n  SELECT column_name(s)\n  FROM table_name1\n  INNER JOIN table_name2 \n  ON table_name1.column_name=table_name2.column_name\n  ```\n\n## Node.js 中操作 MySQL ##\n\n### 使用 mysql 第三方包 ###\n\nhttps://github.com/mysqljs/mysql\n\n### 安装 ###\n\n```shell\nnpm install mysql\n```\n\n### Hello World ###\n\n```javascript\nvar mysql      = require('mysql');\nvar connection = mysql.createConnection({\n  host     : 'localhost',\n  user     : 'me',\n  password : 'secret',\n  database : 'my_db'\n});\n\nconnection.connect();\n\nconnection.query('SELECT 1 + 1 AS solution', function (error, results, fields) {\n  if (error) throw error;\n  console.log('The solution is: ', results[0].solution);\n});\n\nconnection.end();\n```\n\n------\n\n### 增删改查 ###\n\n#### 查询 ####\n\n基本查询：\n\n```javascript\nconnection.query('SELECT * FROM `books` WHERE `author` = \"David\"', function (error, results, fields) {\n  // error will be an Error if one occurred during the query\n  // results will contain the results of the query\n  // fields will contain information about the returned results fields (if any)\n});\n```\n\n条件查询：\n\n```javascript\nconnection.query('SELECT * FROM `books` WHERE `author` = ?', ['David'], function (error, results, fields) {\n  // error will be an Error if one occurred during the query\n  // results will contain the results of the query\n  // fields will contain information about the returned results fields (if any)\n});\n```\n\n#### 添加 ####\n\n```javascript\nvar post  = {id: 1, title: 'Hello MySQL'};\nvar query = connection.query('INSERT INTO posts SET ?', post, function (error, results, fields) {\n  if (error) throw error;\n  // Neat!\n});\nconsole.log(query.sql); // INSERT INTO posts SET `id` = 1, `title` = 'Hello MySQL'\n```\n\n#### 删除 ####\n\n```javascript\nconnection.query('DELETE FROM posts WHERE title = \"wrong\"', function (error, results, fields) {\n  if (error) throw error;\n  console.log('deleted ' + results.affectedRows + ' rows');\n})\n```\n\n#### 修改 ####\n\n```javascript\nconnection.query('UPDATE users SET foo = ?, bar = ?, baz = ? WHERE id = ?', ['a', 'b', 'c', userId], function (error, results, fields) {\n  if (error) throw error;\n  // ...\n})\n```\n\n### 封装 dbHelper.js ###\n\n```javascript\nconst mysql = require('mysql');\n\nvar connection = mysql.createConnection({\n  host     : 'localhost',\n  port     : 3306,\n  user     : 'root',\n  password : 'root',\n  database : 'guestbook'\n});\n\nexports.query = (sql, params, callback) => {\n  connection.connect();\n  connection.query(sql, params, function (error, results, fields) { \n    callback(error, results, fields);\n  });\n  connection.end();\n};\n\n```\n\n\n\n\n\n\n","source":"_posts/mysql.md","raw":"---\ntitle: mysql\ndate: 2019-08-10 13:54:21\ntags:\n---\n#   MySQL\n\n## 数据库 MySQL ##\n\n### 数据库入门 ###\n\n未来我们程序中的数据为了方便管理都通过数据库来存储。\n\n作为前端开发人员，对数据库做一定了解即可。\n\n#### 数据库基础知识 ####\n\n- 什么是数据库\n  - 存储数据的仓库\n  - 使用数据库管理数据的好处\n    - 方便存储、查询、修改、删除\n  - 关系型数据库\n    - MySQL\n    - Sql Server\n    - Orcale\n    - SQLite\n- 数据表\n  - 二维的表，类似于Excel表\n  - 由行和列组成，列：字段，行：记录\n  - 字段的类型\n    - int 整数、double 浮点数、varchar(255) 字符串、text 文本、datetime 日期、float 浮点数\n\n#### MySQL 的服务器 ####\n\n- 下载地址：\n\n  - https://dev.mysql.com/downloads/mysql/5.7.html#downloads\n\n- MySQL 安装与配置\n\n  - 准备工作\n\n    在 **C 盘根目录**建立目录： c:\\develop\n\n  - 解压并移动位置\n\n    解压缩 mysql-5.7.23 的压缩包，将**其中**的 **`mysql-5.7.23-xxxxx` 目录**移动到 `C:\\develop` 目录下并把名字修改为 **`mysql`**\n\n  - MySQL 的配置文件 my.ini\n\n    在 `c:\\develop\\mysql` 目录下新建一个 `my.ini` 的配置文件\n\n    ```ini\n    [mysqld]\n    # MySQL 安装目录\n    basedir=C:/develop/mysql\n    # 数据文件所在目录\n    datadir=C:/develop/mysql/data\n    character-set-server=utf8\n    sql-mode=\"STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION\"\n    ```\n\n  - 以管理员身份运行 CMD 执行以下命令，安装一个 MySQL 服务\n\n    ```bash\n    # 定位到安装目录下的 bin 文件夹\n    # cd <MySQL安装目录>\\bin\n    cd c:\\develep\\mysql\\bin\n    # 初始化数据所需文件以及获取一个临时的访问密码\n    mysqld --initialize --user=mysql --console\n    ```\n\n    初始化成功如下图：记下临时密码(只能使用一次)\n\n    ![1545190967742](assets/1545190967742.png)\n\n    ```bash\n    # 将 MySQL 安装为服务 可以指定服务名称\n    mysqld --install MySQL\n    \n    # 没有以管理员的身份运行命令行\n    # 安装失败提示：Install/Remove of the Service Denied! \n    \n    # 安装成功后，启动 MySQL 服务器\n    net start MySQL\n    ```\n\n  - 重置 MySQL  密码\n\n    ```bash\n    # 先通过用户名密码进入 MySQL 操作环境\n    mysql -u root -p\n    Enter password: # 输入临时密码\n    \n    # 设置数据库访问密码，一定要加分号\n    mysql> set password for root@localhost = password('*******');\n    ```\n\n\n#### MySQL 的客户端 ####\n\n- 数据库的客户端 Navicat\n- 使用 Navicat 创建数据库\n- 使用 Navicat 创建表，添加数据\n\n### SQL ###\n\n要在程序中对数据库进行操作需要 SQL 语句\n\n- 什么是 SQL\n  - SQL 指结构化查询语言\n  - SQL 使我们有能力访问数据库\n  - [参考网站](http://www.w3school.com.cn/sql/index.asp)\n\n- 增删改查\n\n  - 插入数据\n\n    ```sql\n    INSERT INTO users (uname, upwd, uqq) values('zs','123', '12345')\n    INSERT INTO posts SET uname='zs', upwd='123', uqq='12345'\n    -- 如果是所有列，可以省略列名称，不推荐\n    INSERT INTO users values('zs','123', '12345')\n    ```\n\n  - 修改数据\n\n    ```sql\n    UPDATE users SET uname='zsxxx', uqq='111' WHERE uid=1\n    ```\n\n  - 删除数据\n\n    ```sql\n    DELETE FROM users WHERE uid = 1\n    -- 不带条件删除表中所有数据，禁止使用\n    DELETE FROM users\n    ```\n\n  - 查询数据\n\n    ```sql\n    SELECT * FROM users \n    ```\n\n### 查询 ###\n\n- 条件查询\n\n  ```sql\n  SELECT * FROM users WHERE uname='zs' AND uname='000000'\n  \n  SELECT * FROM users WHERE uname='zs' OR uname='ls'\n  ```\n  \n  下面的运算符可在 WHERE 子句中使用：\n  | 操作符  | 描述         |\n  | ------- | ------------ |\n  | =       | 等于         |\n  | <>      | 不等于       |\n  | >       | 大于         |\n  | <       | 小于         |\n  | >=      | 大于等于     |\n  | <=      | 小于等于     |\n  | BETWEEN | 在某个范围内 |\n  | LIKE    | 搜索某种模式 |\n\n- 模糊查询\n\n  ```sql\n  SELECT * FROM users WHERE uname like '%s%'\n  ```\n\n- in 语句\n\n  ```sql\n  SELECT * FROM users WHERE uname in ('zs','ls')\n  ```\n\n- 排序\n\n  order by 要写在 sql 语句的最后\n\n  ```sql\n  -- asc 升序  desc 降序\n  SELECT * FROM users ORDER BY DESC\n  SELECT * FROM users WHERE uage > 18 ORDER by desc\n  ```\n\n- 限制查询条数\n\n    ```sql\n    -- 取前3条数据\n    SELECT * FROM users LIMIT 3  \n    -- 降序后取3条数据\n    SELECT * FROM users ORDER BY DESC LIMIT 3\n    -- 跳过3条，取2条\n    SELECT * FROM users ORDER BY DESC LIMIT 3,2\n    ```\n\n- 获取总条数\n\n  ```sql\n  SELECT COUNT(*) FROM users\n  ```\n\n- 表连接\n\n  ```sql\n  SELECT column_name(s)\n  FROM table_name1\n  INNER JOIN table_name2 \n  ON table_name1.column_name=table_name2.column_name\n  ```\n\n## Node.js 中操作 MySQL ##\n\n### 使用 mysql 第三方包 ###\n\nhttps://github.com/mysqljs/mysql\n\n### 安装 ###\n\n```shell\nnpm install mysql\n```\n\n### Hello World ###\n\n```javascript\nvar mysql      = require('mysql');\nvar connection = mysql.createConnection({\n  host     : 'localhost',\n  user     : 'me',\n  password : 'secret',\n  database : 'my_db'\n});\n\nconnection.connect();\n\nconnection.query('SELECT 1 + 1 AS solution', function (error, results, fields) {\n  if (error) throw error;\n  console.log('The solution is: ', results[0].solution);\n});\n\nconnection.end();\n```\n\n------\n\n### 增删改查 ###\n\n#### 查询 ####\n\n基本查询：\n\n```javascript\nconnection.query('SELECT * FROM `books` WHERE `author` = \"David\"', function (error, results, fields) {\n  // error will be an Error if one occurred during the query\n  // results will contain the results of the query\n  // fields will contain information about the returned results fields (if any)\n});\n```\n\n条件查询：\n\n```javascript\nconnection.query('SELECT * FROM `books` WHERE `author` = ?', ['David'], function (error, results, fields) {\n  // error will be an Error if one occurred during the query\n  // results will contain the results of the query\n  // fields will contain information about the returned results fields (if any)\n});\n```\n\n#### 添加 ####\n\n```javascript\nvar post  = {id: 1, title: 'Hello MySQL'};\nvar query = connection.query('INSERT INTO posts SET ?', post, function (error, results, fields) {\n  if (error) throw error;\n  // Neat!\n});\nconsole.log(query.sql); // INSERT INTO posts SET `id` = 1, `title` = 'Hello MySQL'\n```\n\n#### 删除 ####\n\n```javascript\nconnection.query('DELETE FROM posts WHERE title = \"wrong\"', function (error, results, fields) {\n  if (error) throw error;\n  console.log('deleted ' + results.affectedRows + ' rows');\n})\n```\n\n#### 修改 ####\n\n```javascript\nconnection.query('UPDATE users SET foo = ?, bar = ?, baz = ? WHERE id = ?', ['a', 'b', 'c', userId], function (error, results, fields) {\n  if (error) throw error;\n  // ...\n})\n```\n\n### 封装 dbHelper.js ###\n\n```javascript\nconst mysql = require('mysql');\n\nvar connection = mysql.createConnection({\n  host     : 'localhost',\n  port     : 3306,\n  user     : 'root',\n  password : 'root',\n  database : 'guestbook'\n});\n\nexports.query = (sql, params, callback) => {\n  connection.connect();\n  connection.query(sql, params, function (error, results, fields) { \n    callback(error, results, fields);\n  });\n  connection.end();\n};\n\n```\n\n\n\n\n\n\n","slug":"mysql","published":1,"updated":"2019-08-10T05:54:53.685Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjz5kjzlp0000nwqq4i280trq","content":"<h1 id=\"MySQL\"><a href=\"#MySQL\" class=\"headerlink\" title=\"MySQL\"></a>MySQL</h1><h2 id=\"数据库-MySQL\"><a href=\"#数据库-MySQL\" class=\"headerlink\" title=\"数据库 MySQL\"></a>数据库 MySQL</h2><h3 id=\"数据库入门\"><a href=\"#数据库入门\" class=\"headerlink\" title=\"数据库入门\"></a>数据库入门</h3><p>未来我们程序中的数据为了方便管理都通过数据库来存储。</p>\n<p>作为前端开发人员，对数据库做一定了解即可。</p>\n<h4 id=\"数据库基础知识\"><a href=\"#数据库基础知识\" class=\"headerlink\" title=\"数据库基础知识\"></a>数据库基础知识</h4><ul>\n<li>什么是数据库<ul>\n<li>存储数据的仓库</li>\n<li>使用数据库管理数据的好处<ul>\n<li>方便存储、查询、修改、删除</li>\n</ul>\n</li>\n<li>关系型数据库<ul>\n<li>MySQL</li>\n<li>Sql Server</li>\n<li>Orcale</li>\n<li>SQLite</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>数据表<ul>\n<li>二维的表，类似于Excel表</li>\n<li>由行和列组成，列：字段，行：记录</li>\n<li>字段的类型<ul>\n<li>int 整数、double 浮点数、varchar(255) 字符串、text 文本、datetime 日期、float 浮点数</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"MySQL-的服务器\"><a href=\"#MySQL-的服务器\" class=\"headerlink\" title=\"MySQL 的服务器\"></a>MySQL 的服务器</h4><ul>\n<li><p>下载地址：</p>\n<ul>\n<li><a href=\"https://dev.mysql.com/downloads/mysql/5.7.html#downloads\" target=\"_blank\" rel=\"noopener\">https://dev.mysql.com/downloads/mysql/5.7.html#downloads</a></li>\n</ul>\n</li>\n<li><p>MySQL 安装与配置</p>\n<ul>\n<li><p>准备工作</p>\n<p>在 <strong>C 盘根目录</strong>建立目录： c:\\develop</p>\n</li>\n<li><p>解压并移动位置</p>\n<p>解压缩 mysql-5.7.23 的压缩包，将<strong>其中</strong>的 <strong><code>mysql-5.7.23-xxxxx</code> 目录</strong>移动到 <code>C:\\develop</code> 目录下并把名字修改为 <strong><code>mysql</code></strong></p>\n</li>\n<li><p>MySQL 的配置文件 my.ini</p>\n<p>在 <code>c:\\develop\\mysql</code> 目录下新建一个 <code>my.ini</code> 的配置文件</p>\n<figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">[mysqld]</span></span><br><span class=\"line\"><span class=\"comment\"># MySQL 安装目录</span></span><br><span class=\"line\"><span class=\"attr\">basedir</span>=C:/develop/mysql</span><br><span class=\"line\"><span class=\"comment\"># 数据文件所在目录</span></span><br><span class=\"line\"><span class=\"attr\">datadir</span>=C:/develop/mysql/data</span><br><span class=\"line\"><span class=\"attr\">character-set-server</span>=utf8</span><br><span class=\"line\"><span class=\"attr\">sql-mode</span>=<span class=\"string\">\"STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION\"</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>以管理员身份运行 CMD 执行以下命令，安装一个 MySQL 服务</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 定位到安装目录下的 bin 文件夹</span></span><br><span class=\"line\"><span class=\"comment\"># cd &lt;MySQL安装目录&gt;\\bin</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> c:\\develep\\mysql\\bin</span><br><span class=\"line\"><span class=\"comment\"># 初始化数据所需文件以及获取一个临时的访问密码</span></span><br><span class=\"line\">mysqld --initialize --user=mysql --console</span><br></pre></td></tr></table></figure>\n\n<p>初始化成功如下图：记下临时密码(只能使用一次)</p>\n<p><img src=\"assets/1545190967742.png\" alt=\"1545190967742\"></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 将 MySQL 安装为服务 可以指定服务名称</span></span><br><span class=\"line\">mysqld --install MySQL</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 没有以管理员的身份运行命令行</span></span><br><span class=\"line\"><span class=\"comment\"># 安装失败提示：Install/Remove of the Service Denied! </span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 安装成功后，启动 MySQL 服务器</span></span><br><span class=\"line\">net start MySQL</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>重置 MySQL  密码</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 先通过用户名密码进入 MySQL 操作环境</span></span><br><span class=\"line\">mysql -u root -p</span><br><span class=\"line\">Enter password: <span class=\"comment\"># 输入临时密码</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 设置数据库访问密码，一定要加分号</span></span><br><span class=\"line\">mysql&gt; <span class=\"built_in\">set</span> password <span class=\"keyword\">for</span> root@localhost = password(<span class=\"string\">'*******'</span>);</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"MySQL-的客户端\"><a href=\"#MySQL-的客户端\" class=\"headerlink\" title=\"MySQL 的客户端\"></a>MySQL 的客户端</h4><ul>\n<li>数据库的客户端 Navicat</li>\n<li>使用 Navicat 创建数据库</li>\n<li>使用 Navicat 创建表，添加数据</li>\n</ul>\n<h3 id=\"SQL\"><a href=\"#SQL\" class=\"headerlink\" title=\"SQL\"></a>SQL</h3><p>要在程序中对数据库进行操作需要 SQL 语句</p>\n<ul>\n<li><p>什么是 SQL</p>\n<ul>\n<li>SQL 指结构化查询语言</li>\n<li>SQL 使我们有能力访问数据库</li>\n<li><a href=\"http://www.w3school.com.cn/sql/index.asp\" target=\"_blank\" rel=\"noopener\">参考网站</a></li>\n</ul>\n</li>\n<li><p>增删改查</p>\n<ul>\n<li><p>插入数据</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> <span class=\"keyword\">users</span> (uname, upwd, uqq) <span class=\"keyword\">values</span>(<span class=\"string\">'zs'</span>,<span class=\"string\">'123'</span>, <span class=\"string\">'12345'</span>)</span><br><span class=\"line\"><span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> posts <span class=\"keyword\">SET</span> uname=<span class=\"string\">'zs'</span>, upwd=<span class=\"string\">'123'</span>, uqq=<span class=\"string\">'12345'</span></span><br><span class=\"line\"><span class=\"comment\">-- 如果是所有列，可以省略列名称，不推荐</span></span><br><span class=\"line\"><span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> <span class=\"keyword\">users</span> <span class=\"keyword\">values</span>(<span class=\"string\">'zs'</span>,<span class=\"string\">'123'</span>, <span class=\"string\">'12345'</span>)</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>修改数据</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">UPDATE</span> <span class=\"keyword\">users</span> <span class=\"keyword\">SET</span> uname=<span class=\"string\">'zsxxx'</span>, uqq=<span class=\"string\">'111'</span> <span class=\"keyword\">WHERE</span> uid=<span class=\"number\">1</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>删除数据</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">DELETE</span> <span class=\"keyword\">FROM</span> <span class=\"keyword\">users</span> <span class=\"keyword\">WHERE</span> uid = <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"comment\">-- 不带条件删除表中所有数据，禁止使用</span></span><br><span class=\"line\"><span class=\"keyword\">DELETE</span> <span class=\"keyword\">FROM</span> <span class=\"keyword\">users</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>查询数据</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> * <span class=\"keyword\">FROM</span> <span class=\"keyword\">users</span></span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"查询\"><a href=\"#查询\" class=\"headerlink\" title=\"查询\"></a>查询</h3><ul>\n<li><p>条件查询</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> * <span class=\"keyword\">FROM</span> <span class=\"keyword\">users</span> <span class=\"keyword\">WHERE</span> uname=<span class=\"string\">'zs'</span> <span class=\"keyword\">AND</span> uname=<span class=\"string\">'000000'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> * <span class=\"keyword\">FROM</span> <span class=\"keyword\">users</span> <span class=\"keyword\">WHERE</span> uname=<span class=\"string\">'zs'</span> <span class=\"keyword\">OR</span> uname=<span class=\"string\">'ls'</span></span><br></pre></td></tr></table></figure>\n\n\n</li>\n</ul>\n<p>  下面的运算符可在 WHERE 子句中使用：<br>  | 操作符  | 描述         |<br>  | ——- | ———— |<br>  | =       | 等于         |<br>  | &lt;&gt;      | 不等于       |<br>  | &gt;       | 大于         |<br>  | &lt;       | 小于         |<br>  | &gt;=      | 大于等于     |<br>  | &lt;=      | 小于等于     |<br>  | BETWEEN | 在某个范围内 |<br>  | LIKE    | 搜索某种模式 |</p>\n<ul>\n<li><p>模糊查询</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> * <span class=\"keyword\">FROM</span> <span class=\"keyword\">users</span> <span class=\"keyword\">WHERE</span> uname <span class=\"keyword\">like</span> <span class=\"string\">'%s%'</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>in 语句</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> * <span class=\"keyword\">FROM</span> <span class=\"keyword\">users</span> <span class=\"keyword\">WHERE</span> uname <span class=\"keyword\">in</span> (<span class=\"string\">'zs'</span>,<span class=\"string\">'ls'</span>)</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>排序</p>\n<p>order by 要写在 sql 语句的最后</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- asc 升序  desc 降序</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> * <span class=\"keyword\">FROM</span> <span class=\"keyword\">users</span> <span class=\"keyword\">ORDER</span> <span class=\"keyword\">BY</span> <span class=\"keyword\">DESC</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> * <span class=\"keyword\">FROM</span> <span class=\"keyword\">users</span> <span class=\"keyword\">WHERE</span> uage &gt; <span class=\"number\">18</span> <span class=\"keyword\">ORDER</span> <span class=\"keyword\">by</span> <span class=\"keyword\">desc</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>限制查询条数</p>\n  <figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- 取前3条数据</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> * <span class=\"keyword\">FROM</span> <span class=\"keyword\">users</span> <span class=\"keyword\">LIMIT</span> <span class=\"number\">3</span>  </span><br><span class=\"line\"><span class=\"comment\">-- 降序后取3条数据</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> * <span class=\"keyword\">FROM</span> <span class=\"keyword\">users</span> <span class=\"keyword\">ORDER</span> <span class=\"keyword\">BY</span> <span class=\"keyword\">DESC</span> <span class=\"keyword\">LIMIT</span> <span class=\"number\">3</span></span><br><span class=\"line\"><span class=\"comment\">-- 跳过3条，取2条</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> * <span class=\"keyword\">FROM</span> <span class=\"keyword\">users</span> <span class=\"keyword\">ORDER</span> <span class=\"keyword\">BY</span> <span class=\"keyword\">DESC</span> <span class=\"keyword\">LIMIT</span> <span class=\"number\">3</span>,<span class=\"number\">2</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>获取总条数</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"keyword\">COUNT</span>(*) <span class=\"keyword\">FROM</span> <span class=\"keyword\">users</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>表连接</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> column_name(s)</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> table_name1</span><br><span class=\"line\"><span class=\"keyword\">INNER</span> <span class=\"keyword\">JOIN</span> table_name2 </span><br><span class=\"line\"><span class=\"keyword\">ON</span> table_name1.column_name=table_name2.column_name</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<h2 id=\"Node-js-中操作-MySQL\"><a href=\"#Node-js-中操作-MySQL\" class=\"headerlink\" title=\"Node.js 中操作 MySQL\"></a>Node.js 中操作 MySQL</h2><h3 id=\"使用-mysql-第三方包\"><a href=\"#使用-mysql-第三方包\" class=\"headerlink\" title=\"使用 mysql 第三方包\"></a>使用 mysql 第三方包</h3><p><a href=\"https://github.com/mysqljs/mysql\" target=\"_blank\" rel=\"noopener\">https://github.com/mysqljs/mysql</a></p>\n<h3 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install mysql</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Hello-World\"><a href=\"#Hello-World\" class=\"headerlink\" title=\"Hello World\"></a>Hello World</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> mysql      = <span class=\"built_in\">require</span>(<span class=\"string\">'mysql'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> connection = mysql.createConnection(&#123;</span><br><span class=\"line\">  host     : <span class=\"string\">'localhost'</span>,</span><br><span class=\"line\">  user     : <span class=\"string\">'me'</span>,</span><br><span class=\"line\">  password : <span class=\"string\">'secret'</span>,</span><br><span class=\"line\">  database : <span class=\"string\">'my_db'</span></span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">connection.connect();</span><br><span class=\"line\"></span><br><span class=\"line\">connection.query(<span class=\"string\">'SELECT 1 + 1 AS solution'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">error, results, fields</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (error) <span class=\"keyword\">throw</span> error;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">'The solution is: '</span>, results[<span class=\"number\">0</span>].solution);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">connection.end();</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h3 id=\"增删改查\"><a href=\"#增删改查\" class=\"headerlink\" title=\"增删改查\"></a>增删改查</h3><h4 id=\"查询-1\"><a href=\"#查询-1\" class=\"headerlink\" title=\"查询\"></a>查询</h4><p>基本查询：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">connection.query(<span class=\"string\">'SELECT * FROM `books` WHERE `author` = \"David\"'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">error, results, fields</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// error will be an Error if one occurred during the query</span></span><br><span class=\"line\">  <span class=\"comment\">// results will contain the results of the query</span></span><br><span class=\"line\">  <span class=\"comment\">// fields will contain information about the returned results fields (if any)</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>条件查询：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">connection.query(<span class=\"string\">'SELECT * FROM `books` WHERE `author` = ?'</span>, [<span class=\"string\">'David'</span>], <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">error, results, fields</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// error will be an Error if one occurred during the query</span></span><br><span class=\"line\">  <span class=\"comment\">// results will contain the results of the query</span></span><br><span class=\"line\">  <span class=\"comment\">// fields will contain information about the returned results fields (if any)</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"添加\"><a href=\"#添加\" class=\"headerlink\" title=\"添加\"></a>添加</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> post  = &#123;<span class=\"attr\">id</span>: <span class=\"number\">1</span>, <span class=\"attr\">title</span>: <span class=\"string\">'Hello MySQL'</span>&#125;;</span><br><span class=\"line\"><span class=\"keyword\">var</span> query = connection.query(<span class=\"string\">'INSERT INTO posts SET ?'</span>, post, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">error, results, fields</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (error) <span class=\"keyword\">throw</span> error;</span><br><span class=\"line\">  <span class=\"comment\">// Neat!</span></span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(query.sql); <span class=\"comment\">// INSERT INTO posts SET `id` = 1, `title` = 'Hello MySQL'</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"删除\"><a href=\"#删除\" class=\"headerlink\" title=\"删除\"></a>删除</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">connection.query(<span class=\"string\">'DELETE FROM posts WHERE title = \"wrong\"'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">error, results, fields</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (error) <span class=\"keyword\">throw</span> error;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">'deleted '</span> + results.affectedRows + <span class=\"string\">' rows'</span>);</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"修改\"><a href=\"#修改\" class=\"headerlink\" title=\"修改\"></a>修改</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">connection.query(<span class=\"string\">'UPDATE users SET foo = ?, bar = ?, baz = ? WHERE id = ?'</span>, [<span class=\"string\">'a'</span>, <span class=\"string\">'b'</span>, <span class=\"string\">'c'</span>, userId], <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">error, results, fields</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (error) <span class=\"keyword\">throw</span> error;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"封装-dbHelper-js\"><a href=\"#封装-dbHelper-js\" class=\"headerlink\" title=\"封装 dbHelper.js\"></a>封装 dbHelper.js</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> mysql = <span class=\"built_in\">require</span>(<span class=\"string\">'mysql'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> connection = mysql.createConnection(&#123;</span><br><span class=\"line\">  host     : <span class=\"string\">'localhost'</span>,</span><br><span class=\"line\">  port     : <span class=\"number\">3306</span>,</span><br><span class=\"line\">  user     : <span class=\"string\">'root'</span>,</span><br><span class=\"line\">  password : <span class=\"string\">'root'</span>,</span><br><span class=\"line\">  database : <span class=\"string\">'guestbook'</span></span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">exports.query = <span class=\"function\">(<span class=\"params\">sql, params, callback</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  connection.connect();</span><br><span class=\"line\">  connection.query(sql, params, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">error, results, fields</span>) </span>&#123; </span><br><span class=\"line\">    callback(error, results, fields);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">  connection.end();</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"MySQL\"><a href=\"#MySQL\" class=\"headerlink\" title=\"MySQL\"></a>MySQL</h1><h2 id=\"数据库-MySQL\"><a href=\"#数据库-MySQL\" class=\"headerlink\" title=\"数据库 MySQL\"></a>数据库 MySQL</h2><h3 id=\"数据库入门\"><a href=\"#数据库入门\" class=\"headerlink\" title=\"数据库入门\"></a>数据库入门</h3><p>未来我们程序中的数据为了方便管理都通过数据库来存储。</p>\n<p>作为前端开发人员，对数据库做一定了解即可。</p>\n<h4 id=\"数据库基础知识\"><a href=\"#数据库基础知识\" class=\"headerlink\" title=\"数据库基础知识\"></a>数据库基础知识</h4><ul>\n<li>什么是数据库<ul>\n<li>存储数据的仓库</li>\n<li>使用数据库管理数据的好处<ul>\n<li>方便存储、查询、修改、删除</li>\n</ul>\n</li>\n<li>关系型数据库<ul>\n<li>MySQL</li>\n<li>Sql Server</li>\n<li>Orcale</li>\n<li>SQLite</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>数据表<ul>\n<li>二维的表，类似于Excel表</li>\n<li>由行和列组成，列：字段，行：记录</li>\n<li>字段的类型<ul>\n<li>int 整数、double 浮点数、varchar(255) 字符串、text 文本、datetime 日期、float 浮点数</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"MySQL-的服务器\"><a href=\"#MySQL-的服务器\" class=\"headerlink\" title=\"MySQL 的服务器\"></a>MySQL 的服务器</h4><ul>\n<li><p>下载地址：</p>\n<ul>\n<li><a href=\"https://dev.mysql.com/downloads/mysql/5.7.html#downloads\" target=\"_blank\" rel=\"noopener\">https://dev.mysql.com/downloads/mysql/5.7.html#downloads</a></li>\n</ul>\n</li>\n<li><p>MySQL 安装与配置</p>\n<ul>\n<li><p>准备工作</p>\n<p>在 <strong>C 盘根目录</strong>建立目录： c:\\develop</p>\n</li>\n<li><p>解压并移动位置</p>\n<p>解压缩 mysql-5.7.23 的压缩包，将<strong>其中</strong>的 <strong><code>mysql-5.7.23-xxxxx</code> 目录</strong>移动到 <code>C:\\develop</code> 目录下并把名字修改为 <strong><code>mysql</code></strong></p>\n</li>\n<li><p>MySQL 的配置文件 my.ini</p>\n<p>在 <code>c:\\develop\\mysql</code> 目录下新建一个 <code>my.ini</code> 的配置文件</p>\n<figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">[mysqld]</span></span><br><span class=\"line\"><span class=\"comment\"># MySQL 安装目录</span></span><br><span class=\"line\"><span class=\"attr\">basedir</span>=C:/develop/mysql</span><br><span class=\"line\"><span class=\"comment\"># 数据文件所在目录</span></span><br><span class=\"line\"><span class=\"attr\">datadir</span>=C:/develop/mysql/data</span><br><span class=\"line\"><span class=\"attr\">character-set-server</span>=utf8</span><br><span class=\"line\"><span class=\"attr\">sql-mode</span>=<span class=\"string\">\"STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION\"</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>以管理员身份运行 CMD 执行以下命令，安装一个 MySQL 服务</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 定位到安装目录下的 bin 文件夹</span></span><br><span class=\"line\"><span class=\"comment\"># cd &lt;MySQL安装目录&gt;\\bin</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> c:\\develep\\mysql\\bin</span><br><span class=\"line\"><span class=\"comment\"># 初始化数据所需文件以及获取一个临时的访问密码</span></span><br><span class=\"line\">mysqld --initialize --user=mysql --console</span><br></pre></td></tr></table></figure>\n\n<p>初始化成功如下图：记下临时密码(只能使用一次)</p>\n<p><img src=\"assets/1545190967742.png\" alt=\"1545190967742\"></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 将 MySQL 安装为服务 可以指定服务名称</span></span><br><span class=\"line\">mysqld --install MySQL</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 没有以管理员的身份运行命令行</span></span><br><span class=\"line\"><span class=\"comment\"># 安装失败提示：Install/Remove of the Service Denied! </span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 安装成功后，启动 MySQL 服务器</span></span><br><span class=\"line\">net start MySQL</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>重置 MySQL  密码</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 先通过用户名密码进入 MySQL 操作环境</span></span><br><span class=\"line\">mysql -u root -p</span><br><span class=\"line\">Enter password: <span class=\"comment\"># 输入临时密码</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 设置数据库访问密码，一定要加分号</span></span><br><span class=\"line\">mysql&gt; <span class=\"built_in\">set</span> password <span class=\"keyword\">for</span> root@localhost = password(<span class=\"string\">'*******'</span>);</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"MySQL-的客户端\"><a href=\"#MySQL-的客户端\" class=\"headerlink\" title=\"MySQL 的客户端\"></a>MySQL 的客户端</h4><ul>\n<li>数据库的客户端 Navicat</li>\n<li>使用 Navicat 创建数据库</li>\n<li>使用 Navicat 创建表，添加数据</li>\n</ul>\n<h3 id=\"SQL\"><a href=\"#SQL\" class=\"headerlink\" title=\"SQL\"></a>SQL</h3><p>要在程序中对数据库进行操作需要 SQL 语句</p>\n<ul>\n<li><p>什么是 SQL</p>\n<ul>\n<li>SQL 指结构化查询语言</li>\n<li>SQL 使我们有能力访问数据库</li>\n<li><a href=\"http://www.w3school.com.cn/sql/index.asp\" target=\"_blank\" rel=\"noopener\">参考网站</a></li>\n</ul>\n</li>\n<li><p>增删改查</p>\n<ul>\n<li><p>插入数据</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> <span class=\"keyword\">users</span> (uname, upwd, uqq) <span class=\"keyword\">values</span>(<span class=\"string\">'zs'</span>,<span class=\"string\">'123'</span>, <span class=\"string\">'12345'</span>)</span><br><span class=\"line\"><span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> posts <span class=\"keyword\">SET</span> uname=<span class=\"string\">'zs'</span>, upwd=<span class=\"string\">'123'</span>, uqq=<span class=\"string\">'12345'</span></span><br><span class=\"line\"><span class=\"comment\">-- 如果是所有列，可以省略列名称，不推荐</span></span><br><span class=\"line\"><span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> <span class=\"keyword\">users</span> <span class=\"keyword\">values</span>(<span class=\"string\">'zs'</span>,<span class=\"string\">'123'</span>, <span class=\"string\">'12345'</span>)</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>修改数据</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">UPDATE</span> <span class=\"keyword\">users</span> <span class=\"keyword\">SET</span> uname=<span class=\"string\">'zsxxx'</span>, uqq=<span class=\"string\">'111'</span> <span class=\"keyword\">WHERE</span> uid=<span class=\"number\">1</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>删除数据</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">DELETE</span> <span class=\"keyword\">FROM</span> <span class=\"keyword\">users</span> <span class=\"keyword\">WHERE</span> uid = <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"comment\">-- 不带条件删除表中所有数据，禁止使用</span></span><br><span class=\"line\"><span class=\"keyword\">DELETE</span> <span class=\"keyword\">FROM</span> <span class=\"keyword\">users</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>查询数据</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> * <span class=\"keyword\">FROM</span> <span class=\"keyword\">users</span></span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"查询\"><a href=\"#查询\" class=\"headerlink\" title=\"查询\"></a>查询</h3><ul>\n<li><p>条件查询</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> * <span class=\"keyword\">FROM</span> <span class=\"keyword\">users</span> <span class=\"keyword\">WHERE</span> uname=<span class=\"string\">'zs'</span> <span class=\"keyword\">AND</span> uname=<span class=\"string\">'000000'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> * <span class=\"keyword\">FROM</span> <span class=\"keyword\">users</span> <span class=\"keyword\">WHERE</span> uname=<span class=\"string\">'zs'</span> <span class=\"keyword\">OR</span> uname=<span class=\"string\">'ls'</span></span><br></pre></td></tr></table></figure>\n\n\n</li>\n</ul>\n<p>  下面的运算符可在 WHERE 子句中使用：<br>  | 操作符  | 描述         |<br>  | ——- | ———— |<br>  | =       | 等于         |<br>  | &lt;&gt;      | 不等于       |<br>  | &gt;       | 大于         |<br>  | &lt;       | 小于         |<br>  | &gt;=      | 大于等于     |<br>  | &lt;=      | 小于等于     |<br>  | BETWEEN | 在某个范围内 |<br>  | LIKE    | 搜索某种模式 |</p>\n<ul>\n<li><p>模糊查询</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> * <span class=\"keyword\">FROM</span> <span class=\"keyword\">users</span> <span class=\"keyword\">WHERE</span> uname <span class=\"keyword\">like</span> <span class=\"string\">'%s%'</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>in 语句</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> * <span class=\"keyword\">FROM</span> <span class=\"keyword\">users</span> <span class=\"keyword\">WHERE</span> uname <span class=\"keyword\">in</span> (<span class=\"string\">'zs'</span>,<span class=\"string\">'ls'</span>)</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>排序</p>\n<p>order by 要写在 sql 语句的最后</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- asc 升序  desc 降序</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> * <span class=\"keyword\">FROM</span> <span class=\"keyword\">users</span> <span class=\"keyword\">ORDER</span> <span class=\"keyword\">BY</span> <span class=\"keyword\">DESC</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> * <span class=\"keyword\">FROM</span> <span class=\"keyword\">users</span> <span class=\"keyword\">WHERE</span> uage &gt; <span class=\"number\">18</span> <span class=\"keyword\">ORDER</span> <span class=\"keyword\">by</span> <span class=\"keyword\">desc</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>限制查询条数</p>\n  <figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- 取前3条数据</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> * <span class=\"keyword\">FROM</span> <span class=\"keyword\">users</span> <span class=\"keyword\">LIMIT</span> <span class=\"number\">3</span>  </span><br><span class=\"line\"><span class=\"comment\">-- 降序后取3条数据</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> * <span class=\"keyword\">FROM</span> <span class=\"keyword\">users</span> <span class=\"keyword\">ORDER</span> <span class=\"keyword\">BY</span> <span class=\"keyword\">DESC</span> <span class=\"keyword\">LIMIT</span> <span class=\"number\">3</span></span><br><span class=\"line\"><span class=\"comment\">-- 跳过3条，取2条</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> * <span class=\"keyword\">FROM</span> <span class=\"keyword\">users</span> <span class=\"keyword\">ORDER</span> <span class=\"keyword\">BY</span> <span class=\"keyword\">DESC</span> <span class=\"keyword\">LIMIT</span> <span class=\"number\">3</span>,<span class=\"number\">2</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>获取总条数</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"keyword\">COUNT</span>(*) <span class=\"keyword\">FROM</span> <span class=\"keyword\">users</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>表连接</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> column_name(s)</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> table_name1</span><br><span class=\"line\"><span class=\"keyword\">INNER</span> <span class=\"keyword\">JOIN</span> table_name2 </span><br><span class=\"line\"><span class=\"keyword\">ON</span> table_name1.column_name=table_name2.column_name</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<h2 id=\"Node-js-中操作-MySQL\"><a href=\"#Node-js-中操作-MySQL\" class=\"headerlink\" title=\"Node.js 中操作 MySQL\"></a>Node.js 中操作 MySQL</h2><h3 id=\"使用-mysql-第三方包\"><a href=\"#使用-mysql-第三方包\" class=\"headerlink\" title=\"使用 mysql 第三方包\"></a>使用 mysql 第三方包</h3><p><a href=\"https://github.com/mysqljs/mysql\" target=\"_blank\" rel=\"noopener\">https://github.com/mysqljs/mysql</a></p>\n<h3 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install mysql</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Hello-World\"><a href=\"#Hello-World\" class=\"headerlink\" title=\"Hello World\"></a>Hello World</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> mysql      = <span class=\"built_in\">require</span>(<span class=\"string\">'mysql'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> connection = mysql.createConnection(&#123;</span><br><span class=\"line\">  host     : <span class=\"string\">'localhost'</span>,</span><br><span class=\"line\">  user     : <span class=\"string\">'me'</span>,</span><br><span class=\"line\">  password : <span class=\"string\">'secret'</span>,</span><br><span class=\"line\">  database : <span class=\"string\">'my_db'</span></span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">connection.connect();</span><br><span class=\"line\"></span><br><span class=\"line\">connection.query(<span class=\"string\">'SELECT 1 + 1 AS solution'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">error, results, fields</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (error) <span class=\"keyword\">throw</span> error;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">'The solution is: '</span>, results[<span class=\"number\">0</span>].solution);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">connection.end();</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h3 id=\"增删改查\"><a href=\"#增删改查\" class=\"headerlink\" title=\"增删改查\"></a>增删改查</h3><h4 id=\"查询-1\"><a href=\"#查询-1\" class=\"headerlink\" title=\"查询\"></a>查询</h4><p>基本查询：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">connection.query(<span class=\"string\">'SELECT * FROM `books` WHERE `author` = \"David\"'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">error, results, fields</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// error will be an Error if one occurred during the query</span></span><br><span class=\"line\">  <span class=\"comment\">// results will contain the results of the query</span></span><br><span class=\"line\">  <span class=\"comment\">// fields will contain information about the returned results fields (if any)</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>条件查询：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">connection.query(<span class=\"string\">'SELECT * FROM `books` WHERE `author` = ?'</span>, [<span class=\"string\">'David'</span>], <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">error, results, fields</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// error will be an Error if one occurred during the query</span></span><br><span class=\"line\">  <span class=\"comment\">// results will contain the results of the query</span></span><br><span class=\"line\">  <span class=\"comment\">// fields will contain information about the returned results fields (if any)</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"添加\"><a href=\"#添加\" class=\"headerlink\" title=\"添加\"></a>添加</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> post  = &#123;<span class=\"attr\">id</span>: <span class=\"number\">1</span>, <span class=\"attr\">title</span>: <span class=\"string\">'Hello MySQL'</span>&#125;;</span><br><span class=\"line\"><span class=\"keyword\">var</span> query = connection.query(<span class=\"string\">'INSERT INTO posts SET ?'</span>, post, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">error, results, fields</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (error) <span class=\"keyword\">throw</span> error;</span><br><span class=\"line\">  <span class=\"comment\">// Neat!</span></span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(query.sql); <span class=\"comment\">// INSERT INTO posts SET `id` = 1, `title` = 'Hello MySQL'</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"删除\"><a href=\"#删除\" class=\"headerlink\" title=\"删除\"></a>删除</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">connection.query(<span class=\"string\">'DELETE FROM posts WHERE title = \"wrong\"'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">error, results, fields</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (error) <span class=\"keyword\">throw</span> error;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">'deleted '</span> + results.affectedRows + <span class=\"string\">' rows'</span>);</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"修改\"><a href=\"#修改\" class=\"headerlink\" title=\"修改\"></a>修改</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">connection.query(<span class=\"string\">'UPDATE users SET foo = ?, bar = ?, baz = ? WHERE id = ?'</span>, [<span class=\"string\">'a'</span>, <span class=\"string\">'b'</span>, <span class=\"string\">'c'</span>, userId], <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">error, results, fields</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (error) <span class=\"keyword\">throw</span> error;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"封装-dbHelper-js\"><a href=\"#封装-dbHelper-js\" class=\"headerlink\" title=\"封装 dbHelper.js\"></a>封装 dbHelper.js</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> mysql = <span class=\"built_in\">require</span>(<span class=\"string\">'mysql'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> connection = mysql.createConnection(&#123;</span><br><span class=\"line\">  host     : <span class=\"string\">'localhost'</span>,</span><br><span class=\"line\">  port     : <span class=\"number\">3306</span>,</span><br><span class=\"line\">  user     : <span class=\"string\">'root'</span>,</span><br><span class=\"line\">  password : <span class=\"string\">'root'</span>,</span><br><span class=\"line\">  database : <span class=\"string\">'guestbook'</span></span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">exports.query = <span class=\"function\">(<span class=\"params\">sql, params, callback</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  connection.connect();</span><br><span class=\"line\">  connection.query(sql, params, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">error, results, fields</span>) </span>&#123; </span><br><span class=\"line\">    callback(error, results, fields);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">  connection.end();</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n"},{"title":"Hello World","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","slug":"hello-world","published":1,"date":"2019-08-09T14:56:57.034Z","updated":"2019-08-09T14:56:57.034Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjz5kjzm20002nwqqjioj2e06","content":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n"},{"title":"git","_content":"\n\n\n# 1. git\n\n## 1.1. 学习目标\n\n- 理解\n  - 常用bash系统命令\n  - git 的概念\n  - git 和 svn 的区别\n  - git 的工作流程\n  - git 管理文件版本\n  - 使用远程仓库\n  - 分支管理\n  - 冲突\n- 应用\n\n\n\n## 1.2. 认识命令行 了解\n\n### 1.2.1. shell\n\n​\t**Shell** 俗称壳（用来区别于核），是指“提供使用者使用界面”的软件（命令解析器）\n\n如\n\n![1525664062775](medias/1525664062775.png)\n\n​\tcmd shell 是系统提供的最基本的shell，功能也相对基础。\n\n​\tpowser shell 和 git bash shell 可以理解是对 cmd shell 的一层封装，提供了更为强大的命令。\n\n​\t我们平常在系统上所进行的操作，如新增文件，编辑文件，删除文件等。其实底层都是通过一系列的命令来执行的。\n\n### 1.2.2. 常见bash命令\n\n```bash\npwd (Print Working Directory) 查看当前目录\n\ncd (Change Directory) 切换目录，如 cd /etc\n\nls (List) 查看当前目录下内容，如 ls \n\nmkdir (Make Directory) 创建目录，如 mkdir blog\n\ntouch 创建文件，如 touch index.html\n\ncat 查看文件全部内容，如 catindex.html\n\nrm (remove) 删除文件，如 rm index.html、rm -rf  blog\n\nrmdir (Remove Directory) 删除文件夹，只能删除空文件夹，不常用\n\nmv (move) 移动文件或重命名，如 mv index.html ./demo/index.html\n\ncp (copy) 复制文件，cp index.html ./demo/index.html\n\nhead 查看文件前几行，如 head -5 index.html\n\nhistory 查看操作历史\n\nwhoami 查看当前用户\n```\n\n【注意】，在命令行当中 使用快捷键 进行复制粘贴都是没有效果的。\n\n- ctrl + p 没有效果\n- ctrl + c  强制退出到 命令行当中\n\n### 1.2.3. vi编辑器\n\n- vi编辑器是Linux和Unix上最基本的文本编辑器。由于不需要图形界面，vi是效率很高的文本编辑器\n- vi编辑器提供了3种模式，分别是命令模式、插入模式、末行模式 每种模式有不同的功能\n\n![1525665671693](medias/1525665671693.png)\n\n```bash\na) 打开/创建文件， vi 文件路径\nb) 末行模式 :w保存，:w filenme另存为\nc) 末行模式 :q退出\nd) 末行模式 :wq保存并退出\ne) 末行模式 :e! 撤销更改，返回到上一次保存的状态\nf) 末行模式 :q! 不保存强制退出\n\n================================================================\n\nh) 命令模式 ZZ（大写）保存并退出\ni) 命令模式 u辙销操作，可多次使用\nj) 命令模式 dd删除当前行\nk) 命令模式 yy复制当前行\nl) 命令模式 p 粘贴内容\no) 命令模式 i进入编辑模式，当前光标处插入\np) 命令模式 a进入编辑模式，当前光标后插入\nq) 命令模式 A进入编辑模式，光标移动到行尾\nr) 命令模式 o进入编辑模式，当前行下面插入新行\ns) 命令模式 O进入编辑模式，当前行上面插入新行\n```\n\n\n\n## 1.3. git概述\n\n​\t**Git**是一款免费、开源的**分布式版本控制系统**，用于敏捷高效地处理任何或小或大的项目。\n\n它可以处理以下需求\n\n- 方便的和团队共享文件\n- 对文件进行版本的控制\n\n[Git百度百科](https://baike.baidu.com/item/GIT/12647237)\n\n## 1.4. git和svn对比\n\n### 1.4.1. svn\n\n​\tSVN是**集中式版本控制系统**，版本库是集中放在中央服务器的。\n\n每次需要获取最新的文件或者保存自己当前的记录时，都必须要连接到服务器才可以。\n\n**关键字**：\n\n- 集中式\n- 需要连接外网\n\n![1525849453223](medias/1525849453223.png)\n\n### 1.4.2. git\n\n​\tGit是**分布式版本控制系统**，它没有中央服务器，每个人的电脑就是一个完整的版本库。\n\n当需要和别人分享文件时时，再联网即可。\n\n**关键字**:\n\n- 分布式\n\n![1525849575573](medias/1525849575573.png)\n\n\n\n## 1.5. git 安装\n\n​\tGit可以在Linux、Unix、Mac和Windows这几大平台上正常运行使用。\n\n[下载地址](https://git-scm.com/download)\n\n![1525849875115](medias/1525849875115.png)\n\n​\t安装成功后（windows下），在系统的任意目录下 点击 鼠标右键   出现以下菜单，代表安装成功。\n\n![1525849962486](medias/1525849962486.png)\n\n## 1.6. 初次运行 Git 前的配置\n\n​\t在团队的项目开发中，当我们对进行文件的修改时，都应该告诉服务器 是**谁**做的修改。所以 需要 配置个人信息。\n\n### 1.6.1. 全局配置\n\n​\t打开 git 命令行工具   \n\n![1525850607969](medias/1525850607969.png)\n\n​\t输入\n\n```bash\n# 配置 用户名\ngit config --global  user.name  xxx \n\n# 配置 邮箱\ngit config --global  user.email  xxx \n\n# 查看用户名\ngit config   user.name  \n```\n\n\n\n## 1.7. git 基础\n\n​\t如 我们想使用 git 对 该目录进行版本控制  \n\n![1525851471188](medias/1525851471188.png)\n\n### 1.7.1. 创建版本库\n\n​\t在 `我的第一个网站` 目录 内   输入 `git init`  初始化 仓库 \n\n```bash\ngit init \n```\n\n​\t可以看到，在该目录下 多了一个 **隐藏文件夹**  `.git`   该文件夹便是实现存放版本记录的地方。**不要手动修改！**\n\n![1525851668248](medias/1525851668248.png)\n\n### 1.7.2. 添加到暂存区\n\n​\t现在我们的代码 和 git 仓库 还没有直接的联系  查看 git 仓库状态  输入 `git status`\n\n```bash\ngit status\n```\n\n![1525852100376](medias/1525852100376.png)\n\n​\t我们把添加跟踪的步骤，叫做 添加到 **暂存区**\n\n​\t输入  `git add *` 对所有文件进行跟踪\n\n```bash\ngit add * \n```\n\n​\t此时，重新 查看 仓库状态\n\n```bash\ngit status \n```\n\n![1525852288499](medias/1525852288499.png)\n\n​\t因此，我们可以 随时的  输入  `git status` 来查看当前仓库的状态，来获得 提示。\n\n### 1.7.3. 提交本地仓库\n\n​\t暂存区的意思 只是暂时存储文件，当需要把对文件的操作 **永久存储下来时**，需要在把暂存区中的文件提交到到本地仓库。\n\n​\t输入以下命令进行提交，同时 还需要备注 信息 如 `初始化项目` 、 `新增了购物接口` 等。\n\n```bash\ngit commit -m \"初始化项目\"\n```\n\n​\t重新输入 `git status` 查看git 仓库状态 \n\n![1525853095009](medias/1525853095009.png)\n\n### 1.7.4. 小结\n\n​\t把刚才操作的流程，换成专业的术语。\n\n- 工作目录 ：刚才操作的文件夹   `我的第一个网站` 就称为 **工作目录**\n- 暂存区 ： 是用来存放 对文件进行了 跟踪，但是还没有 提交到 **本地仓库** 的地方\n- 本地仓库： 最终实现 文件版本管理的地方。\n\n![1525853953043](medias/1525853953043.png)\n\n\n\n## 1.8. 修改文件\n\n​\t在上个操作的基础上，我们对文件进行修改，然后让 git 记录这次修改的操作。\n\n编辑 `index.html` 文件 输入 \n\n```html\n<h1>完成了登录页面的设计</h1>\n```\n\n​\t此 时 `index.html` 文件发生了修改  我们输入  `git status` 查看仓库状态 \n\n![1525854096520](medias/1525854096520.png)\n\n### 1.8.1. 添加到暂存区\n\n​\t以上的修改，可以理解为 完成了一个功能，此时，也需要将这些代码提交到 **本地仓库** 中进行记录管理。因此，先添加到 **暂存区** 再提交到 **本地仓库** 中即可。\n\n​\t将 修改的文件添加到 **暂存区**  输入 \n\n```bash\ngit add *\n```\n\n​\t查看git 仓库状态\n\n```\ngit status\n```\n\n![1525854150926](medias/1525854150926.png)\n\n\n\n### 1.8.2. 提交到本地仓库\n\n​\t将暂存区中的文件提交的 本地仓库 实现 版本 记录\n\n```bash\ngit commit -m \"完成了登录功能\"\n```\n\n​\t查看git 仓库状态\n\n```bash\ngit status\n```\n\n![1525854664486](medias/1525854664486.png)\n\n\n\n## 1.9. 删除文件\n\n​\t在git 仓库中，有时候删除一些无效的文件。以删除     `css/index.css` 为例\n\n​\t手动将该 文件夹整个删除     删除成功 如下 \n\n![1525855125140](medias/1525855125140.png)\n\n​\t查看仓库状态\n\n```bash\ngit status \n```\n\n![1525855216992](medias/1525855216992.png)\n\n### 1.9.1. 添加到暂存区\n\n​\t删除了 文件，也可以了解为是对项目 进行了一次升级改造，因此同样需要把该 操作 提交到 **本地仓库**\n\n​\t输入    `git add ./`   请注意 当添加删除操作时  使用 `git add *` 是无效的。（git add * 不会缓存删除操作）\n\n```bash\ngit add ./\n```\n\n![1525855744440](medias/1525855744440.png)\n\n### 1.9.2. 提交到本地仓库\n\n​\t把该 删除操作 提交到 **本地仓库** 实现 版本记录\n\n```bash\ngit commit -m \"删除了css文件夹\"\n```\n\n![1525855898836](medias/1525855898836.png)\n\n​\t查本地仓库的状态\n\n```bash\ngit status\n```\n\n![1525855957999](medias/1525855957999.png)\n\n\n\n## 1.10. 忽略文件\n\n​\t有时候，在工作目录下的某些文件，是属于私人的或者是项目运行所产生的临时文件，并不需要添加到 版本控制中。 如 新增一个文件 `私人密码`\n\n![1525858765405](medias/1525858765405.png)\n\n​\t查看git仓库状态\n\n```bash\ngit status\n```\n\n![1525859125972](medias/1525859125972.png)\n\n​\t此时 我们可以使用 git 规定的一个文件   `.gitignore`   在里面指定需要过滤的文件\n\n### 1.10.1. 创建 忽略文件清单\n\n​\t直接在windows 右键 新建文件  `gitignore`  会创建失败。\n\n​\t使用命令行的方式创建  \n\n```bash\ntouch .gitignore\n```\n\n​\t编辑   `.gitignore` 文件  直接写入 要忽略的文件名即可 \n\n```bash\n# 忽略该文件\n私人密码.txt\n```\n\n​\t查看git仓库状态 \n\n```bash\ngit status\n```\n\n![1525859577480](medias/1525859577480.png)\n\n\n\n大部分情况下，我们也需要将 `.gitignore` 文件一起提交到本地仓库中实行版本控制\n\n​\t添加到暂存区   该文件 使用 `git add * ` 无效 需要手动指定文件名 \n\n```bash\ngit add .gitignore\n```\n\n​\t提交到本地仓库\n\n```bash\ngit commit -m \"添加了忽略文件列表\"\n```\n\n### 1.10.2. 忽略文件语法\n\n- 语法大部分和正则类似\n\n- 空行或是以#开头的行即注释行将被忽略；\n\n  ```bash\n  # 这种是注释\n  ```\n\n- 以斜杠 “/” 结尾表示目录；\n\n  ```bash\n  css/\n  ```\n\n- 以星号 “*” 通配多个字符；\n\n  ```bash\n  *.js\n  ```\n\n- 以问号 “?” 通配单个字符\n\n- 以方括号 “[]” 包含单个字符的匹配列表；\n\n- 以叹号 “!” 表示不忽略(跟踪)匹配到的文件或目录；\n\n- 可以在前面添加斜杠 “/” 来避免递归\n\n  ```bash\n  # 忽略根目录下的 css 文件夹\n  /css\n  # 忽略所有的css文件夹\n  css/\n  ```\n\n  ​\n\n## 1.11. 推送到远程仓库\n\n因为在团队开发中，我们的项目文件是需要和组员进行分享的，所以实现这个功能，就必须得借助远程仓库。\n\n远程仓库只是 本地仓库的一个备份。\n\n目前 用得比较多的有 [github](https://github.com/) 和 [码云](https://gitee.com/)\n\n- github做为最著名的git仓库托管商,是行业内的绝对权威.它给无数的开发者提供了共同学习发展的平台.\n- 码云是github的国产版,对国人做了针对性的优化,在国内也是使用者众多\n\n我们主要演示 **github**的使用，码云 **强烈建议** 课下 自己学习使用。\n\n### 1.11.1. 注册 github\n\n先注册一个 github帐号\n\n![1525915907144](medias/1525915907144.png)\n\n### 1.11.2. 新建远程仓库\n\n**1 一个github帐号可以建立多个远程仓库，一般 一个项目使用一个仓库。**\n\n\n\n![1525916009292](medias/1525916009292.png)\n\n\n\n**2 填写仓库信息**\n\n\n\n![1525916256235](medias/1525916256235.png)\n\n\n\n**3 创建成功**\n\n\n\n![1525916479663](medias/1525916479663.png)\n\n### 1.11.3. 推送到远程仓库\n\n​\t远程仓库建立完毕之后，我们可以 将 之前的 本地仓库 `我的第一个网站` 推送到上面新建的 `test` 远程仓库上\n\n​\t先记录远程仓库的地址\n\n![1525916715340](medias/1525916715340.png)\n\n```bash\nhttps://github.com/itcastWsy/test.git\n```\n\n​\t把远程仓库 记录在一个 变量   `origin ` 上  该名字可自定义\n\n```bash\ngit remote add origin https://github.com/itcastWsy/test.git\n```\n\n​\t在推送到远程仓库之前，先确保 本地仓库已经 执行过 commit 了，这样 才会保证 本地仓库 和远程仓库一致。\n\n​\t查看本地仓库状态  \n\n```bash\ngit status\n```\n\n![1525917201540](medias/1525917201540.png)\n\n​\t开始推送\n\n```bash\ngit push -u origin master\n```\n\n​\t提示输入用户名 ，直接输入即可 如 ` itcastWsy`  然后按下回车  \n\n![1525917393459](medias/1525917393459.png)\n\n​\t提示输入密码\n\n![1525917512404](medias/1525917512404.png)\n\n没有看到报错，就是 推送成功\n\n![1525917563467](medias/1525917563467.png)\n\n同时，刷新一下 **github** 页面  看到远程仓库上 显示出 仓库的信息了。\n\n![1525917685788](medias/1525917685788.png)\n\n## 1.12. 从远程仓库克隆\n\n​\t假设 **建立本地仓库**、 **推送到远程仓库** 的工作都是项目经理完成了。此时，你做为一个新加入项目的 **程序猿**，要做的事就是从远程仓库上 **克隆** 代码。\n\n​\t问项目经理拿 远程仓库的地址\n\n```bash\nhttps://github.com/itcastWsy/test.git\n```\n\n​\t在你的电脑上任意目录下（如 桌面） 开始克隆 \n\n​\t在桌面上 打开 **git bash 命令行工具**  输入\n\n```bash\ngit clone https://github.com/itcastWsy/test.git\n```\n\n ![1525918417230](medias/1525918417230.png)\n\n\n\n## 1.13. 从远程仓库获取更新\n\n​\t此时，项目经理的代码  和 你的代码 是一模一样的。现在 项目经理 新增了一个文件   `home.html`,并把它提交到远程仓库上。\n\n- 新建 home.html 文件\n\n  ```bash\n  touch home.html\n  ```\n\n- 添加到暂存区\n\n  ```bash\n  git add *\n  ```\n\n- 提交到本地仓库\n\n  ```bash\n  git commit -m \"新增了home.html\"\n  ```\n\n- 推送到远程仓库\n\n  ```\n  git push \n  ```\n\n  ![1525919345574](medias/1525919345574.png)\n\n\n\n​\t查看远程仓库\n\n![1525919393855](medias/1525919393855.png)\n\n\n\n​\t那么现在 做为程序员的你 需要把代码 进行更新   \n\n​\t回到   `test` 文件夹内，打开 **git bash** 命令行\n\n![1525919520069](medias/1525919520069.png)\n\n输入以下命令 进行更新\n\n```\ngit pull\n```\n\n![1525919829352](medias/1525919829352.png)\n\n## 1.14. git clone 和 git pull 的区别\n\n- git clone 是克隆，只需要执行一次\n- git pull 是 更新，后期反复使用\n\n\n\n\n\n## 1.15. 还原文件到上次commit状态\n\n​\t假设做为程序员的你，刚刚把代码更新下来，便上厕所去了，这个时候你的熊孩子趁你不在，对着你的键盘就是一顿 啪啪啪 ，把你 **home.html**  文件敲得面目全非。\n\n​\t你现在想要做的事，就是把 **home.html** 还原到 拉取下来的状态。\n\n​\t原来的home.html 内容是空的。（你是不知道里面的内容的）\n\n​\t熊孩子 把 **home.html** 改成了\n\n```html\n<h1>钱多话少死的早</h1>\n```\n\n​\t开始还原，在   `test` 目录下，输入命令行\n\n```bash\ngit checkout  home.html\n```\n\n![1525922259127](medias/1525922259127.png)\n\n​\t如果想要还原多个文件，可以\n\n- 还原文件夹 css 文件夹\n\n  ```\n  git checkout css\n  ```\n\n- 还原当前目录的所有文件 \n\n  ```\n  git checkout ./ \n  ```\n\n  ​\n\n## 1.16. 查看版本历史\n\n​\t做为 新加入项目的你，想要了解 这个项目，到底做过了哪些版本，想要看到之前每一次提交时的备注信息 \n\n此时，你的 `test` 文件夹内  输入 命令进行查看\n\n```bash\ngit log\n```\n\n![1525920485139](medias/1525920485139.png)\n\n\n\n## 1.17. 还原到某一个版本\n\n​\t做为 新加入项目的你，来获取了最新的代码之后，发现项目太大了，你不好去学习和了解 其中的某一个模块的功能和代码。如\n\n![1525922607367](medias/1525922607367.png)\n\n此时，可以把整个项目 还原到 **完成了登录功能的状态**\n\n​\t记录 该版本的   `commit` 字段\n\n![1525922690195](medias/1525922690195.png)\n\n​\t\n\n```\n3db7762c593251f1a78e518fdd3ed6d6cad626bc\n```\n\n \t开始还原   （commit 字段 最少 写 6位）\n\n```bash\ngit reset -–hard 3db7762c593251f1a78e518fdd3ed6d6cad626bc\n```\n\n![1525922921419](medias/1525922921419.png)\n\n\n\n​\t如果，在次状态下又想回到 最新的版本  **新增了home.html** 呢  查看提交信息\n\n```\ngit log\n```\n\n​\t发现   `完成登录功能` 之后的日志信息 丢失了。\n\n![1525923215275](medias/1525923215275.png)\n\n​\t此时，输入 \n\n```bash\ngit reflog \n```\n\n![1525923554914](medias/1525923554914.png)\n\n​\t还原到最新的版本\n\n```\ngit reset --hard 5038cc9\n```\n\n![1525923659935](medias/1525923659935.png)\n\n### 1.17.1. 小结\n\n- `git checkout xxx` 只能还原文件到上一个版本\n- `git reset --hard 'commit的id'` 可以还原到任意版本\n- `git reflog` 可以查看丢失了的版本的日志信息\n\n\n\n## 1.18. 配置ssh\n\n​\t我们把文件从本地仓库推送到远程仓库的方式有两种\n\n- HTTPS 每次都要手动输入 用户名和密码 \n- SSH 配置证书后，不用手动输入用户名和密码\n\n### 1.18.1. 配置证书\n\n在git bash 命令行中输入  \n\n```bash\nssh-keygen -t rsa -C \"邮箱地址\"\n```\n\n然后一直按回车。直到出现如下界面 代表本地 证书生成成功\n\n![1525933559552](medias/1525933559552.png)\n\n输入命令 打印密钥\n\n```\ncat ~/.ssh/id_rsa.pub\n```\n\n![1525933696717](medias/1525933696717.png)\n\n按以下步骤进行粘贴即可\n\n![1525934009733](medias/1525934009733.png)\n\n\n\n输入\n\n```bash\nssh -T git@github.com\n```\n\n出现以下界面代表成功。如果失败，建议多尝试几次。\n\n![1525934471737](medias/1525934471737.png)\n\n\n\n### 1.18.2. 将提交方式 HTTPS   改为 SSH\n\n复制 **SSH** 地址\n\n![1525934827313](medias/1525934827313.png)\n\n![1525934868632](medias/1525934868632.png)\n\n```\ngit@github.com:itcastWsy/test.git\n```\n\n修改 **origin** 地址 \n\n因为之前已经将 地址 存入 **origin**  变量了 。查看 origin\n\n```bash\ngit remote -v\n```\n\n![1525934970736](medias/1525934970736.png)\n\n此时，将origin的地址 改为 **ssh** 地址即可\n\n```bash\ngit remote set-url origin git@github.com:itcastWsy/test.git\n```\n\n重新查看 `git remote -v`   发现修改成功\n\n![1525935054456](medias/1525935054456.png)\n\n\n\n按照以上步骤执行完毕之后，再次推送到远程仓库时，就不用再输入用户名和密码了。\n\n测试 \n\n![1525935332160](medias/1525935332160.png)\n\n\n\n\n\n## 1.19. 分支\n\n​\t其实我们在使用git的时候，一直在 git的主分支`master`也是默认分支下进行工作的。也可以手动开启另外的分支进行开发。\n\n​\t开启新的的分支时可以理解为复制了一个相同的副本.内容完全一样\n\n​\t分支的作用是提供了一种方便、高效的管理项目的手段。\n\n​\t学习分支,我们需要从需求入手\n\n![1528519197378](medias/1528519197378.png)\n\n​\t流程解释:\n\n1. 网站发布了第一个版本\n\n2. 此时,需要研发新功能1.1版本\n\n3. 开启新的分支`dev`进行研发\n\n   1. 研发成功，将分支`dev`合并到主分支`master`上,发布新版本1.1\n   2. 研发失败，直接删除分支`dev`即可\n\n   经过以上流程,我们可以在毫无风险的情况下开发新功能,不会影响到已经发布了的网站。\n\n### 1.19.1. 网站发布0版本\n\n在目下下,新建文件夹 `web`，并在里新建一个空的文件`index.html` 提交到本地仓库\n\n![1528519852700](medias/1528519852700.png)\n\n### 1.19.2. 开启新分支\n\n​\t在完成1.0版本发布后（commit之后），开启新分支 dev（dev为分支名）\n\n```bash\ngit branch dev\n```\n\n​\t查看当前仓库下的分支\n\n```bash\ngit branch \n```\n\n![1528520046133](medias/1528520046133.png)\n\n### 1.19.3. 切换分支\n\n​\t此时，需要手动切换分支到dev上，\n\n```bash\ngit checkout dev\n```\n\n![1528520161732](medias/1528520161732.png)\n\n### 1.19.4. 在分支dev上开发功能\n\n​\t此时，我们可以在分支dev上，放心的进行功能开发。编辑文件 `index.html` 添加一下内容 \n\n```\n开发新功能1.0\n```\n\n​\t提交到仓库\n\n```bash\ngit add .\ngit commit -m \"dev下开发新功能1.1\"\n```\n\n![1528520834607](medias/1528520834607.png)\n\n### 1.19.5. 合并分支\n\n​\t新功能开发完毕，需要将分支`dev`的代码合并到主分支`master`上\n\n1. 切换回主分支 `master`\n\n   ```bash\n   git checkout master\n   ```\n\n2. 合并分支 `dev`\n\n   ```bash\n   git merge dev\n   ```\n\n   ![1528521188063](medias/1528521188063.png)\n\n### 1.19.6. 删除分支\n\n既然 分支dev的功能已经完成，我们可以将其删除。\n\n```bash\ngit branch -d dev\n```\n\n![1525947107745](medias/1525947107745.png)\n\n查看git仓库下的分支，发现 分支dev 确实没有了\n\n![1525947206980](medias/1525947206980.png)\n\n## 1.20. 冲突\n\n​\t冲突是指当两个同名的文件进行合并时，会产生的一种场景。\n\n### 1.20.1. 冲突描述\n\n![1526001349246](medias/1526001349246.png)\n\n​\t当把       `我的代码`内的两个文件 拷贝到 `他的代码` 文件夹内时 \n\n![1526001545996](medias/1526001545996.png)\n\n​\t可以看到此时，冲突就产生了 因为电脑并不知道 你想要保留哪一份   `index.html` 文件（**home.html**没有冲突） ，于是，弹出对话框，让用户进行选择。\n\n​\t所以冲突具有以下特点\n\n- 在文件进行合并时容易产生\n- 冲突的解决方法，只能是用户决定\n\n\n\n## 1.21. 分支合并时的冲突\n\n​\t刚才的演示，是人为手动操作导致的。当我们使用分支，进行合并的时候，也会出现冲突，只不过这次冲突的 **提示框** 和 **解决方法** 都是通过 **命令行**来体现的。\n\n### 1.21.1. 初始化仓库\n\n1. 新建一个文件夹 `冲突的演示`\n2. 初始化 git 仓库 `git init`\n3. 新建文件 `index.html`\n4. 添加到暂存区 \n5. 提交到本地仓库\n\n![1526002222651](medias/1526002222651.png)\n\n​\t\n\n### 1.21.2. 开启 分支 dev\n\n​\t初始化完仓库之后，开启分支dev，此时 分支dev 的内容和主分支master 是一模一样的\n\n```bash\ngit branch dev\n```\n\n​\t![1526002370112](medias/1526002370112.png)\n\n![1526002472933](medias/1526002472933.png)\n\n​\t在分支master下，\n\n1. 编辑 **index.html**  输入  `主分支master下的编辑`\n2. 添加到暂存区 `git add *`\n3. 提交到本地仓库 `git commit -m \"master下修改了index.html\"`\n\n![1526002990206](medias/1526002990206.png)\n\n​\t切换到 分支 dev下\n\n1. 切换分支 `git checkout dev`\n\n   ![1526003304232](medias/1526003304232.png)\n\n2. 编辑 **index.html**  输入  `分支dev下的编辑`\n\n3. 添加到暂存区 `git add *`\n\n4. 提交到本地仓库 `git commit -m \"dev下修改了index.html\"`\n\n![1526003463186](medias/1526003463186.png)\n\n\n\n完成了以上操作之后，主分支**master**和 分支**dev** 下的index.html 分别是\n\n![1526003571578](medias/1526003571578.png)\n\n\n\n### 1.21.3. 合并冲突分支以及解决\n\n此时准备分支合并，\n\n1. 切换回主分支 `git checkout master`\n\n2. 执行合并 `git merge dev` 弹出提示 **文件合并产生冲突了**\n\n   ![1526003800813](medias/1526003800813.png)\n\n3. 此时，手动解决冲突，打开 `index.html` 文件 发现 \n\n   ![1526004039990](medias/1526004039990.png)\n\n4. 添加到暂存区 \n\n5. 提交到本地仓库 \n\n   ![1526004176375](medias/1526004176375.png)\n\n\n\n至此，冲突的产生以及解决，演示完毕。 强烈建议  自行多练习该步骤，了解每一步的含义。\n\n\n\n## 1.22. 常用git命令\n\n| 注解                              | 命令                        |\n| ------------------------------- | ------------------------- |\n| git reset HEAD XXX              | 从暂存区移出                    |\n| git diff                        | 查看编辑过的文件和 版本库的区别          |\n| git config user.name xxx        | 配置当前仓库的用户名                |\n| git config user.email xxx       | 配置当前仓库的邮箱                 |\n| git init                        | 初始化 git 仓库                |\n| git add xxx                     | 添加到暂存区                    |\n| git commit -m \"备注\"              | 提交到本地仓库                   |\n| git commit -m \"备注\" -a           | git add  和 git commit 的综合 |\n| git remote -v                   | 查看远程仓库地址                  |\n| git remote add 远程仓库名  远程仓库地址    | 添加远程仓库地址                  |\n| git remote rm 远程仓库名             | 删除远程仓库                    |\n| git remote set-url 远程仓库名 远程仓库地址 | 修改远程仓库地址                  |\n| git push 远程仓库地址 master          | 提交到远程仓库                   |\n| git push 远程仓库地址 master -u       | 提交到远程仓库 (以后 git push 即可)  |\n| git clone 远程仓库地址                | 克隆仓库                      |\n| git pull                        | 拉取更新                      |\n| ssh-keygen -t rsa -C \"邮箱地址\"     | 生成 ssh证书                  |\n| cat ~/.ssh/id_rsa.pub           | 查看ssh证书                   |\n| git reset --hard \"commit Id\"    | 还原到某版本                    |\n| git reset --hared HEAD^         | 还原到上一个版本                  |\n| git log                         | 查看版本历史                    |\n| git reflog                      | 查看更强大的版本历史                |\n| git checkout 文件名                | 还原文件到上一个版本                |\n| git branch 分支名                  | 创建分支                      |\n| git checkout 分支名                | 切换到分支                     |\n| git merge 分支名                   | 合并分支                      |\n| git branch                      | 查看分支                      |\n| git branch -d 分支名               | 删除分支                      |\n|                                 |                           |\n\n## 1.23. 扩展阅读\n\n[Pro Git](https://progit.bootcss.com/)\n\n[猴子都能看懂的git](https://backlog.com/git-tutorial/cn)\n\n[十分钟掌握bash 命令](https://www.cnblogs.com/savorboard/p/bash-guide.html)\n\n","source":"_posts/git.md","raw":"---\ntitle: git\ncategories: 技术\ntags: [编程,感悟]\n---\n\n\n\n# 1. git\n\n## 1.1. 学习目标\n\n- 理解\n  - 常用bash系统命令\n  - git 的概念\n  - git 和 svn 的区别\n  - git 的工作流程\n  - git 管理文件版本\n  - 使用远程仓库\n  - 分支管理\n  - 冲突\n- 应用\n\n\n\n## 1.2. 认识命令行 了解\n\n### 1.2.1. shell\n\n​\t**Shell** 俗称壳（用来区别于核），是指“提供使用者使用界面”的软件（命令解析器）\n\n如\n\n![1525664062775](medias/1525664062775.png)\n\n​\tcmd shell 是系统提供的最基本的shell，功能也相对基础。\n\n​\tpowser shell 和 git bash shell 可以理解是对 cmd shell 的一层封装，提供了更为强大的命令。\n\n​\t我们平常在系统上所进行的操作，如新增文件，编辑文件，删除文件等。其实底层都是通过一系列的命令来执行的。\n\n### 1.2.2. 常见bash命令\n\n```bash\npwd (Print Working Directory) 查看当前目录\n\ncd (Change Directory) 切换目录，如 cd /etc\n\nls (List) 查看当前目录下内容，如 ls \n\nmkdir (Make Directory) 创建目录，如 mkdir blog\n\ntouch 创建文件，如 touch index.html\n\ncat 查看文件全部内容，如 catindex.html\n\nrm (remove) 删除文件，如 rm index.html、rm -rf  blog\n\nrmdir (Remove Directory) 删除文件夹，只能删除空文件夹，不常用\n\nmv (move) 移动文件或重命名，如 mv index.html ./demo/index.html\n\ncp (copy) 复制文件，cp index.html ./demo/index.html\n\nhead 查看文件前几行，如 head -5 index.html\n\nhistory 查看操作历史\n\nwhoami 查看当前用户\n```\n\n【注意】，在命令行当中 使用快捷键 进行复制粘贴都是没有效果的。\n\n- ctrl + p 没有效果\n- ctrl + c  强制退出到 命令行当中\n\n### 1.2.3. vi编辑器\n\n- vi编辑器是Linux和Unix上最基本的文本编辑器。由于不需要图形界面，vi是效率很高的文本编辑器\n- vi编辑器提供了3种模式，分别是命令模式、插入模式、末行模式 每种模式有不同的功能\n\n![1525665671693](medias/1525665671693.png)\n\n```bash\na) 打开/创建文件， vi 文件路径\nb) 末行模式 :w保存，:w filenme另存为\nc) 末行模式 :q退出\nd) 末行模式 :wq保存并退出\ne) 末行模式 :e! 撤销更改，返回到上一次保存的状态\nf) 末行模式 :q! 不保存强制退出\n\n================================================================\n\nh) 命令模式 ZZ（大写）保存并退出\ni) 命令模式 u辙销操作，可多次使用\nj) 命令模式 dd删除当前行\nk) 命令模式 yy复制当前行\nl) 命令模式 p 粘贴内容\no) 命令模式 i进入编辑模式，当前光标处插入\np) 命令模式 a进入编辑模式，当前光标后插入\nq) 命令模式 A进入编辑模式，光标移动到行尾\nr) 命令模式 o进入编辑模式，当前行下面插入新行\ns) 命令模式 O进入编辑模式，当前行上面插入新行\n```\n\n\n\n## 1.3. git概述\n\n​\t**Git**是一款免费、开源的**分布式版本控制系统**，用于敏捷高效地处理任何或小或大的项目。\n\n它可以处理以下需求\n\n- 方便的和团队共享文件\n- 对文件进行版本的控制\n\n[Git百度百科](https://baike.baidu.com/item/GIT/12647237)\n\n## 1.4. git和svn对比\n\n### 1.4.1. svn\n\n​\tSVN是**集中式版本控制系统**，版本库是集中放在中央服务器的。\n\n每次需要获取最新的文件或者保存自己当前的记录时，都必须要连接到服务器才可以。\n\n**关键字**：\n\n- 集中式\n- 需要连接外网\n\n![1525849453223](medias/1525849453223.png)\n\n### 1.4.2. git\n\n​\tGit是**分布式版本控制系统**，它没有中央服务器，每个人的电脑就是一个完整的版本库。\n\n当需要和别人分享文件时时，再联网即可。\n\n**关键字**:\n\n- 分布式\n\n![1525849575573](medias/1525849575573.png)\n\n\n\n## 1.5. git 安装\n\n​\tGit可以在Linux、Unix、Mac和Windows这几大平台上正常运行使用。\n\n[下载地址](https://git-scm.com/download)\n\n![1525849875115](medias/1525849875115.png)\n\n​\t安装成功后（windows下），在系统的任意目录下 点击 鼠标右键   出现以下菜单，代表安装成功。\n\n![1525849962486](medias/1525849962486.png)\n\n## 1.6. 初次运行 Git 前的配置\n\n​\t在团队的项目开发中，当我们对进行文件的修改时，都应该告诉服务器 是**谁**做的修改。所以 需要 配置个人信息。\n\n### 1.6.1. 全局配置\n\n​\t打开 git 命令行工具   \n\n![1525850607969](medias/1525850607969.png)\n\n​\t输入\n\n```bash\n# 配置 用户名\ngit config --global  user.name  xxx \n\n# 配置 邮箱\ngit config --global  user.email  xxx \n\n# 查看用户名\ngit config   user.name  \n```\n\n\n\n## 1.7. git 基础\n\n​\t如 我们想使用 git 对 该目录进行版本控制  \n\n![1525851471188](medias/1525851471188.png)\n\n### 1.7.1. 创建版本库\n\n​\t在 `我的第一个网站` 目录 内   输入 `git init`  初始化 仓库 \n\n```bash\ngit init \n```\n\n​\t可以看到，在该目录下 多了一个 **隐藏文件夹**  `.git`   该文件夹便是实现存放版本记录的地方。**不要手动修改！**\n\n![1525851668248](medias/1525851668248.png)\n\n### 1.7.2. 添加到暂存区\n\n​\t现在我们的代码 和 git 仓库 还没有直接的联系  查看 git 仓库状态  输入 `git status`\n\n```bash\ngit status\n```\n\n![1525852100376](medias/1525852100376.png)\n\n​\t我们把添加跟踪的步骤，叫做 添加到 **暂存区**\n\n​\t输入  `git add *` 对所有文件进行跟踪\n\n```bash\ngit add * \n```\n\n​\t此时，重新 查看 仓库状态\n\n```bash\ngit status \n```\n\n![1525852288499](medias/1525852288499.png)\n\n​\t因此，我们可以 随时的  输入  `git status` 来查看当前仓库的状态，来获得 提示。\n\n### 1.7.3. 提交本地仓库\n\n​\t暂存区的意思 只是暂时存储文件，当需要把对文件的操作 **永久存储下来时**，需要在把暂存区中的文件提交到到本地仓库。\n\n​\t输入以下命令进行提交，同时 还需要备注 信息 如 `初始化项目` 、 `新增了购物接口` 等。\n\n```bash\ngit commit -m \"初始化项目\"\n```\n\n​\t重新输入 `git status` 查看git 仓库状态 \n\n![1525853095009](medias/1525853095009.png)\n\n### 1.7.4. 小结\n\n​\t把刚才操作的流程，换成专业的术语。\n\n- 工作目录 ：刚才操作的文件夹   `我的第一个网站` 就称为 **工作目录**\n- 暂存区 ： 是用来存放 对文件进行了 跟踪，但是还没有 提交到 **本地仓库** 的地方\n- 本地仓库： 最终实现 文件版本管理的地方。\n\n![1525853953043](medias/1525853953043.png)\n\n\n\n## 1.8. 修改文件\n\n​\t在上个操作的基础上，我们对文件进行修改，然后让 git 记录这次修改的操作。\n\n编辑 `index.html` 文件 输入 \n\n```html\n<h1>完成了登录页面的设计</h1>\n```\n\n​\t此 时 `index.html` 文件发生了修改  我们输入  `git status` 查看仓库状态 \n\n![1525854096520](medias/1525854096520.png)\n\n### 1.8.1. 添加到暂存区\n\n​\t以上的修改，可以理解为 完成了一个功能，此时，也需要将这些代码提交到 **本地仓库** 中进行记录管理。因此，先添加到 **暂存区** 再提交到 **本地仓库** 中即可。\n\n​\t将 修改的文件添加到 **暂存区**  输入 \n\n```bash\ngit add *\n```\n\n​\t查看git 仓库状态\n\n```\ngit status\n```\n\n![1525854150926](medias/1525854150926.png)\n\n\n\n### 1.8.2. 提交到本地仓库\n\n​\t将暂存区中的文件提交的 本地仓库 实现 版本 记录\n\n```bash\ngit commit -m \"完成了登录功能\"\n```\n\n​\t查看git 仓库状态\n\n```bash\ngit status\n```\n\n![1525854664486](medias/1525854664486.png)\n\n\n\n## 1.9. 删除文件\n\n​\t在git 仓库中，有时候删除一些无效的文件。以删除     `css/index.css` 为例\n\n​\t手动将该 文件夹整个删除     删除成功 如下 \n\n![1525855125140](medias/1525855125140.png)\n\n​\t查看仓库状态\n\n```bash\ngit status \n```\n\n![1525855216992](medias/1525855216992.png)\n\n### 1.9.1. 添加到暂存区\n\n​\t删除了 文件，也可以了解为是对项目 进行了一次升级改造，因此同样需要把该 操作 提交到 **本地仓库**\n\n​\t输入    `git add ./`   请注意 当添加删除操作时  使用 `git add *` 是无效的。（git add * 不会缓存删除操作）\n\n```bash\ngit add ./\n```\n\n![1525855744440](medias/1525855744440.png)\n\n### 1.9.2. 提交到本地仓库\n\n​\t把该 删除操作 提交到 **本地仓库** 实现 版本记录\n\n```bash\ngit commit -m \"删除了css文件夹\"\n```\n\n![1525855898836](medias/1525855898836.png)\n\n​\t查本地仓库的状态\n\n```bash\ngit status\n```\n\n![1525855957999](medias/1525855957999.png)\n\n\n\n## 1.10. 忽略文件\n\n​\t有时候，在工作目录下的某些文件，是属于私人的或者是项目运行所产生的临时文件，并不需要添加到 版本控制中。 如 新增一个文件 `私人密码`\n\n![1525858765405](medias/1525858765405.png)\n\n​\t查看git仓库状态\n\n```bash\ngit status\n```\n\n![1525859125972](medias/1525859125972.png)\n\n​\t此时 我们可以使用 git 规定的一个文件   `.gitignore`   在里面指定需要过滤的文件\n\n### 1.10.1. 创建 忽略文件清单\n\n​\t直接在windows 右键 新建文件  `gitignore`  会创建失败。\n\n​\t使用命令行的方式创建  \n\n```bash\ntouch .gitignore\n```\n\n​\t编辑   `.gitignore` 文件  直接写入 要忽略的文件名即可 \n\n```bash\n# 忽略该文件\n私人密码.txt\n```\n\n​\t查看git仓库状态 \n\n```bash\ngit status\n```\n\n![1525859577480](medias/1525859577480.png)\n\n\n\n大部分情况下，我们也需要将 `.gitignore` 文件一起提交到本地仓库中实行版本控制\n\n​\t添加到暂存区   该文件 使用 `git add * ` 无效 需要手动指定文件名 \n\n```bash\ngit add .gitignore\n```\n\n​\t提交到本地仓库\n\n```bash\ngit commit -m \"添加了忽略文件列表\"\n```\n\n### 1.10.2. 忽略文件语法\n\n- 语法大部分和正则类似\n\n- 空行或是以#开头的行即注释行将被忽略；\n\n  ```bash\n  # 这种是注释\n  ```\n\n- 以斜杠 “/” 结尾表示目录；\n\n  ```bash\n  css/\n  ```\n\n- 以星号 “*” 通配多个字符；\n\n  ```bash\n  *.js\n  ```\n\n- 以问号 “?” 通配单个字符\n\n- 以方括号 “[]” 包含单个字符的匹配列表；\n\n- 以叹号 “!” 表示不忽略(跟踪)匹配到的文件或目录；\n\n- 可以在前面添加斜杠 “/” 来避免递归\n\n  ```bash\n  # 忽略根目录下的 css 文件夹\n  /css\n  # 忽略所有的css文件夹\n  css/\n  ```\n\n  ​\n\n## 1.11. 推送到远程仓库\n\n因为在团队开发中，我们的项目文件是需要和组员进行分享的，所以实现这个功能，就必须得借助远程仓库。\n\n远程仓库只是 本地仓库的一个备份。\n\n目前 用得比较多的有 [github](https://github.com/) 和 [码云](https://gitee.com/)\n\n- github做为最著名的git仓库托管商,是行业内的绝对权威.它给无数的开发者提供了共同学习发展的平台.\n- 码云是github的国产版,对国人做了针对性的优化,在国内也是使用者众多\n\n我们主要演示 **github**的使用，码云 **强烈建议** 课下 自己学习使用。\n\n### 1.11.1. 注册 github\n\n先注册一个 github帐号\n\n![1525915907144](medias/1525915907144.png)\n\n### 1.11.2. 新建远程仓库\n\n**1 一个github帐号可以建立多个远程仓库，一般 一个项目使用一个仓库。**\n\n\n\n![1525916009292](medias/1525916009292.png)\n\n\n\n**2 填写仓库信息**\n\n\n\n![1525916256235](medias/1525916256235.png)\n\n\n\n**3 创建成功**\n\n\n\n![1525916479663](medias/1525916479663.png)\n\n### 1.11.3. 推送到远程仓库\n\n​\t远程仓库建立完毕之后，我们可以 将 之前的 本地仓库 `我的第一个网站` 推送到上面新建的 `test` 远程仓库上\n\n​\t先记录远程仓库的地址\n\n![1525916715340](medias/1525916715340.png)\n\n```bash\nhttps://github.com/itcastWsy/test.git\n```\n\n​\t把远程仓库 记录在一个 变量   `origin ` 上  该名字可自定义\n\n```bash\ngit remote add origin https://github.com/itcastWsy/test.git\n```\n\n​\t在推送到远程仓库之前，先确保 本地仓库已经 执行过 commit 了，这样 才会保证 本地仓库 和远程仓库一致。\n\n​\t查看本地仓库状态  \n\n```bash\ngit status\n```\n\n![1525917201540](medias/1525917201540.png)\n\n​\t开始推送\n\n```bash\ngit push -u origin master\n```\n\n​\t提示输入用户名 ，直接输入即可 如 ` itcastWsy`  然后按下回车  \n\n![1525917393459](medias/1525917393459.png)\n\n​\t提示输入密码\n\n![1525917512404](medias/1525917512404.png)\n\n没有看到报错，就是 推送成功\n\n![1525917563467](medias/1525917563467.png)\n\n同时，刷新一下 **github** 页面  看到远程仓库上 显示出 仓库的信息了。\n\n![1525917685788](medias/1525917685788.png)\n\n## 1.12. 从远程仓库克隆\n\n​\t假设 **建立本地仓库**、 **推送到远程仓库** 的工作都是项目经理完成了。此时，你做为一个新加入项目的 **程序猿**，要做的事就是从远程仓库上 **克隆** 代码。\n\n​\t问项目经理拿 远程仓库的地址\n\n```bash\nhttps://github.com/itcastWsy/test.git\n```\n\n​\t在你的电脑上任意目录下（如 桌面） 开始克隆 \n\n​\t在桌面上 打开 **git bash 命令行工具**  输入\n\n```bash\ngit clone https://github.com/itcastWsy/test.git\n```\n\n ![1525918417230](medias/1525918417230.png)\n\n\n\n## 1.13. 从远程仓库获取更新\n\n​\t此时，项目经理的代码  和 你的代码 是一模一样的。现在 项目经理 新增了一个文件   `home.html`,并把它提交到远程仓库上。\n\n- 新建 home.html 文件\n\n  ```bash\n  touch home.html\n  ```\n\n- 添加到暂存区\n\n  ```bash\n  git add *\n  ```\n\n- 提交到本地仓库\n\n  ```bash\n  git commit -m \"新增了home.html\"\n  ```\n\n- 推送到远程仓库\n\n  ```\n  git push \n  ```\n\n  ![1525919345574](medias/1525919345574.png)\n\n\n\n​\t查看远程仓库\n\n![1525919393855](medias/1525919393855.png)\n\n\n\n​\t那么现在 做为程序员的你 需要把代码 进行更新   \n\n​\t回到   `test` 文件夹内，打开 **git bash** 命令行\n\n![1525919520069](medias/1525919520069.png)\n\n输入以下命令 进行更新\n\n```\ngit pull\n```\n\n![1525919829352](medias/1525919829352.png)\n\n## 1.14. git clone 和 git pull 的区别\n\n- git clone 是克隆，只需要执行一次\n- git pull 是 更新，后期反复使用\n\n\n\n\n\n## 1.15. 还原文件到上次commit状态\n\n​\t假设做为程序员的你，刚刚把代码更新下来，便上厕所去了，这个时候你的熊孩子趁你不在，对着你的键盘就是一顿 啪啪啪 ，把你 **home.html**  文件敲得面目全非。\n\n​\t你现在想要做的事，就是把 **home.html** 还原到 拉取下来的状态。\n\n​\t原来的home.html 内容是空的。（你是不知道里面的内容的）\n\n​\t熊孩子 把 **home.html** 改成了\n\n```html\n<h1>钱多话少死的早</h1>\n```\n\n​\t开始还原，在   `test` 目录下，输入命令行\n\n```bash\ngit checkout  home.html\n```\n\n![1525922259127](medias/1525922259127.png)\n\n​\t如果想要还原多个文件，可以\n\n- 还原文件夹 css 文件夹\n\n  ```\n  git checkout css\n  ```\n\n- 还原当前目录的所有文件 \n\n  ```\n  git checkout ./ \n  ```\n\n  ​\n\n## 1.16. 查看版本历史\n\n​\t做为 新加入项目的你，想要了解 这个项目，到底做过了哪些版本，想要看到之前每一次提交时的备注信息 \n\n此时，你的 `test` 文件夹内  输入 命令进行查看\n\n```bash\ngit log\n```\n\n![1525920485139](medias/1525920485139.png)\n\n\n\n## 1.17. 还原到某一个版本\n\n​\t做为 新加入项目的你，来获取了最新的代码之后，发现项目太大了，你不好去学习和了解 其中的某一个模块的功能和代码。如\n\n![1525922607367](medias/1525922607367.png)\n\n此时，可以把整个项目 还原到 **完成了登录功能的状态**\n\n​\t记录 该版本的   `commit` 字段\n\n![1525922690195](medias/1525922690195.png)\n\n​\t\n\n```\n3db7762c593251f1a78e518fdd3ed6d6cad626bc\n```\n\n \t开始还原   （commit 字段 最少 写 6位）\n\n```bash\ngit reset -–hard 3db7762c593251f1a78e518fdd3ed6d6cad626bc\n```\n\n![1525922921419](medias/1525922921419.png)\n\n\n\n​\t如果，在次状态下又想回到 最新的版本  **新增了home.html** 呢  查看提交信息\n\n```\ngit log\n```\n\n​\t发现   `完成登录功能` 之后的日志信息 丢失了。\n\n![1525923215275](medias/1525923215275.png)\n\n​\t此时，输入 \n\n```bash\ngit reflog \n```\n\n![1525923554914](medias/1525923554914.png)\n\n​\t还原到最新的版本\n\n```\ngit reset --hard 5038cc9\n```\n\n![1525923659935](medias/1525923659935.png)\n\n### 1.17.1. 小结\n\n- `git checkout xxx` 只能还原文件到上一个版本\n- `git reset --hard 'commit的id'` 可以还原到任意版本\n- `git reflog` 可以查看丢失了的版本的日志信息\n\n\n\n## 1.18. 配置ssh\n\n​\t我们把文件从本地仓库推送到远程仓库的方式有两种\n\n- HTTPS 每次都要手动输入 用户名和密码 \n- SSH 配置证书后，不用手动输入用户名和密码\n\n### 1.18.1. 配置证书\n\n在git bash 命令行中输入  \n\n```bash\nssh-keygen -t rsa -C \"邮箱地址\"\n```\n\n然后一直按回车。直到出现如下界面 代表本地 证书生成成功\n\n![1525933559552](medias/1525933559552.png)\n\n输入命令 打印密钥\n\n```\ncat ~/.ssh/id_rsa.pub\n```\n\n![1525933696717](medias/1525933696717.png)\n\n按以下步骤进行粘贴即可\n\n![1525934009733](medias/1525934009733.png)\n\n\n\n输入\n\n```bash\nssh -T git@github.com\n```\n\n出现以下界面代表成功。如果失败，建议多尝试几次。\n\n![1525934471737](medias/1525934471737.png)\n\n\n\n### 1.18.2. 将提交方式 HTTPS   改为 SSH\n\n复制 **SSH** 地址\n\n![1525934827313](medias/1525934827313.png)\n\n![1525934868632](medias/1525934868632.png)\n\n```\ngit@github.com:itcastWsy/test.git\n```\n\n修改 **origin** 地址 \n\n因为之前已经将 地址 存入 **origin**  变量了 。查看 origin\n\n```bash\ngit remote -v\n```\n\n![1525934970736](medias/1525934970736.png)\n\n此时，将origin的地址 改为 **ssh** 地址即可\n\n```bash\ngit remote set-url origin git@github.com:itcastWsy/test.git\n```\n\n重新查看 `git remote -v`   发现修改成功\n\n![1525935054456](medias/1525935054456.png)\n\n\n\n按照以上步骤执行完毕之后，再次推送到远程仓库时，就不用再输入用户名和密码了。\n\n测试 \n\n![1525935332160](medias/1525935332160.png)\n\n\n\n\n\n## 1.19. 分支\n\n​\t其实我们在使用git的时候，一直在 git的主分支`master`也是默认分支下进行工作的。也可以手动开启另外的分支进行开发。\n\n​\t开启新的的分支时可以理解为复制了一个相同的副本.内容完全一样\n\n​\t分支的作用是提供了一种方便、高效的管理项目的手段。\n\n​\t学习分支,我们需要从需求入手\n\n![1528519197378](medias/1528519197378.png)\n\n​\t流程解释:\n\n1. 网站发布了第一个版本\n\n2. 此时,需要研发新功能1.1版本\n\n3. 开启新的分支`dev`进行研发\n\n   1. 研发成功，将分支`dev`合并到主分支`master`上,发布新版本1.1\n   2. 研发失败，直接删除分支`dev`即可\n\n   经过以上流程,我们可以在毫无风险的情况下开发新功能,不会影响到已经发布了的网站。\n\n### 1.19.1. 网站发布0版本\n\n在目下下,新建文件夹 `web`，并在里新建一个空的文件`index.html` 提交到本地仓库\n\n![1528519852700](medias/1528519852700.png)\n\n### 1.19.2. 开启新分支\n\n​\t在完成1.0版本发布后（commit之后），开启新分支 dev（dev为分支名）\n\n```bash\ngit branch dev\n```\n\n​\t查看当前仓库下的分支\n\n```bash\ngit branch \n```\n\n![1528520046133](medias/1528520046133.png)\n\n### 1.19.3. 切换分支\n\n​\t此时，需要手动切换分支到dev上，\n\n```bash\ngit checkout dev\n```\n\n![1528520161732](medias/1528520161732.png)\n\n### 1.19.4. 在分支dev上开发功能\n\n​\t此时，我们可以在分支dev上，放心的进行功能开发。编辑文件 `index.html` 添加一下内容 \n\n```\n开发新功能1.0\n```\n\n​\t提交到仓库\n\n```bash\ngit add .\ngit commit -m \"dev下开发新功能1.1\"\n```\n\n![1528520834607](medias/1528520834607.png)\n\n### 1.19.5. 合并分支\n\n​\t新功能开发完毕，需要将分支`dev`的代码合并到主分支`master`上\n\n1. 切换回主分支 `master`\n\n   ```bash\n   git checkout master\n   ```\n\n2. 合并分支 `dev`\n\n   ```bash\n   git merge dev\n   ```\n\n   ![1528521188063](medias/1528521188063.png)\n\n### 1.19.6. 删除分支\n\n既然 分支dev的功能已经完成，我们可以将其删除。\n\n```bash\ngit branch -d dev\n```\n\n![1525947107745](medias/1525947107745.png)\n\n查看git仓库下的分支，发现 分支dev 确实没有了\n\n![1525947206980](medias/1525947206980.png)\n\n## 1.20. 冲突\n\n​\t冲突是指当两个同名的文件进行合并时，会产生的一种场景。\n\n### 1.20.1. 冲突描述\n\n![1526001349246](medias/1526001349246.png)\n\n​\t当把       `我的代码`内的两个文件 拷贝到 `他的代码` 文件夹内时 \n\n![1526001545996](medias/1526001545996.png)\n\n​\t可以看到此时，冲突就产生了 因为电脑并不知道 你想要保留哪一份   `index.html` 文件（**home.html**没有冲突） ，于是，弹出对话框，让用户进行选择。\n\n​\t所以冲突具有以下特点\n\n- 在文件进行合并时容易产生\n- 冲突的解决方法，只能是用户决定\n\n\n\n## 1.21. 分支合并时的冲突\n\n​\t刚才的演示，是人为手动操作导致的。当我们使用分支，进行合并的时候，也会出现冲突，只不过这次冲突的 **提示框** 和 **解决方法** 都是通过 **命令行**来体现的。\n\n### 1.21.1. 初始化仓库\n\n1. 新建一个文件夹 `冲突的演示`\n2. 初始化 git 仓库 `git init`\n3. 新建文件 `index.html`\n4. 添加到暂存区 \n5. 提交到本地仓库\n\n![1526002222651](medias/1526002222651.png)\n\n​\t\n\n### 1.21.2. 开启 分支 dev\n\n​\t初始化完仓库之后，开启分支dev，此时 分支dev 的内容和主分支master 是一模一样的\n\n```bash\ngit branch dev\n```\n\n​\t![1526002370112](medias/1526002370112.png)\n\n![1526002472933](medias/1526002472933.png)\n\n​\t在分支master下，\n\n1. 编辑 **index.html**  输入  `主分支master下的编辑`\n2. 添加到暂存区 `git add *`\n3. 提交到本地仓库 `git commit -m \"master下修改了index.html\"`\n\n![1526002990206](medias/1526002990206.png)\n\n​\t切换到 分支 dev下\n\n1. 切换分支 `git checkout dev`\n\n   ![1526003304232](medias/1526003304232.png)\n\n2. 编辑 **index.html**  输入  `分支dev下的编辑`\n\n3. 添加到暂存区 `git add *`\n\n4. 提交到本地仓库 `git commit -m \"dev下修改了index.html\"`\n\n![1526003463186](medias/1526003463186.png)\n\n\n\n完成了以上操作之后，主分支**master**和 分支**dev** 下的index.html 分别是\n\n![1526003571578](medias/1526003571578.png)\n\n\n\n### 1.21.3. 合并冲突分支以及解决\n\n此时准备分支合并，\n\n1. 切换回主分支 `git checkout master`\n\n2. 执行合并 `git merge dev` 弹出提示 **文件合并产生冲突了**\n\n   ![1526003800813](medias/1526003800813.png)\n\n3. 此时，手动解决冲突，打开 `index.html` 文件 发现 \n\n   ![1526004039990](medias/1526004039990.png)\n\n4. 添加到暂存区 \n\n5. 提交到本地仓库 \n\n   ![1526004176375](medias/1526004176375.png)\n\n\n\n至此，冲突的产生以及解决，演示完毕。 强烈建议  自行多练习该步骤，了解每一步的含义。\n\n\n\n## 1.22. 常用git命令\n\n| 注解                              | 命令                        |\n| ------------------------------- | ------------------------- |\n| git reset HEAD XXX              | 从暂存区移出                    |\n| git diff                        | 查看编辑过的文件和 版本库的区别          |\n| git config user.name xxx        | 配置当前仓库的用户名                |\n| git config user.email xxx       | 配置当前仓库的邮箱                 |\n| git init                        | 初始化 git 仓库                |\n| git add xxx                     | 添加到暂存区                    |\n| git commit -m \"备注\"              | 提交到本地仓库                   |\n| git commit -m \"备注\" -a           | git add  和 git commit 的综合 |\n| git remote -v                   | 查看远程仓库地址                  |\n| git remote add 远程仓库名  远程仓库地址    | 添加远程仓库地址                  |\n| git remote rm 远程仓库名             | 删除远程仓库                    |\n| git remote set-url 远程仓库名 远程仓库地址 | 修改远程仓库地址                  |\n| git push 远程仓库地址 master          | 提交到远程仓库                   |\n| git push 远程仓库地址 master -u       | 提交到远程仓库 (以后 git push 即可)  |\n| git clone 远程仓库地址                | 克隆仓库                      |\n| git pull                        | 拉取更新                      |\n| ssh-keygen -t rsa -C \"邮箱地址\"     | 生成 ssh证书                  |\n| cat ~/.ssh/id_rsa.pub           | 查看ssh证书                   |\n| git reset --hard \"commit Id\"    | 还原到某版本                    |\n| git reset --hared HEAD^         | 还原到上一个版本                  |\n| git log                         | 查看版本历史                    |\n| git reflog                      | 查看更强大的版本历史                |\n| git checkout 文件名                | 还原文件到上一个版本                |\n| git branch 分支名                  | 创建分支                      |\n| git checkout 分支名                | 切换到分支                     |\n| git merge 分支名                   | 合并分支                      |\n| git branch                      | 查看分支                      |\n| git branch -d 分支名               | 删除分支                      |\n|                                 |                           |\n\n## 1.23. 扩展阅读\n\n[Pro Git](https://progit.bootcss.com/)\n\n[猴子都能看懂的git](https://backlog.com/git-tutorial/cn)\n\n[十分钟掌握bash 命令](https://www.cnblogs.com/savorboard/p/bash-guide.html)\n\n","slug":"git","published":1,"date":"2019-08-10T04:58:27.590Z","updated":"2019-08-10T08:42:27.433Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjz5kjzsx0004nwqqx4kco9jy","content":"<h1 id=\"1-git\"><a href=\"#1-git\" class=\"headerlink\" title=\"1. git\"></a>1. git</h1><h2 id=\"1-1-学习目标\"><a href=\"#1-1-学习目标\" class=\"headerlink\" title=\"1.1. 学习目标\"></a>1.1. 学习目标</h2><ul>\n<li>理解<ul>\n<li>常用bash系统命令</li>\n<li>git 的概念</li>\n<li>git 和 svn 的区别</li>\n<li>git 的工作流程</li>\n<li>git 管理文件版本</li>\n<li>使用远程仓库</li>\n<li>分支管理</li>\n<li>冲突</li>\n</ul>\n</li>\n<li>应用</li>\n</ul>\n<h2 id=\"1-2-认识命令行-了解\"><a href=\"#1-2-认识命令行-了解\" class=\"headerlink\" title=\"1.2. 认识命令行 了解\"></a>1.2. 认识命令行 了解</h2><h3 id=\"1-2-1-shell\"><a href=\"#1-2-1-shell\" class=\"headerlink\" title=\"1.2.1. shell\"></a>1.2.1. shell</h3><p>​    <strong>Shell</strong> 俗称壳（用来区别于核），是指“提供使用者使用界面”的软件（命令解析器）</p>\n<p>如</p>\n<p><img src=\"medias/1525664062775.png\" alt=\"1525664062775\"></p>\n<p>​    cmd shell 是系统提供的最基本的shell，功能也相对基础。</p>\n<p>​    powser shell 和 git bash shell 可以理解是对 cmd shell 的一层封装，提供了更为强大的命令。</p>\n<p>​    我们平常在系统上所进行的操作，如新增文件，编辑文件，删除文件等。其实底层都是通过一系列的命令来执行的。</p>\n<h3 id=\"1-2-2-常见bash命令\"><a href=\"#1-2-2-常见bash命令\" class=\"headerlink\" title=\"1.2.2. 常见bash命令\"></a>1.2.2. 常见bash命令</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">pwd</span> (Print Working Directory) 查看当前目录</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">cd</span> (Change Directory) 切换目录，如 <span class=\"built_in\">cd</span> /etc</span><br><span class=\"line\"></span><br><span class=\"line\">ls (List) 查看当前目录下内容，如 ls </span><br><span class=\"line\"></span><br><span class=\"line\">mkdir (Make Directory) 创建目录，如 mkdir blog</span><br><span class=\"line\"></span><br><span class=\"line\">touch 创建文件，如 touch index.html</span><br><span class=\"line\"></span><br><span class=\"line\">cat 查看文件全部内容，如 catindex.html</span><br><span class=\"line\"></span><br><span class=\"line\">rm (remove) 删除文件，如 rm index.html、rm -rf  blog</span><br><span class=\"line\"></span><br><span class=\"line\">rmdir (Remove Directory) 删除文件夹，只能删除空文件夹，不常用</span><br><span class=\"line\"></span><br><span class=\"line\">mv (move) 移动文件或重命名，如 mv index.html ./demo/index.html</span><br><span class=\"line\"></span><br><span class=\"line\">cp (copy) 复制文件，cp index.html ./demo/index.html</span><br><span class=\"line\"></span><br><span class=\"line\">head 查看文件前几行，如 head -5 index.html</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">history</span> 查看操作历史</span><br><span class=\"line\"></span><br><span class=\"line\">whoami 查看当前用户</span><br></pre></td></tr></table></figure>\n\n<p>【注意】，在命令行当中 使用快捷键 进行复制粘贴都是没有效果的。</p>\n<ul>\n<li>ctrl + p 没有效果</li>\n<li>ctrl + c  强制退出到 命令行当中</li>\n</ul>\n<h3 id=\"1-2-3-vi编辑器\"><a href=\"#1-2-3-vi编辑器\" class=\"headerlink\" title=\"1.2.3. vi编辑器\"></a>1.2.3. vi编辑器</h3><ul>\n<li>vi编辑器是Linux和Unix上最基本的文本编辑器。由于不需要图形界面，vi是效率很高的文本编辑器</li>\n<li>vi编辑器提供了3种模式，分别是命令模式、插入模式、末行模式 每种模式有不同的功能</li>\n</ul>\n<p><img src=\"medias/1525665671693.png\" alt=\"1525665671693\"></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a) 打开/创建文件， vi 文件路径</span><br><span class=\"line\">b) 末行模式 :w保存，:w filenme另存为</span><br><span class=\"line\">c) 末行模式 :q退出</span><br><span class=\"line\">d) 末行模式 :wq保存并退出</span><br><span class=\"line\">e) 末行模式 :e! 撤销更改，返回到上一次保存的状态</span><br><span class=\"line\">f) 末行模式 :q! 不保存强制退出</span><br><span class=\"line\"></span><br><span class=\"line\">================================================================</span><br><span class=\"line\"></span><br><span class=\"line\">h) 命令模式 ZZ（大写）保存并退出</span><br><span class=\"line\">i) 命令模式 u辙销操作，可多次使用</span><br><span class=\"line\">j) 命令模式 dd删除当前行</span><br><span class=\"line\">k) 命令模式 yy复制当前行</span><br><span class=\"line\">l) 命令模式 p 粘贴内容</span><br><span class=\"line\">o) 命令模式 i进入编辑模式，当前光标处插入</span><br><span class=\"line\">p) 命令模式 a进入编辑模式，当前光标后插入</span><br><span class=\"line\">q) 命令模式 A进入编辑模式，光标移动到行尾</span><br><span class=\"line\">r) 命令模式 o进入编辑模式，当前行下面插入新行</span><br><span class=\"line\">s) 命令模式 O进入编辑模式，当前行上面插入新行</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"1-3-git概述\"><a href=\"#1-3-git概述\" class=\"headerlink\" title=\"1.3. git概述\"></a>1.3. git概述</h2><p>​    <strong>Git</strong>是一款免费、开源的<strong>分布式版本控制系统</strong>，用于敏捷高效地处理任何或小或大的项目。</p>\n<p>它可以处理以下需求</p>\n<ul>\n<li>方便的和团队共享文件</li>\n<li>对文件进行版本的控制</li>\n</ul>\n<p><a href=\"https://baike.baidu.com/item/GIT/12647237\" target=\"_blank\" rel=\"noopener\">Git百度百科</a></p>\n<h2 id=\"1-4-git和svn对比\"><a href=\"#1-4-git和svn对比\" class=\"headerlink\" title=\"1.4. git和svn对比\"></a>1.4. git和svn对比</h2><h3 id=\"1-4-1-svn\"><a href=\"#1-4-1-svn\" class=\"headerlink\" title=\"1.4.1. svn\"></a>1.4.1. svn</h3><p>​    SVN是<strong>集中式版本控制系统</strong>，版本库是集中放在中央服务器的。</p>\n<p>每次需要获取最新的文件或者保存自己当前的记录时，都必须要连接到服务器才可以。</p>\n<p><strong>关键字</strong>：</p>\n<ul>\n<li>集中式</li>\n<li>需要连接外网</li>\n</ul>\n<p><img src=\"medias/1525849453223.png\" alt=\"1525849453223\"></p>\n<h3 id=\"1-4-2-git\"><a href=\"#1-4-2-git\" class=\"headerlink\" title=\"1.4.2. git\"></a>1.4.2. git</h3><p>​    Git是<strong>分布式版本控制系统</strong>，它没有中央服务器，每个人的电脑就是一个完整的版本库。</p>\n<p>当需要和别人分享文件时时，再联网即可。</p>\n<p><strong>关键字</strong>:</p>\n<ul>\n<li>分布式</li>\n</ul>\n<p><img src=\"medias/1525849575573.png\" alt=\"1525849575573\"></p>\n<h2 id=\"1-5-git-安装\"><a href=\"#1-5-git-安装\" class=\"headerlink\" title=\"1.5. git 安装\"></a>1.5. git 安装</h2><p>​    Git可以在Linux、Unix、Mac和Windows这几大平台上正常运行使用。</p>\n<p><a href=\"https://git-scm.com/download\" target=\"_blank\" rel=\"noopener\">下载地址</a></p>\n<p><img src=\"medias/1525849875115.png\" alt=\"1525849875115\"></p>\n<p>​    安装成功后（windows下），在系统的任意目录下 点击 鼠标右键   出现以下菜单，代表安装成功。</p>\n<p><img src=\"medias/1525849962486.png\" alt=\"1525849962486\"></p>\n<h2 id=\"1-6-初次运行-Git-前的配置\"><a href=\"#1-6-初次运行-Git-前的配置\" class=\"headerlink\" title=\"1.6. 初次运行 Git 前的配置\"></a>1.6. 初次运行 Git 前的配置</h2><p>​    在团队的项目开发中，当我们对进行文件的修改时，都应该告诉服务器 是<strong>谁</strong>做的修改。所以 需要 配置个人信息。</p>\n<h3 id=\"1-6-1-全局配置\"><a href=\"#1-6-1-全局配置\" class=\"headerlink\" title=\"1.6.1. 全局配置\"></a>1.6.1. 全局配置</h3><p>​    打开 git 命令行工具   </p>\n<p><img src=\"medias/1525850607969.png\" alt=\"1525850607969\"></p>\n<p>​    输入</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 配置 用户名</span></span><br><span class=\"line\">git config --global  user.name  xxx </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 配置 邮箱</span></span><br><span class=\"line\">git config --global  user.email  xxx </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看用户名</span></span><br><span class=\"line\">git config   user.name</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"1-7-git-基础\"><a href=\"#1-7-git-基础\" class=\"headerlink\" title=\"1.7. git 基础\"></a>1.7. git 基础</h2><p>​    如 我们想使用 git 对 该目录进行版本控制  </p>\n<p><img src=\"medias/1525851471188.png\" alt=\"1525851471188\"></p>\n<h3 id=\"1-7-1-创建版本库\"><a href=\"#1-7-1-创建版本库\" class=\"headerlink\" title=\"1.7.1. 创建版本库\"></a>1.7.1. 创建版本库</h3><p>​    在 <code>我的第一个网站</code> 目录 内   输入 <code>git init</code>  初始化 仓库 </p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git init</span><br></pre></td></tr></table></figure>\n\n<p>​    可以看到，在该目录下 多了一个 <strong>隐藏文件夹</strong>  <code>.git</code>   该文件夹便是实现存放版本记录的地方。<strong>不要手动修改！</strong></p>\n<p><img src=\"medias/1525851668248.png\" alt=\"1525851668248\"></p>\n<h3 id=\"1-7-2-添加到暂存区\"><a href=\"#1-7-2-添加到暂存区\" class=\"headerlink\" title=\"1.7.2. 添加到暂存区\"></a>1.7.2. 添加到暂存区</h3><p>​    现在我们的代码 和 git 仓库 还没有直接的联系  查看 git 仓库状态  输入 <code>git status</code></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git status</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"medias/1525852100376.png\" alt=\"1525852100376\"></p>\n<p>​    我们把添加跟踪的步骤，叫做 添加到 <strong>暂存区</strong></p>\n<p>​    输入  <code>git add *</code> 对所有文件进行跟踪</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git add *</span><br></pre></td></tr></table></figure>\n\n<p>​    此时，重新 查看 仓库状态</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git status</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"medias/1525852288499.png\" alt=\"1525852288499\"></p>\n<p>​    因此，我们可以 随时的  输入  <code>git status</code> 来查看当前仓库的状态，来获得 提示。</p>\n<h3 id=\"1-7-3-提交本地仓库\"><a href=\"#1-7-3-提交本地仓库\" class=\"headerlink\" title=\"1.7.3. 提交本地仓库\"></a>1.7.3. 提交本地仓库</h3><p>​    暂存区的意思 只是暂时存储文件，当需要把对文件的操作 <strong>永久存储下来时</strong>，需要在把暂存区中的文件提交到到本地仓库。</p>\n<p>​    输入以下命令进行提交，同时 还需要备注 信息 如 <code>初始化项目</code> 、 <code>新增了购物接口</code> 等。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git commit -m <span class=\"string\">\"初始化项目\"</span></span><br></pre></td></tr></table></figure>\n\n<p>​    重新输入 <code>git status</code> 查看git 仓库状态 </p>\n<p><img src=\"medias/1525853095009.png\" alt=\"1525853095009\"></p>\n<h3 id=\"1-7-4-小结\"><a href=\"#1-7-4-小结\" class=\"headerlink\" title=\"1.7.4. 小结\"></a>1.7.4. 小结</h3><p>​    把刚才操作的流程，换成专业的术语。</p>\n<ul>\n<li>工作目录 ：刚才操作的文件夹   <code>我的第一个网站</code> 就称为 <strong>工作目录</strong></li>\n<li>暂存区 ： 是用来存放 对文件进行了 跟踪，但是还没有 提交到 <strong>本地仓库</strong> 的地方</li>\n<li>本地仓库： 最终实现 文件版本管理的地方。</li>\n</ul>\n<p><img src=\"medias/1525853953043.png\" alt=\"1525853953043\"></p>\n<h2 id=\"1-8-修改文件\"><a href=\"#1-8-修改文件\" class=\"headerlink\" title=\"1.8. 修改文件\"></a>1.8. 修改文件</h2><p>​    在上个操作的基础上，我们对文件进行修改，然后让 git 记录这次修改的操作。</p>\n<p>编辑 <code>index.html</code> 文件 输入 </p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>完成了登录页面的设计<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>​    此 时 <code>index.html</code> 文件发生了修改  我们输入  <code>git status</code> 查看仓库状态 </p>\n<p><img src=\"medias/1525854096520.png\" alt=\"1525854096520\"></p>\n<h3 id=\"1-8-1-添加到暂存区\"><a href=\"#1-8-1-添加到暂存区\" class=\"headerlink\" title=\"1.8.1. 添加到暂存区\"></a>1.8.1. 添加到暂存区</h3><p>​    以上的修改，可以理解为 完成了一个功能，此时，也需要将这些代码提交到 <strong>本地仓库</strong> 中进行记录管理。因此，先添加到 <strong>暂存区</strong> 再提交到 <strong>本地仓库</strong> 中即可。</p>\n<p>​    将 修改的文件添加到 <strong>暂存区</strong>  输入 </p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git add *</span><br></pre></td></tr></table></figure>\n\n<p>​    查看git 仓库状态</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git status</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"medias/1525854150926.png\" alt=\"1525854150926\"></p>\n<h3 id=\"1-8-2-提交到本地仓库\"><a href=\"#1-8-2-提交到本地仓库\" class=\"headerlink\" title=\"1.8.2. 提交到本地仓库\"></a>1.8.2. 提交到本地仓库</h3><p>​    将暂存区中的文件提交的 本地仓库 实现 版本 记录</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git commit -m <span class=\"string\">\"完成了登录功能\"</span></span><br></pre></td></tr></table></figure>\n\n<p>​    查看git 仓库状态</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git status</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"medias/1525854664486.png\" alt=\"1525854664486\"></p>\n<h2 id=\"1-9-删除文件\"><a href=\"#1-9-删除文件\" class=\"headerlink\" title=\"1.9. 删除文件\"></a>1.9. 删除文件</h2><p>​    在git 仓库中，有时候删除一些无效的文件。以删除     <code>css/index.css</code> 为例</p>\n<p>​    手动将该 文件夹整个删除     删除成功 如下 </p>\n<p><img src=\"medias/1525855125140.png\" alt=\"1525855125140\"></p>\n<p>​    查看仓库状态</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git status</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"medias/1525855216992.png\" alt=\"1525855216992\"></p>\n<h3 id=\"1-9-1-添加到暂存区\"><a href=\"#1-9-1-添加到暂存区\" class=\"headerlink\" title=\"1.9.1. 添加到暂存区\"></a>1.9.1. 添加到暂存区</h3><p>​    删除了 文件，也可以了解为是对项目 进行了一次升级改造，因此同样需要把该 操作 提交到 <strong>本地仓库</strong></p>\n<p>​    输入    <code>git add ./</code>   请注意 当添加删除操作时  使用 <code>git add *</code> 是无效的。（git add * 不会缓存删除操作）</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git add ./</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"medias/1525855744440.png\" alt=\"1525855744440\"></p>\n<h3 id=\"1-9-2-提交到本地仓库\"><a href=\"#1-9-2-提交到本地仓库\" class=\"headerlink\" title=\"1.9.2. 提交到本地仓库\"></a>1.9.2. 提交到本地仓库</h3><p>​    把该 删除操作 提交到 <strong>本地仓库</strong> 实现 版本记录</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git commit -m <span class=\"string\">\"删除了css文件夹\"</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"medias/1525855898836.png\" alt=\"1525855898836\"></p>\n<p>​    查本地仓库的状态</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git status</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"medias/1525855957999.png\" alt=\"1525855957999\"></p>\n<h2 id=\"1-10-忽略文件\"><a href=\"#1-10-忽略文件\" class=\"headerlink\" title=\"1.10. 忽略文件\"></a>1.10. 忽略文件</h2><p>​    有时候，在工作目录下的某些文件，是属于私人的或者是项目运行所产生的临时文件，并不需要添加到 版本控制中。 如 新增一个文件 <code>私人密码</code></p>\n<p><img src=\"medias/1525858765405.png\" alt=\"1525858765405\"></p>\n<p>​    查看git仓库状态</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git status</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"medias/1525859125972.png\" alt=\"1525859125972\"></p>\n<p>​    此时 我们可以使用 git 规定的一个文件   <code>.gitignore</code>   在里面指定需要过滤的文件</p>\n<h3 id=\"1-10-1-创建-忽略文件清单\"><a href=\"#1-10-1-创建-忽略文件清单\" class=\"headerlink\" title=\"1.10.1. 创建 忽略文件清单\"></a>1.10.1. 创建 忽略文件清单</h3><p>​    直接在windows 右键 新建文件  <code>gitignore</code>  会创建失败。</p>\n<p>​    使用命令行的方式创建  </p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">touch .gitignore</span><br></pre></td></tr></table></figure>\n\n<p>​    编辑   <code>.gitignore</code> 文件  直接写入 要忽略的文件名即可 </p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 忽略该文件</span></span><br><span class=\"line\">私人密码.txt</span><br></pre></td></tr></table></figure>\n\n<p>​    查看git仓库状态 </p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git status</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"medias/1525859577480.png\" alt=\"1525859577480\"></p>\n<p>大部分情况下，我们也需要将 <code>.gitignore</code> 文件一起提交到本地仓库中实行版本控制</p>\n<p>​    添加到暂存区   该文件 使用 <code>git add *</code> 无效 需要手动指定文件名 </p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git add .gitignore</span><br></pre></td></tr></table></figure>\n\n<p>​    提交到本地仓库</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git commit -m <span class=\"string\">\"添加了忽略文件列表\"</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"1-10-2-忽略文件语法\"><a href=\"#1-10-2-忽略文件语法\" class=\"headerlink\" title=\"1.10.2. 忽略文件语法\"></a>1.10.2. 忽略文件语法</h3><ul>\n<li><p>语法大部分和正则类似</p>\n</li>\n<li><p>空行或是以#开头的行即注释行将被忽略；</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 这种是注释</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>以斜杠 “/” 结尾表示目录；</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">css/</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>以星号 “*” 通配多个字符；</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">*.js</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>以问号 “?” 通配单个字符</p>\n</li>\n<li><p>以方括号 “[]” 包含单个字符的匹配列表；</p>\n</li>\n<li><p>以叹号 “!” 表示不忽略(跟踪)匹配到的文件或目录；</p>\n</li>\n<li><p>可以在前面添加斜杠 “/” 来避免递归</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 忽略根目录下的 css 文件夹</span></span><br><span class=\"line\">/css</span><br><span class=\"line\"><span class=\"comment\"># 忽略所有的css文件夹</span></span><br><span class=\"line\">css/</span><br></pre></td></tr></table></figure>\n\n<p>​</p>\n</li>\n</ul>\n<h2 id=\"1-11-推送到远程仓库\"><a href=\"#1-11-推送到远程仓库\" class=\"headerlink\" title=\"1.11. 推送到远程仓库\"></a>1.11. 推送到远程仓库</h2><p>因为在团队开发中，我们的项目文件是需要和组员进行分享的，所以实现这个功能，就必须得借助远程仓库。</p>\n<p>远程仓库只是 本地仓库的一个备份。</p>\n<p>目前 用得比较多的有 <a href=\"https://github.com/\" target=\"_blank\" rel=\"noopener\">github</a> 和 <a href=\"https://gitee.com/\" target=\"_blank\" rel=\"noopener\">码云</a></p>\n<ul>\n<li>github做为最著名的git仓库托管商,是行业内的绝对权威.它给无数的开发者提供了共同学习发展的平台.</li>\n<li>码云是github的国产版,对国人做了针对性的优化,在国内也是使用者众多</li>\n</ul>\n<p>我们主要演示 <strong>github</strong>的使用，码云 <strong>强烈建议</strong> 课下 自己学习使用。</p>\n<h3 id=\"1-11-1-注册-github\"><a href=\"#1-11-1-注册-github\" class=\"headerlink\" title=\"1.11.1. 注册 github\"></a>1.11.1. 注册 github</h3><p>先注册一个 github帐号</p>\n<p><img src=\"medias/1525915907144.png\" alt=\"1525915907144\"></p>\n<h3 id=\"1-11-2-新建远程仓库\"><a href=\"#1-11-2-新建远程仓库\" class=\"headerlink\" title=\"1.11.2. 新建远程仓库\"></a>1.11.2. 新建远程仓库</h3><p><strong>1 一个github帐号可以建立多个远程仓库，一般 一个项目使用一个仓库。</strong></p>\n<p><img src=\"medias/1525916009292.png\" alt=\"1525916009292\"></p>\n<p><strong>2 填写仓库信息</strong></p>\n<p><img src=\"medias/1525916256235.png\" alt=\"1525916256235\"></p>\n<p><strong>3 创建成功</strong></p>\n<p><img src=\"medias/1525916479663.png\" alt=\"1525916479663\"></p>\n<h3 id=\"1-11-3-推送到远程仓库\"><a href=\"#1-11-3-推送到远程仓库\" class=\"headerlink\" title=\"1.11.3. 推送到远程仓库\"></a>1.11.3. 推送到远程仓库</h3><p>​    远程仓库建立完毕之后，我们可以 将 之前的 本地仓库 <code>我的第一个网站</code> 推送到上面新建的 <code>test</code> 远程仓库上</p>\n<p>​    先记录远程仓库的地址</p>\n<p><img src=\"medias/1525916715340.png\" alt=\"1525916715340\"></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">https://github.com/itcastWsy/test.git</span><br></pre></td></tr></table></figure>\n\n<p>​    把远程仓库 记录在一个 变量   <code>origin</code> 上  该名字可自定义</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git remote add origin https://github.com/itcastWsy/test.git</span><br></pre></td></tr></table></figure>\n\n<p>​    在推送到远程仓库之前，先确保 本地仓库已经 执行过 commit 了，这样 才会保证 本地仓库 和远程仓库一致。</p>\n<p>​    查看本地仓库状态  </p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git status</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"medias/1525917201540.png\" alt=\"1525917201540\"></p>\n<p>​    开始推送</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git push -u origin master</span><br></pre></td></tr></table></figure>\n\n<p>​    提示输入用户名 ，直接输入即可 如 <code>itcastWsy</code>  然后按下回车  </p>\n<p><img src=\"medias/1525917393459.png\" alt=\"1525917393459\"></p>\n<p>​    提示输入密码</p>\n<p><img src=\"medias/1525917512404.png\" alt=\"1525917512404\"></p>\n<p>没有看到报错，就是 推送成功</p>\n<p><img src=\"medias/1525917563467.png\" alt=\"1525917563467\"></p>\n<p>同时，刷新一下 <strong>github</strong> 页面  看到远程仓库上 显示出 仓库的信息了。</p>\n<p><img src=\"medias/1525917685788.png\" alt=\"1525917685788\"></p>\n<h2 id=\"1-12-从远程仓库克隆\"><a href=\"#1-12-从远程仓库克隆\" class=\"headerlink\" title=\"1.12. 从远程仓库克隆\"></a>1.12. 从远程仓库克隆</h2><p>​    假设 <strong>建立本地仓库</strong>、 <strong>推送到远程仓库</strong> 的工作都是项目经理完成了。此时，你做为一个新加入项目的 <strong>程序猿</strong>，要做的事就是从远程仓库上 <strong>克隆</strong> 代码。</p>\n<p>​    问项目经理拿 远程仓库的地址</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">https://github.com/itcastWsy/test.git</span><br></pre></td></tr></table></figure>\n\n<p>​    在你的电脑上任意目录下（如 桌面） 开始克隆 </p>\n<p>​    在桌面上 打开 <strong>git bash 命令行工具</strong>  输入</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/itcastWsy/test.git</span><br></pre></td></tr></table></figure>\n\n<p> <img src=\"medias/1525918417230.png\" alt=\"1525918417230\"></p>\n<h2 id=\"1-13-从远程仓库获取更新\"><a href=\"#1-13-从远程仓库获取更新\" class=\"headerlink\" title=\"1.13. 从远程仓库获取更新\"></a>1.13. 从远程仓库获取更新</h2><p>​    此时，项目经理的代码  和 你的代码 是一模一样的。现在 项目经理 新增了一个文件   <code>home.html</code>,并把它提交到远程仓库上。</p>\n<ul>\n<li><p>新建 home.html 文件</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">touch home.html</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>添加到暂存区</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git add *</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>提交到本地仓库</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git commit -m <span class=\"string\">\"新增了home.html\"</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>推送到远程仓库</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git push</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"medias/1525919345574.png\" alt=\"1525919345574\"></p>\n</li>\n</ul>\n<p>​    查看远程仓库</p>\n<p><img src=\"medias/1525919393855.png\" alt=\"1525919393855\"></p>\n<p>​    那么现在 做为程序员的你 需要把代码 进行更新   </p>\n<p>​    回到   <code>test</code> 文件夹内，打开 <strong>git bash</strong> 命令行</p>\n<p><img src=\"medias/1525919520069.png\" alt=\"1525919520069\"></p>\n<p>输入以下命令 进行更新</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git pull</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"medias/1525919829352.png\" alt=\"1525919829352\"></p>\n<h2 id=\"1-14-git-clone-和-git-pull-的区别\"><a href=\"#1-14-git-clone-和-git-pull-的区别\" class=\"headerlink\" title=\"1.14. git clone 和 git pull 的区别\"></a>1.14. git clone 和 git pull 的区别</h2><ul>\n<li>git clone 是克隆，只需要执行一次</li>\n<li>git pull 是 更新，后期反复使用</li>\n</ul>\n<h2 id=\"1-15-还原文件到上次commit状态\"><a href=\"#1-15-还原文件到上次commit状态\" class=\"headerlink\" title=\"1.15. 还原文件到上次commit状态\"></a>1.15. 还原文件到上次commit状态</h2><p>​    假设做为程序员的你，刚刚把代码更新下来，便上厕所去了，这个时候你的熊孩子趁你不在，对着你的键盘就是一顿 啪啪啪 ，把你 <strong>home.html</strong>  文件敲得面目全非。</p>\n<p>​    你现在想要做的事，就是把 <strong>home.html</strong> 还原到 拉取下来的状态。</p>\n<p>​    原来的home.html 内容是空的。（你是不知道里面的内容的）</p>\n<p>​    熊孩子 把 <strong>home.html</strong> 改成了</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>钱多话少死的早<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>​    开始还原，在   <code>test</code> 目录下，输入命令行</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git checkout  home.html</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"medias/1525922259127.png\" alt=\"1525922259127\"></p>\n<p>​    如果想要还原多个文件，可以</p>\n<ul>\n<li><p>还原文件夹 css 文件夹</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git checkout css</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>还原当前目录的所有文件 </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git checkout ./</span><br></pre></td></tr></table></figure>\n\n<p>​</p>\n</li>\n</ul>\n<h2 id=\"1-16-查看版本历史\"><a href=\"#1-16-查看版本历史\" class=\"headerlink\" title=\"1.16. 查看版本历史\"></a>1.16. 查看版本历史</h2><p>​    做为 新加入项目的你，想要了解 这个项目，到底做过了哪些版本，想要看到之前每一次提交时的备注信息 </p>\n<p>此时，你的 <code>test</code> 文件夹内  输入 命令进行查看</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">log</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"medias/1525920485139.png\" alt=\"1525920485139\"></p>\n<h2 id=\"1-17-还原到某一个版本\"><a href=\"#1-17-还原到某一个版本\" class=\"headerlink\" title=\"1.17. 还原到某一个版本\"></a>1.17. 还原到某一个版本</h2><p>​    做为 新加入项目的你，来获取了最新的代码之后，发现项目太大了，你不好去学习和了解 其中的某一个模块的功能和代码。如</p>\n<p><img src=\"medias/1525922607367.png\" alt=\"1525922607367\"></p>\n<p>此时，可以把整个项目 还原到 <strong>完成了登录功能的状态</strong></p>\n<p>​    记录 该版本的   <code>commit</code> 字段</p>\n<p><img src=\"medias/1525922690195.png\" alt=\"1525922690195\"></p>\n<p>​    </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">3db7762c593251f1a78e518fdd3ed6d6cad626bc</span><br></pre></td></tr></table></figure>\n\n<pre><code>开始还原   （commit 字段 最少 写 6位）</code></pre><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git reset -–hard 3db7762c593251f1a78e518fdd3ed6d6cad626bc</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"medias/1525922921419.png\" alt=\"1525922921419\"></p>\n<p>​    如果，在次状态下又想回到 最新的版本  <strong>新增了home.html</strong> 呢  查看提交信息</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git log</span><br></pre></td></tr></table></figure>\n\n<p>​    发现   <code>完成登录功能</code> 之后的日志信息 丢失了。</p>\n<p><img src=\"medias/1525923215275.png\" alt=\"1525923215275\"></p>\n<p>​    此时，输入 </p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git reflog</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"medias/1525923554914.png\" alt=\"1525923554914\"></p>\n<p>​    还原到最新的版本</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git reset --hard 5038cc9</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"medias/1525923659935.png\" alt=\"1525923659935\"></p>\n<h3 id=\"1-17-1-小结\"><a href=\"#1-17-1-小结\" class=\"headerlink\" title=\"1.17.1. 小结\"></a>1.17.1. 小结</h3><ul>\n<li><code>git checkout xxx</code> 只能还原文件到上一个版本</li>\n<li><code>git reset --hard &#39;commit的id&#39;</code> 可以还原到任意版本</li>\n<li><code>git reflog</code> 可以查看丢失了的版本的日志信息</li>\n</ul>\n<h2 id=\"1-18-配置ssh\"><a href=\"#1-18-配置ssh\" class=\"headerlink\" title=\"1.18. 配置ssh\"></a>1.18. 配置ssh</h2><p>​    我们把文件从本地仓库推送到远程仓库的方式有两种</p>\n<ul>\n<li>HTTPS 每次都要手动输入 用户名和密码 </li>\n<li>SSH 配置证书后，不用手动输入用户名和密码</li>\n</ul>\n<h3 id=\"1-18-1-配置证书\"><a href=\"#1-18-1-配置证书\" class=\"headerlink\" title=\"1.18.1. 配置证书\"></a>1.18.1. 配置证书</h3><p>在git bash 命令行中输入  </p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh-keygen -t rsa -C <span class=\"string\">\"邮箱地址\"</span></span><br></pre></td></tr></table></figure>\n\n<p>然后一直按回车。直到出现如下界面 代表本地 证书生成成功</p>\n<p><img src=\"medias/1525933559552.png\" alt=\"1525933559552\"></p>\n<p>输入命令 打印密钥</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat ~/.ssh/id_rsa.pub</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"medias/1525933696717.png\" alt=\"1525933696717\"></p>\n<p>按以下步骤进行粘贴即可</p>\n<p><img src=\"medias/1525934009733.png\" alt=\"1525934009733\"></p>\n<p>输入</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh -T git@github.com</span><br></pre></td></tr></table></figure>\n\n<p>出现以下界面代表成功。如果失败，建议多尝试几次。</p>\n<p><img src=\"medias/1525934471737.png\" alt=\"1525934471737\"></p>\n<h3 id=\"1-18-2-将提交方式-HTTPS-改为-SSH\"><a href=\"#1-18-2-将提交方式-HTTPS-改为-SSH\" class=\"headerlink\" title=\"1.18.2. 将提交方式 HTTPS   改为 SSH\"></a>1.18.2. 将提交方式 HTTPS   改为 SSH</h3><p>复制 <strong>SSH</strong> 地址</p>\n<p><img src=\"medias/1525934827313.png\" alt=\"1525934827313\"></p>\n<p><img src=\"medias/1525934868632.png\" alt=\"1525934868632\"></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git@github.com:itcastWsy/test.git</span><br></pre></td></tr></table></figure>\n\n<p>修改 <strong>origin</strong> 地址 </p>\n<p>因为之前已经将 地址 存入 <strong>origin</strong>  变量了 。查看 origin</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git remote -v</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"medias/1525934970736.png\" alt=\"1525934970736\"></p>\n<p>此时，将origin的地址 改为 <strong>ssh</strong> 地址即可</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git remote <span class=\"built_in\">set</span>-url origin git@github.com:itcastWsy/test.git</span><br></pre></td></tr></table></figure>\n\n<p>重新查看 <code>git remote -v</code>   发现修改成功</p>\n<p><img src=\"medias/1525935054456.png\" alt=\"1525935054456\"></p>\n<p>按照以上步骤执行完毕之后，再次推送到远程仓库时，就不用再输入用户名和密码了。</p>\n<p>测试 </p>\n<p><img src=\"medias/1525935332160.png\" alt=\"1525935332160\"></p>\n<h2 id=\"1-19-分支\"><a href=\"#1-19-分支\" class=\"headerlink\" title=\"1.19. 分支\"></a>1.19. 分支</h2><p>​    其实我们在使用git的时候，一直在 git的主分支<code>master</code>也是默认分支下进行工作的。也可以手动开启另外的分支进行开发。</p>\n<p>​    开启新的的分支时可以理解为复制了一个相同的副本.内容完全一样</p>\n<p>​    分支的作用是提供了一种方便、高效的管理项目的手段。</p>\n<p>​    学习分支,我们需要从需求入手</p>\n<p><img src=\"medias/1528519197378.png\" alt=\"1528519197378\"></p>\n<p>​    流程解释:</p>\n<ol>\n<li><p>网站发布了第一个版本</p>\n</li>\n<li><p>此时,需要研发新功能1.1版本</p>\n</li>\n<li><p>开启新的分支<code>dev</code>进行研发</p>\n<ol>\n<li>研发成功，将分支<code>dev</code>合并到主分支<code>master</code>上,发布新版本1.1</li>\n<li>研发失败，直接删除分支<code>dev</code>即可</li>\n</ol>\n<p>经过以上流程,我们可以在毫无风险的情况下开发新功能,不会影响到已经发布了的网站。</p>\n</li>\n</ol>\n<h3 id=\"1-19-1-网站发布0版本\"><a href=\"#1-19-1-网站发布0版本\" class=\"headerlink\" title=\"1.19.1. 网站发布0版本\"></a>1.19.1. 网站发布0版本</h3><p>在目下下,新建文件夹 <code>web</code>，并在里新建一个空的文件<code>index.html</code> 提交到本地仓库</p>\n<p><img src=\"medias/1528519852700.png\" alt=\"1528519852700\"></p>\n<h3 id=\"1-19-2-开启新分支\"><a href=\"#1-19-2-开启新分支\" class=\"headerlink\" title=\"1.19.2. 开启新分支\"></a>1.19.2. 开启新分支</h3><p>​    在完成1.0版本发布后（commit之后），开启新分支 dev（dev为分支名）</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git branch dev</span><br></pre></td></tr></table></figure>\n\n<p>​    查看当前仓库下的分支</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git branch</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"medias/1528520046133.png\" alt=\"1528520046133\"></p>\n<h3 id=\"1-19-3-切换分支\"><a href=\"#1-19-3-切换分支\" class=\"headerlink\" title=\"1.19.3. 切换分支\"></a>1.19.3. 切换分支</h3><p>​    此时，需要手动切换分支到dev上，</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git checkout dev</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"medias/1528520161732.png\" alt=\"1528520161732\"></p>\n<h3 id=\"1-19-4-在分支dev上开发功能\"><a href=\"#1-19-4-在分支dev上开发功能\" class=\"headerlink\" title=\"1.19.4. 在分支dev上开发功能\"></a>1.19.4. 在分支dev上开发功能</h3><p>​    此时，我们可以在分支dev上，放心的进行功能开发。编辑文件 <code>index.html</code> 添加一下内容 </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">开发新功能1.0</span><br></pre></td></tr></table></figure>\n\n<p>​    提交到仓库</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git add .</span><br><span class=\"line\">git commit -m <span class=\"string\">\"dev下开发新功能1.1\"</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"medias/1528520834607.png\" alt=\"1528520834607\"></p>\n<h3 id=\"1-19-5-合并分支\"><a href=\"#1-19-5-合并分支\" class=\"headerlink\" title=\"1.19.5. 合并分支\"></a>1.19.5. 合并分支</h3><p>​    新功能开发完毕，需要将分支<code>dev</code>的代码合并到主分支<code>master</code>上</p>\n<ol>\n<li><p>切换回主分支 <code>master</code></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git checkout master</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>合并分支 <code>dev</code></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git merge dev</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"medias/1528521188063.png\" alt=\"1528521188063\"></p>\n</li>\n</ol>\n<h3 id=\"1-19-6-删除分支\"><a href=\"#1-19-6-删除分支\" class=\"headerlink\" title=\"1.19.6. 删除分支\"></a>1.19.6. 删除分支</h3><p>既然 分支dev的功能已经完成，我们可以将其删除。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git branch -d dev</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"medias/1525947107745.png\" alt=\"1525947107745\"></p>\n<p>查看git仓库下的分支，发现 分支dev 确实没有了</p>\n<p><img src=\"medias/1525947206980.png\" alt=\"1525947206980\"></p>\n<h2 id=\"1-20-冲突\"><a href=\"#1-20-冲突\" class=\"headerlink\" title=\"1.20. 冲突\"></a>1.20. 冲突</h2><p>​    冲突是指当两个同名的文件进行合并时，会产生的一种场景。</p>\n<h3 id=\"1-20-1-冲突描述\"><a href=\"#1-20-1-冲突描述\" class=\"headerlink\" title=\"1.20.1. 冲突描述\"></a>1.20.1. 冲突描述</h3><p><img src=\"medias/1526001349246.png\" alt=\"1526001349246\"></p>\n<p>​    当把       <code>我的代码</code>内的两个文件 拷贝到 <code>他的代码</code> 文件夹内时 </p>\n<p><img src=\"medias/1526001545996.png\" alt=\"1526001545996\"></p>\n<p>​    可以看到此时，冲突就产生了 因为电脑并不知道 你想要保留哪一份   <code>index.html</code> 文件（<strong>home.html</strong>没有冲突） ，于是，弹出对话框，让用户进行选择。</p>\n<p>​    所以冲突具有以下特点</p>\n<ul>\n<li>在文件进行合并时容易产生</li>\n<li>冲突的解决方法，只能是用户决定</li>\n</ul>\n<h2 id=\"1-21-分支合并时的冲突\"><a href=\"#1-21-分支合并时的冲突\" class=\"headerlink\" title=\"1.21. 分支合并时的冲突\"></a>1.21. 分支合并时的冲突</h2><p>​    刚才的演示，是人为手动操作导致的。当我们使用分支，进行合并的时候，也会出现冲突，只不过这次冲突的 <strong>提示框</strong> 和 <strong>解决方法</strong> 都是通过 <strong>命令行</strong>来体现的。</p>\n<h3 id=\"1-21-1-初始化仓库\"><a href=\"#1-21-1-初始化仓库\" class=\"headerlink\" title=\"1.21.1. 初始化仓库\"></a>1.21.1. 初始化仓库</h3><ol>\n<li>新建一个文件夹 <code>冲突的演示</code></li>\n<li>初始化 git 仓库 <code>git init</code></li>\n<li>新建文件 <code>index.html</code></li>\n<li>添加到暂存区 </li>\n<li>提交到本地仓库</li>\n</ol>\n<p><img src=\"medias/1526002222651.png\" alt=\"1526002222651\"></p>\n<p>​    </p>\n<h3 id=\"1-21-2-开启-分支-dev\"><a href=\"#1-21-2-开启-分支-dev\" class=\"headerlink\" title=\"1.21.2. 开启 分支 dev\"></a>1.21.2. 开启 分支 dev</h3><p>​    初始化完仓库之后，开启分支dev，此时 分支dev 的内容和主分支master 是一模一样的</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git branch dev</span><br></pre></td></tr></table></figure>\n\n<p>​    <img src=\"medias/1526002370112.png\" alt=\"1526002370112\"></p>\n<p><img src=\"medias/1526002472933.png\" alt=\"1526002472933\"></p>\n<p>​    在分支master下，</p>\n<ol>\n<li>编辑 <strong>index.html</strong>  输入  <code>主分支master下的编辑</code></li>\n<li>添加到暂存区 <code>git add *</code></li>\n<li>提交到本地仓库 <code>git commit -m &quot;master下修改了index.html&quot;</code></li>\n</ol>\n<p><img src=\"medias/1526002990206.png\" alt=\"1526002990206\"></p>\n<p>​    切换到 分支 dev下</p>\n<ol>\n<li><p>切换分支 <code>git checkout dev</code></p>\n<p><img src=\"medias/1526003304232.png\" alt=\"1526003304232\"></p>\n</li>\n<li><p>编辑 <strong>index.html</strong>  输入  <code>分支dev下的编辑</code></p>\n</li>\n<li><p>添加到暂存区 <code>git add *</code></p>\n</li>\n<li><p>提交到本地仓库 <code>git commit -m &quot;dev下修改了index.html&quot;</code></p>\n</li>\n</ol>\n<p><img src=\"medias/1526003463186.png\" alt=\"1526003463186\"></p>\n<p>完成了以上操作之后，主分支<strong>master</strong>和 分支<strong>dev</strong> 下的index.html 分别是</p>\n<p><img src=\"medias/1526003571578.png\" alt=\"1526003571578\"></p>\n<h3 id=\"1-21-3-合并冲突分支以及解决\"><a href=\"#1-21-3-合并冲突分支以及解决\" class=\"headerlink\" title=\"1.21.3. 合并冲突分支以及解决\"></a>1.21.3. 合并冲突分支以及解决</h3><p>此时准备分支合并，</p>\n<ol>\n<li><p>切换回主分支 <code>git checkout master</code></p>\n</li>\n<li><p>执行合并 <code>git merge dev</code> 弹出提示 <strong>文件合并产生冲突了</strong></p>\n<p><img src=\"medias/1526003800813.png\" alt=\"1526003800813\"></p>\n</li>\n<li><p>此时，手动解决冲突，打开 <code>index.html</code> 文件 发现 </p>\n<p><img src=\"medias/1526004039990.png\" alt=\"1526004039990\"></p>\n</li>\n<li><p>添加到暂存区 </p>\n</li>\n<li><p>提交到本地仓库 </p>\n<p><img src=\"medias/1526004176375.png\" alt=\"1526004176375\"></p>\n</li>\n</ol>\n<p>至此，冲突的产生以及解决，演示完毕。 强烈建议  自行多练习该步骤，了解每一步的含义。</p>\n<h2 id=\"1-22-常用git命令\"><a href=\"#1-22-常用git命令\" class=\"headerlink\" title=\"1.22. 常用git命令\"></a>1.22. 常用git命令</h2><table>\n<thead>\n<tr>\n<th>注解</th>\n<th>命令</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>git reset HEAD XXX</td>\n<td>从暂存区移出</td>\n</tr>\n<tr>\n<td>git diff</td>\n<td>查看编辑过的文件和 版本库的区别</td>\n</tr>\n<tr>\n<td>git config user.name xxx</td>\n<td>配置当前仓库的用户名</td>\n</tr>\n<tr>\n<td>git config user.email xxx</td>\n<td>配置当前仓库的邮箱</td>\n</tr>\n<tr>\n<td>git init</td>\n<td>初始化 git 仓库</td>\n</tr>\n<tr>\n<td>git add xxx</td>\n<td>添加到暂存区</td>\n</tr>\n<tr>\n<td>git commit -m “备注”</td>\n<td>提交到本地仓库</td>\n</tr>\n<tr>\n<td>git commit -m “备注” -a</td>\n<td>git add  和 git commit 的综合</td>\n</tr>\n<tr>\n<td>git remote -v</td>\n<td>查看远程仓库地址</td>\n</tr>\n<tr>\n<td>git remote add 远程仓库名  远程仓库地址</td>\n<td>添加远程仓库地址</td>\n</tr>\n<tr>\n<td>git remote rm 远程仓库名</td>\n<td>删除远程仓库</td>\n</tr>\n<tr>\n<td>git remote set-url 远程仓库名 远程仓库地址</td>\n<td>修改远程仓库地址</td>\n</tr>\n<tr>\n<td>git push 远程仓库地址 master</td>\n<td>提交到远程仓库</td>\n</tr>\n<tr>\n<td>git push 远程仓库地址 master -u</td>\n<td>提交到远程仓库 (以后 git push 即可)</td>\n</tr>\n<tr>\n<td>git clone 远程仓库地址</td>\n<td>克隆仓库</td>\n</tr>\n<tr>\n<td>git pull</td>\n<td>拉取更新</td>\n</tr>\n<tr>\n<td>ssh-keygen -t rsa -C “邮箱地址”</td>\n<td>生成 ssh证书</td>\n</tr>\n<tr>\n<td>cat ~/.ssh/id_rsa.pub</td>\n<td>查看ssh证书</td>\n</tr>\n<tr>\n<td>git reset –hard “commit Id”</td>\n<td>还原到某版本</td>\n</tr>\n<tr>\n<td>git reset –hared HEAD^</td>\n<td>还原到上一个版本</td>\n</tr>\n<tr>\n<td>git log</td>\n<td>查看版本历史</td>\n</tr>\n<tr>\n<td>git reflog</td>\n<td>查看更强大的版本历史</td>\n</tr>\n<tr>\n<td>git checkout 文件名</td>\n<td>还原文件到上一个版本</td>\n</tr>\n<tr>\n<td>git branch 分支名</td>\n<td>创建分支</td>\n</tr>\n<tr>\n<td>git checkout 分支名</td>\n<td>切换到分支</td>\n</tr>\n<tr>\n<td>git merge 分支名</td>\n<td>合并分支</td>\n</tr>\n<tr>\n<td>git branch</td>\n<td>查看分支</td>\n</tr>\n<tr>\n<td>git branch -d 分支名</td>\n<td>删除分支</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n</tr>\n</tbody></table>\n<h2 id=\"1-23-扩展阅读\"><a href=\"#1-23-扩展阅读\" class=\"headerlink\" title=\"1.23. 扩展阅读\"></a>1.23. 扩展阅读</h2><p><a href=\"https://progit.bootcss.com/\" target=\"_blank\" rel=\"noopener\">Pro Git</a></p>\n<p><a href=\"https://backlog.com/git-tutorial/cn\" target=\"_blank\" rel=\"noopener\">猴子都能看懂的git</a></p>\n<p><a href=\"https://www.cnblogs.com/savorboard/p/bash-guide.html\" target=\"_blank\" rel=\"noopener\">十分钟掌握bash 命令</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"1-git\"><a href=\"#1-git\" class=\"headerlink\" title=\"1. git\"></a>1. git</h1><h2 id=\"1-1-学习目标\"><a href=\"#1-1-学习目标\" class=\"headerlink\" title=\"1.1. 学习目标\"></a>1.1. 学习目标</h2><ul>\n<li>理解<ul>\n<li>常用bash系统命令</li>\n<li>git 的概念</li>\n<li>git 和 svn 的区别</li>\n<li>git 的工作流程</li>\n<li>git 管理文件版本</li>\n<li>使用远程仓库</li>\n<li>分支管理</li>\n<li>冲突</li>\n</ul>\n</li>\n<li>应用</li>\n</ul>\n<h2 id=\"1-2-认识命令行-了解\"><a href=\"#1-2-认识命令行-了解\" class=\"headerlink\" title=\"1.2. 认识命令行 了解\"></a>1.2. 认识命令行 了解</h2><h3 id=\"1-2-1-shell\"><a href=\"#1-2-1-shell\" class=\"headerlink\" title=\"1.2.1. shell\"></a>1.2.1. shell</h3><p>​    <strong>Shell</strong> 俗称壳（用来区别于核），是指“提供使用者使用界面”的软件（命令解析器）</p>\n<p>如</p>\n<p><img src=\"medias/1525664062775.png\" alt=\"1525664062775\"></p>\n<p>​    cmd shell 是系统提供的最基本的shell，功能也相对基础。</p>\n<p>​    powser shell 和 git bash shell 可以理解是对 cmd shell 的一层封装，提供了更为强大的命令。</p>\n<p>​    我们平常在系统上所进行的操作，如新增文件，编辑文件，删除文件等。其实底层都是通过一系列的命令来执行的。</p>\n<h3 id=\"1-2-2-常见bash命令\"><a href=\"#1-2-2-常见bash命令\" class=\"headerlink\" title=\"1.2.2. 常见bash命令\"></a>1.2.2. 常见bash命令</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">pwd</span> (Print Working Directory) 查看当前目录</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">cd</span> (Change Directory) 切换目录，如 <span class=\"built_in\">cd</span> /etc</span><br><span class=\"line\"></span><br><span class=\"line\">ls (List) 查看当前目录下内容，如 ls </span><br><span class=\"line\"></span><br><span class=\"line\">mkdir (Make Directory) 创建目录，如 mkdir blog</span><br><span class=\"line\"></span><br><span class=\"line\">touch 创建文件，如 touch index.html</span><br><span class=\"line\"></span><br><span class=\"line\">cat 查看文件全部内容，如 catindex.html</span><br><span class=\"line\"></span><br><span class=\"line\">rm (remove) 删除文件，如 rm index.html、rm -rf  blog</span><br><span class=\"line\"></span><br><span class=\"line\">rmdir (Remove Directory) 删除文件夹，只能删除空文件夹，不常用</span><br><span class=\"line\"></span><br><span class=\"line\">mv (move) 移动文件或重命名，如 mv index.html ./demo/index.html</span><br><span class=\"line\"></span><br><span class=\"line\">cp (copy) 复制文件，cp index.html ./demo/index.html</span><br><span class=\"line\"></span><br><span class=\"line\">head 查看文件前几行，如 head -5 index.html</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">history</span> 查看操作历史</span><br><span class=\"line\"></span><br><span class=\"line\">whoami 查看当前用户</span><br></pre></td></tr></table></figure>\n\n<p>【注意】，在命令行当中 使用快捷键 进行复制粘贴都是没有效果的。</p>\n<ul>\n<li>ctrl + p 没有效果</li>\n<li>ctrl + c  强制退出到 命令行当中</li>\n</ul>\n<h3 id=\"1-2-3-vi编辑器\"><a href=\"#1-2-3-vi编辑器\" class=\"headerlink\" title=\"1.2.3. vi编辑器\"></a>1.2.3. vi编辑器</h3><ul>\n<li>vi编辑器是Linux和Unix上最基本的文本编辑器。由于不需要图形界面，vi是效率很高的文本编辑器</li>\n<li>vi编辑器提供了3种模式，分别是命令模式、插入模式、末行模式 每种模式有不同的功能</li>\n</ul>\n<p><img src=\"medias/1525665671693.png\" alt=\"1525665671693\"></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a) 打开/创建文件， vi 文件路径</span><br><span class=\"line\">b) 末行模式 :w保存，:w filenme另存为</span><br><span class=\"line\">c) 末行模式 :q退出</span><br><span class=\"line\">d) 末行模式 :wq保存并退出</span><br><span class=\"line\">e) 末行模式 :e! 撤销更改，返回到上一次保存的状态</span><br><span class=\"line\">f) 末行模式 :q! 不保存强制退出</span><br><span class=\"line\"></span><br><span class=\"line\">================================================================</span><br><span class=\"line\"></span><br><span class=\"line\">h) 命令模式 ZZ（大写）保存并退出</span><br><span class=\"line\">i) 命令模式 u辙销操作，可多次使用</span><br><span class=\"line\">j) 命令模式 dd删除当前行</span><br><span class=\"line\">k) 命令模式 yy复制当前行</span><br><span class=\"line\">l) 命令模式 p 粘贴内容</span><br><span class=\"line\">o) 命令模式 i进入编辑模式，当前光标处插入</span><br><span class=\"line\">p) 命令模式 a进入编辑模式，当前光标后插入</span><br><span class=\"line\">q) 命令模式 A进入编辑模式，光标移动到行尾</span><br><span class=\"line\">r) 命令模式 o进入编辑模式，当前行下面插入新行</span><br><span class=\"line\">s) 命令模式 O进入编辑模式，当前行上面插入新行</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"1-3-git概述\"><a href=\"#1-3-git概述\" class=\"headerlink\" title=\"1.3. git概述\"></a>1.3. git概述</h2><p>​    <strong>Git</strong>是一款免费、开源的<strong>分布式版本控制系统</strong>，用于敏捷高效地处理任何或小或大的项目。</p>\n<p>它可以处理以下需求</p>\n<ul>\n<li>方便的和团队共享文件</li>\n<li>对文件进行版本的控制</li>\n</ul>\n<p><a href=\"https://baike.baidu.com/item/GIT/12647237\" target=\"_blank\" rel=\"noopener\">Git百度百科</a></p>\n<h2 id=\"1-4-git和svn对比\"><a href=\"#1-4-git和svn对比\" class=\"headerlink\" title=\"1.4. git和svn对比\"></a>1.4. git和svn对比</h2><h3 id=\"1-4-1-svn\"><a href=\"#1-4-1-svn\" class=\"headerlink\" title=\"1.4.1. svn\"></a>1.4.1. svn</h3><p>​    SVN是<strong>集中式版本控制系统</strong>，版本库是集中放在中央服务器的。</p>\n<p>每次需要获取最新的文件或者保存自己当前的记录时，都必须要连接到服务器才可以。</p>\n<p><strong>关键字</strong>：</p>\n<ul>\n<li>集中式</li>\n<li>需要连接外网</li>\n</ul>\n<p><img src=\"medias/1525849453223.png\" alt=\"1525849453223\"></p>\n<h3 id=\"1-4-2-git\"><a href=\"#1-4-2-git\" class=\"headerlink\" title=\"1.4.2. git\"></a>1.4.2. git</h3><p>​    Git是<strong>分布式版本控制系统</strong>，它没有中央服务器，每个人的电脑就是一个完整的版本库。</p>\n<p>当需要和别人分享文件时时，再联网即可。</p>\n<p><strong>关键字</strong>:</p>\n<ul>\n<li>分布式</li>\n</ul>\n<p><img src=\"medias/1525849575573.png\" alt=\"1525849575573\"></p>\n<h2 id=\"1-5-git-安装\"><a href=\"#1-5-git-安装\" class=\"headerlink\" title=\"1.5. git 安装\"></a>1.5. git 安装</h2><p>​    Git可以在Linux、Unix、Mac和Windows这几大平台上正常运行使用。</p>\n<p><a href=\"https://git-scm.com/download\" target=\"_blank\" rel=\"noopener\">下载地址</a></p>\n<p><img src=\"medias/1525849875115.png\" alt=\"1525849875115\"></p>\n<p>​    安装成功后（windows下），在系统的任意目录下 点击 鼠标右键   出现以下菜单，代表安装成功。</p>\n<p><img src=\"medias/1525849962486.png\" alt=\"1525849962486\"></p>\n<h2 id=\"1-6-初次运行-Git-前的配置\"><a href=\"#1-6-初次运行-Git-前的配置\" class=\"headerlink\" title=\"1.6. 初次运行 Git 前的配置\"></a>1.6. 初次运行 Git 前的配置</h2><p>​    在团队的项目开发中，当我们对进行文件的修改时，都应该告诉服务器 是<strong>谁</strong>做的修改。所以 需要 配置个人信息。</p>\n<h3 id=\"1-6-1-全局配置\"><a href=\"#1-6-1-全局配置\" class=\"headerlink\" title=\"1.6.1. 全局配置\"></a>1.6.1. 全局配置</h3><p>​    打开 git 命令行工具   </p>\n<p><img src=\"medias/1525850607969.png\" alt=\"1525850607969\"></p>\n<p>​    输入</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 配置 用户名</span></span><br><span class=\"line\">git config --global  user.name  xxx </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 配置 邮箱</span></span><br><span class=\"line\">git config --global  user.email  xxx </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看用户名</span></span><br><span class=\"line\">git config   user.name</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"1-7-git-基础\"><a href=\"#1-7-git-基础\" class=\"headerlink\" title=\"1.7. git 基础\"></a>1.7. git 基础</h2><p>​    如 我们想使用 git 对 该目录进行版本控制  </p>\n<p><img src=\"medias/1525851471188.png\" alt=\"1525851471188\"></p>\n<h3 id=\"1-7-1-创建版本库\"><a href=\"#1-7-1-创建版本库\" class=\"headerlink\" title=\"1.7.1. 创建版本库\"></a>1.7.1. 创建版本库</h3><p>​    在 <code>我的第一个网站</code> 目录 内   输入 <code>git init</code>  初始化 仓库 </p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git init</span><br></pre></td></tr></table></figure>\n\n<p>​    可以看到，在该目录下 多了一个 <strong>隐藏文件夹</strong>  <code>.git</code>   该文件夹便是实现存放版本记录的地方。<strong>不要手动修改！</strong></p>\n<p><img src=\"medias/1525851668248.png\" alt=\"1525851668248\"></p>\n<h3 id=\"1-7-2-添加到暂存区\"><a href=\"#1-7-2-添加到暂存区\" class=\"headerlink\" title=\"1.7.2. 添加到暂存区\"></a>1.7.2. 添加到暂存区</h3><p>​    现在我们的代码 和 git 仓库 还没有直接的联系  查看 git 仓库状态  输入 <code>git status</code></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git status</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"medias/1525852100376.png\" alt=\"1525852100376\"></p>\n<p>​    我们把添加跟踪的步骤，叫做 添加到 <strong>暂存区</strong></p>\n<p>​    输入  <code>git add *</code> 对所有文件进行跟踪</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git add *</span><br></pre></td></tr></table></figure>\n\n<p>​    此时，重新 查看 仓库状态</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git status</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"medias/1525852288499.png\" alt=\"1525852288499\"></p>\n<p>​    因此，我们可以 随时的  输入  <code>git status</code> 来查看当前仓库的状态，来获得 提示。</p>\n<h3 id=\"1-7-3-提交本地仓库\"><a href=\"#1-7-3-提交本地仓库\" class=\"headerlink\" title=\"1.7.3. 提交本地仓库\"></a>1.7.3. 提交本地仓库</h3><p>​    暂存区的意思 只是暂时存储文件，当需要把对文件的操作 <strong>永久存储下来时</strong>，需要在把暂存区中的文件提交到到本地仓库。</p>\n<p>​    输入以下命令进行提交，同时 还需要备注 信息 如 <code>初始化项目</code> 、 <code>新增了购物接口</code> 等。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git commit -m <span class=\"string\">\"初始化项目\"</span></span><br></pre></td></tr></table></figure>\n\n<p>​    重新输入 <code>git status</code> 查看git 仓库状态 </p>\n<p><img src=\"medias/1525853095009.png\" alt=\"1525853095009\"></p>\n<h3 id=\"1-7-4-小结\"><a href=\"#1-7-4-小结\" class=\"headerlink\" title=\"1.7.4. 小结\"></a>1.7.4. 小结</h3><p>​    把刚才操作的流程，换成专业的术语。</p>\n<ul>\n<li>工作目录 ：刚才操作的文件夹   <code>我的第一个网站</code> 就称为 <strong>工作目录</strong></li>\n<li>暂存区 ： 是用来存放 对文件进行了 跟踪，但是还没有 提交到 <strong>本地仓库</strong> 的地方</li>\n<li>本地仓库： 最终实现 文件版本管理的地方。</li>\n</ul>\n<p><img src=\"medias/1525853953043.png\" alt=\"1525853953043\"></p>\n<h2 id=\"1-8-修改文件\"><a href=\"#1-8-修改文件\" class=\"headerlink\" title=\"1.8. 修改文件\"></a>1.8. 修改文件</h2><p>​    在上个操作的基础上，我们对文件进行修改，然后让 git 记录这次修改的操作。</p>\n<p>编辑 <code>index.html</code> 文件 输入 </p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>完成了登录页面的设计<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>​    此 时 <code>index.html</code> 文件发生了修改  我们输入  <code>git status</code> 查看仓库状态 </p>\n<p><img src=\"medias/1525854096520.png\" alt=\"1525854096520\"></p>\n<h3 id=\"1-8-1-添加到暂存区\"><a href=\"#1-8-1-添加到暂存区\" class=\"headerlink\" title=\"1.8.1. 添加到暂存区\"></a>1.8.1. 添加到暂存区</h3><p>​    以上的修改，可以理解为 完成了一个功能，此时，也需要将这些代码提交到 <strong>本地仓库</strong> 中进行记录管理。因此，先添加到 <strong>暂存区</strong> 再提交到 <strong>本地仓库</strong> 中即可。</p>\n<p>​    将 修改的文件添加到 <strong>暂存区</strong>  输入 </p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git add *</span><br></pre></td></tr></table></figure>\n\n<p>​    查看git 仓库状态</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git status</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"medias/1525854150926.png\" alt=\"1525854150926\"></p>\n<h3 id=\"1-8-2-提交到本地仓库\"><a href=\"#1-8-2-提交到本地仓库\" class=\"headerlink\" title=\"1.8.2. 提交到本地仓库\"></a>1.8.2. 提交到本地仓库</h3><p>​    将暂存区中的文件提交的 本地仓库 实现 版本 记录</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git commit -m <span class=\"string\">\"完成了登录功能\"</span></span><br></pre></td></tr></table></figure>\n\n<p>​    查看git 仓库状态</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git status</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"medias/1525854664486.png\" alt=\"1525854664486\"></p>\n<h2 id=\"1-9-删除文件\"><a href=\"#1-9-删除文件\" class=\"headerlink\" title=\"1.9. 删除文件\"></a>1.9. 删除文件</h2><p>​    在git 仓库中，有时候删除一些无效的文件。以删除     <code>css/index.css</code> 为例</p>\n<p>​    手动将该 文件夹整个删除     删除成功 如下 </p>\n<p><img src=\"medias/1525855125140.png\" alt=\"1525855125140\"></p>\n<p>​    查看仓库状态</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git status</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"medias/1525855216992.png\" alt=\"1525855216992\"></p>\n<h3 id=\"1-9-1-添加到暂存区\"><a href=\"#1-9-1-添加到暂存区\" class=\"headerlink\" title=\"1.9.1. 添加到暂存区\"></a>1.9.1. 添加到暂存区</h3><p>​    删除了 文件，也可以了解为是对项目 进行了一次升级改造，因此同样需要把该 操作 提交到 <strong>本地仓库</strong></p>\n<p>​    输入    <code>git add ./</code>   请注意 当添加删除操作时  使用 <code>git add *</code> 是无效的。（git add * 不会缓存删除操作）</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git add ./</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"medias/1525855744440.png\" alt=\"1525855744440\"></p>\n<h3 id=\"1-9-2-提交到本地仓库\"><a href=\"#1-9-2-提交到本地仓库\" class=\"headerlink\" title=\"1.9.2. 提交到本地仓库\"></a>1.9.2. 提交到本地仓库</h3><p>​    把该 删除操作 提交到 <strong>本地仓库</strong> 实现 版本记录</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git commit -m <span class=\"string\">\"删除了css文件夹\"</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"medias/1525855898836.png\" alt=\"1525855898836\"></p>\n<p>​    查本地仓库的状态</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git status</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"medias/1525855957999.png\" alt=\"1525855957999\"></p>\n<h2 id=\"1-10-忽略文件\"><a href=\"#1-10-忽略文件\" class=\"headerlink\" title=\"1.10. 忽略文件\"></a>1.10. 忽略文件</h2><p>​    有时候，在工作目录下的某些文件，是属于私人的或者是项目运行所产生的临时文件，并不需要添加到 版本控制中。 如 新增一个文件 <code>私人密码</code></p>\n<p><img src=\"medias/1525858765405.png\" alt=\"1525858765405\"></p>\n<p>​    查看git仓库状态</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git status</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"medias/1525859125972.png\" alt=\"1525859125972\"></p>\n<p>​    此时 我们可以使用 git 规定的一个文件   <code>.gitignore</code>   在里面指定需要过滤的文件</p>\n<h3 id=\"1-10-1-创建-忽略文件清单\"><a href=\"#1-10-1-创建-忽略文件清单\" class=\"headerlink\" title=\"1.10.1. 创建 忽略文件清单\"></a>1.10.1. 创建 忽略文件清单</h3><p>​    直接在windows 右键 新建文件  <code>gitignore</code>  会创建失败。</p>\n<p>​    使用命令行的方式创建  </p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">touch .gitignore</span><br></pre></td></tr></table></figure>\n\n<p>​    编辑   <code>.gitignore</code> 文件  直接写入 要忽略的文件名即可 </p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 忽略该文件</span></span><br><span class=\"line\">私人密码.txt</span><br></pre></td></tr></table></figure>\n\n<p>​    查看git仓库状态 </p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git status</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"medias/1525859577480.png\" alt=\"1525859577480\"></p>\n<p>大部分情况下，我们也需要将 <code>.gitignore</code> 文件一起提交到本地仓库中实行版本控制</p>\n<p>​    添加到暂存区   该文件 使用 <code>git add *</code> 无效 需要手动指定文件名 </p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git add .gitignore</span><br></pre></td></tr></table></figure>\n\n<p>​    提交到本地仓库</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git commit -m <span class=\"string\">\"添加了忽略文件列表\"</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"1-10-2-忽略文件语法\"><a href=\"#1-10-2-忽略文件语法\" class=\"headerlink\" title=\"1.10.2. 忽略文件语法\"></a>1.10.2. 忽略文件语法</h3><ul>\n<li><p>语法大部分和正则类似</p>\n</li>\n<li><p>空行或是以#开头的行即注释行将被忽略；</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 这种是注释</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>以斜杠 “/” 结尾表示目录；</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">css/</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>以星号 “*” 通配多个字符；</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">*.js</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>以问号 “?” 通配单个字符</p>\n</li>\n<li><p>以方括号 “[]” 包含单个字符的匹配列表；</p>\n</li>\n<li><p>以叹号 “!” 表示不忽略(跟踪)匹配到的文件或目录；</p>\n</li>\n<li><p>可以在前面添加斜杠 “/” 来避免递归</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 忽略根目录下的 css 文件夹</span></span><br><span class=\"line\">/css</span><br><span class=\"line\"><span class=\"comment\"># 忽略所有的css文件夹</span></span><br><span class=\"line\">css/</span><br></pre></td></tr></table></figure>\n\n<p>​</p>\n</li>\n</ul>\n<h2 id=\"1-11-推送到远程仓库\"><a href=\"#1-11-推送到远程仓库\" class=\"headerlink\" title=\"1.11. 推送到远程仓库\"></a>1.11. 推送到远程仓库</h2><p>因为在团队开发中，我们的项目文件是需要和组员进行分享的，所以实现这个功能，就必须得借助远程仓库。</p>\n<p>远程仓库只是 本地仓库的一个备份。</p>\n<p>目前 用得比较多的有 <a href=\"https://github.com/\" target=\"_blank\" rel=\"noopener\">github</a> 和 <a href=\"https://gitee.com/\" target=\"_blank\" rel=\"noopener\">码云</a></p>\n<ul>\n<li>github做为最著名的git仓库托管商,是行业内的绝对权威.它给无数的开发者提供了共同学习发展的平台.</li>\n<li>码云是github的国产版,对国人做了针对性的优化,在国内也是使用者众多</li>\n</ul>\n<p>我们主要演示 <strong>github</strong>的使用，码云 <strong>强烈建议</strong> 课下 自己学习使用。</p>\n<h3 id=\"1-11-1-注册-github\"><a href=\"#1-11-1-注册-github\" class=\"headerlink\" title=\"1.11.1. 注册 github\"></a>1.11.1. 注册 github</h3><p>先注册一个 github帐号</p>\n<p><img src=\"medias/1525915907144.png\" alt=\"1525915907144\"></p>\n<h3 id=\"1-11-2-新建远程仓库\"><a href=\"#1-11-2-新建远程仓库\" class=\"headerlink\" title=\"1.11.2. 新建远程仓库\"></a>1.11.2. 新建远程仓库</h3><p><strong>1 一个github帐号可以建立多个远程仓库，一般 一个项目使用一个仓库。</strong></p>\n<p><img src=\"medias/1525916009292.png\" alt=\"1525916009292\"></p>\n<p><strong>2 填写仓库信息</strong></p>\n<p><img src=\"medias/1525916256235.png\" alt=\"1525916256235\"></p>\n<p><strong>3 创建成功</strong></p>\n<p><img src=\"medias/1525916479663.png\" alt=\"1525916479663\"></p>\n<h3 id=\"1-11-3-推送到远程仓库\"><a href=\"#1-11-3-推送到远程仓库\" class=\"headerlink\" title=\"1.11.3. 推送到远程仓库\"></a>1.11.3. 推送到远程仓库</h3><p>​    远程仓库建立完毕之后，我们可以 将 之前的 本地仓库 <code>我的第一个网站</code> 推送到上面新建的 <code>test</code> 远程仓库上</p>\n<p>​    先记录远程仓库的地址</p>\n<p><img src=\"medias/1525916715340.png\" alt=\"1525916715340\"></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">https://github.com/itcastWsy/test.git</span><br></pre></td></tr></table></figure>\n\n<p>​    把远程仓库 记录在一个 变量   <code>origin</code> 上  该名字可自定义</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git remote add origin https://github.com/itcastWsy/test.git</span><br></pre></td></tr></table></figure>\n\n<p>​    在推送到远程仓库之前，先确保 本地仓库已经 执行过 commit 了，这样 才会保证 本地仓库 和远程仓库一致。</p>\n<p>​    查看本地仓库状态  </p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git status</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"medias/1525917201540.png\" alt=\"1525917201540\"></p>\n<p>​    开始推送</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git push -u origin master</span><br></pre></td></tr></table></figure>\n\n<p>​    提示输入用户名 ，直接输入即可 如 <code>itcastWsy</code>  然后按下回车  </p>\n<p><img src=\"medias/1525917393459.png\" alt=\"1525917393459\"></p>\n<p>​    提示输入密码</p>\n<p><img src=\"medias/1525917512404.png\" alt=\"1525917512404\"></p>\n<p>没有看到报错，就是 推送成功</p>\n<p><img src=\"medias/1525917563467.png\" alt=\"1525917563467\"></p>\n<p>同时，刷新一下 <strong>github</strong> 页面  看到远程仓库上 显示出 仓库的信息了。</p>\n<p><img src=\"medias/1525917685788.png\" alt=\"1525917685788\"></p>\n<h2 id=\"1-12-从远程仓库克隆\"><a href=\"#1-12-从远程仓库克隆\" class=\"headerlink\" title=\"1.12. 从远程仓库克隆\"></a>1.12. 从远程仓库克隆</h2><p>​    假设 <strong>建立本地仓库</strong>、 <strong>推送到远程仓库</strong> 的工作都是项目经理完成了。此时，你做为一个新加入项目的 <strong>程序猿</strong>，要做的事就是从远程仓库上 <strong>克隆</strong> 代码。</p>\n<p>​    问项目经理拿 远程仓库的地址</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">https://github.com/itcastWsy/test.git</span><br></pre></td></tr></table></figure>\n\n<p>​    在你的电脑上任意目录下（如 桌面） 开始克隆 </p>\n<p>​    在桌面上 打开 <strong>git bash 命令行工具</strong>  输入</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/itcastWsy/test.git</span><br></pre></td></tr></table></figure>\n\n<p> <img src=\"medias/1525918417230.png\" alt=\"1525918417230\"></p>\n<h2 id=\"1-13-从远程仓库获取更新\"><a href=\"#1-13-从远程仓库获取更新\" class=\"headerlink\" title=\"1.13. 从远程仓库获取更新\"></a>1.13. 从远程仓库获取更新</h2><p>​    此时，项目经理的代码  和 你的代码 是一模一样的。现在 项目经理 新增了一个文件   <code>home.html</code>,并把它提交到远程仓库上。</p>\n<ul>\n<li><p>新建 home.html 文件</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">touch home.html</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>添加到暂存区</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git add *</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>提交到本地仓库</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git commit -m <span class=\"string\">\"新增了home.html\"</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>推送到远程仓库</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git push</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"medias/1525919345574.png\" alt=\"1525919345574\"></p>\n</li>\n</ul>\n<p>​    查看远程仓库</p>\n<p><img src=\"medias/1525919393855.png\" alt=\"1525919393855\"></p>\n<p>​    那么现在 做为程序员的你 需要把代码 进行更新   </p>\n<p>​    回到   <code>test</code> 文件夹内，打开 <strong>git bash</strong> 命令行</p>\n<p><img src=\"medias/1525919520069.png\" alt=\"1525919520069\"></p>\n<p>输入以下命令 进行更新</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git pull</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"medias/1525919829352.png\" alt=\"1525919829352\"></p>\n<h2 id=\"1-14-git-clone-和-git-pull-的区别\"><a href=\"#1-14-git-clone-和-git-pull-的区别\" class=\"headerlink\" title=\"1.14. git clone 和 git pull 的区别\"></a>1.14. git clone 和 git pull 的区别</h2><ul>\n<li>git clone 是克隆，只需要执行一次</li>\n<li>git pull 是 更新，后期反复使用</li>\n</ul>\n<h2 id=\"1-15-还原文件到上次commit状态\"><a href=\"#1-15-还原文件到上次commit状态\" class=\"headerlink\" title=\"1.15. 还原文件到上次commit状态\"></a>1.15. 还原文件到上次commit状态</h2><p>​    假设做为程序员的你，刚刚把代码更新下来，便上厕所去了，这个时候你的熊孩子趁你不在，对着你的键盘就是一顿 啪啪啪 ，把你 <strong>home.html</strong>  文件敲得面目全非。</p>\n<p>​    你现在想要做的事，就是把 <strong>home.html</strong> 还原到 拉取下来的状态。</p>\n<p>​    原来的home.html 内容是空的。（你是不知道里面的内容的）</p>\n<p>​    熊孩子 把 <strong>home.html</strong> 改成了</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>钱多话少死的早<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>​    开始还原，在   <code>test</code> 目录下，输入命令行</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git checkout  home.html</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"medias/1525922259127.png\" alt=\"1525922259127\"></p>\n<p>​    如果想要还原多个文件，可以</p>\n<ul>\n<li><p>还原文件夹 css 文件夹</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git checkout css</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>还原当前目录的所有文件 </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git checkout ./</span><br></pre></td></tr></table></figure>\n\n<p>​</p>\n</li>\n</ul>\n<h2 id=\"1-16-查看版本历史\"><a href=\"#1-16-查看版本历史\" class=\"headerlink\" title=\"1.16. 查看版本历史\"></a>1.16. 查看版本历史</h2><p>​    做为 新加入项目的你，想要了解 这个项目，到底做过了哪些版本，想要看到之前每一次提交时的备注信息 </p>\n<p>此时，你的 <code>test</code> 文件夹内  输入 命令进行查看</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">log</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"medias/1525920485139.png\" alt=\"1525920485139\"></p>\n<h2 id=\"1-17-还原到某一个版本\"><a href=\"#1-17-还原到某一个版本\" class=\"headerlink\" title=\"1.17. 还原到某一个版本\"></a>1.17. 还原到某一个版本</h2><p>​    做为 新加入项目的你，来获取了最新的代码之后，发现项目太大了，你不好去学习和了解 其中的某一个模块的功能和代码。如</p>\n<p><img src=\"medias/1525922607367.png\" alt=\"1525922607367\"></p>\n<p>此时，可以把整个项目 还原到 <strong>完成了登录功能的状态</strong></p>\n<p>​    记录 该版本的   <code>commit</code> 字段</p>\n<p><img src=\"medias/1525922690195.png\" alt=\"1525922690195\"></p>\n<p>​    </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">3db7762c593251f1a78e518fdd3ed6d6cad626bc</span><br></pre></td></tr></table></figure>\n\n<pre><code>开始还原   （commit 字段 最少 写 6位）</code></pre><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git reset -–hard 3db7762c593251f1a78e518fdd3ed6d6cad626bc</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"medias/1525922921419.png\" alt=\"1525922921419\"></p>\n<p>​    如果，在次状态下又想回到 最新的版本  <strong>新增了home.html</strong> 呢  查看提交信息</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git log</span><br></pre></td></tr></table></figure>\n\n<p>​    发现   <code>完成登录功能</code> 之后的日志信息 丢失了。</p>\n<p><img src=\"medias/1525923215275.png\" alt=\"1525923215275\"></p>\n<p>​    此时，输入 </p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git reflog</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"medias/1525923554914.png\" alt=\"1525923554914\"></p>\n<p>​    还原到最新的版本</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git reset --hard 5038cc9</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"medias/1525923659935.png\" alt=\"1525923659935\"></p>\n<h3 id=\"1-17-1-小结\"><a href=\"#1-17-1-小结\" class=\"headerlink\" title=\"1.17.1. 小结\"></a>1.17.1. 小结</h3><ul>\n<li><code>git checkout xxx</code> 只能还原文件到上一个版本</li>\n<li><code>git reset --hard &#39;commit的id&#39;</code> 可以还原到任意版本</li>\n<li><code>git reflog</code> 可以查看丢失了的版本的日志信息</li>\n</ul>\n<h2 id=\"1-18-配置ssh\"><a href=\"#1-18-配置ssh\" class=\"headerlink\" title=\"1.18. 配置ssh\"></a>1.18. 配置ssh</h2><p>​    我们把文件从本地仓库推送到远程仓库的方式有两种</p>\n<ul>\n<li>HTTPS 每次都要手动输入 用户名和密码 </li>\n<li>SSH 配置证书后，不用手动输入用户名和密码</li>\n</ul>\n<h3 id=\"1-18-1-配置证书\"><a href=\"#1-18-1-配置证书\" class=\"headerlink\" title=\"1.18.1. 配置证书\"></a>1.18.1. 配置证书</h3><p>在git bash 命令行中输入  </p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh-keygen -t rsa -C <span class=\"string\">\"邮箱地址\"</span></span><br></pre></td></tr></table></figure>\n\n<p>然后一直按回车。直到出现如下界面 代表本地 证书生成成功</p>\n<p><img src=\"medias/1525933559552.png\" alt=\"1525933559552\"></p>\n<p>输入命令 打印密钥</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat ~/.ssh/id_rsa.pub</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"medias/1525933696717.png\" alt=\"1525933696717\"></p>\n<p>按以下步骤进行粘贴即可</p>\n<p><img src=\"medias/1525934009733.png\" alt=\"1525934009733\"></p>\n<p>输入</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh -T git@github.com</span><br></pre></td></tr></table></figure>\n\n<p>出现以下界面代表成功。如果失败，建议多尝试几次。</p>\n<p><img src=\"medias/1525934471737.png\" alt=\"1525934471737\"></p>\n<h3 id=\"1-18-2-将提交方式-HTTPS-改为-SSH\"><a href=\"#1-18-2-将提交方式-HTTPS-改为-SSH\" class=\"headerlink\" title=\"1.18.2. 将提交方式 HTTPS   改为 SSH\"></a>1.18.2. 将提交方式 HTTPS   改为 SSH</h3><p>复制 <strong>SSH</strong> 地址</p>\n<p><img src=\"medias/1525934827313.png\" alt=\"1525934827313\"></p>\n<p><img src=\"medias/1525934868632.png\" alt=\"1525934868632\"></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git@github.com:itcastWsy/test.git</span><br></pre></td></tr></table></figure>\n\n<p>修改 <strong>origin</strong> 地址 </p>\n<p>因为之前已经将 地址 存入 <strong>origin</strong>  变量了 。查看 origin</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git remote -v</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"medias/1525934970736.png\" alt=\"1525934970736\"></p>\n<p>此时，将origin的地址 改为 <strong>ssh</strong> 地址即可</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git remote <span class=\"built_in\">set</span>-url origin git@github.com:itcastWsy/test.git</span><br></pre></td></tr></table></figure>\n\n<p>重新查看 <code>git remote -v</code>   发现修改成功</p>\n<p><img src=\"medias/1525935054456.png\" alt=\"1525935054456\"></p>\n<p>按照以上步骤执行完毕之后，再次推送到远程仓库时，就不用再输入用户名和密码了。</p>\n<p>测试 </p>\n<p><img src=\"medias/1525935332160.png\" alt=\"1525935332160\"></p>\n<h2 id=\"1-19-分支\"><a href=\"#1-19-分支\" class=\"headerlink\" title=\"1.19. 分支\"></a>1.19. 分支</h2><p>​    其实我们在使用git的时候，一直在 git的主分支<code>master</code>也是默认分支下进行工作的。也可以手动开启另外的分支进行开发。</p>\n<p>​    开启新的的分支时可以理解为复制了一个相同的副本.内容完全一样</p>\n<p>​    分支的作用是提供了一种方便、高效的管理项目的手段。</p>\n<p>​    学习分支,我们需要从需求入手</p>\n<p><img src=\"medias/1528519197378.png\" alt=\"1528519197378\"></p>\n<p>​    流程解释:</p>\n<ol>\n<li><p>网站发布了第一个版本</p>\n</li>\n<li><p>此时,需要研发新功能1.1版本</p>\n</li>\n<li><p>开启新的分支<code>dev</code>进行研发</p>\n<ol>\n<li>研发成功，将分支<code>dev</code>合并到主分支<code>master</code>上,发布新版本1.1</li>\n<li>研发失败，直接删除分支<code>dev</code>即可</li>\n</ol>\n<p>经过以上流程,我们可以在毫无风险的情况下开发新功能,不会影响到已经发布了的网站。</p>\n</li>\n</ol>\n<h3 id=\"1-19-1-网站发布0版本\"><a href=\"#1-19-1-网站发布0版本\" class=\"headerlink\" title=\"1.19.1. 网站发布0版本\"></a>1.19.1. 网站发布0版本</h3><p>在目下下,新建文件夹 <code>web</code>，并在里新建一个空的文件<code>index.html</code> 提交到本地仓库</p>\n<p><img src=\"medias/1528519852700.png\" alt=\"1528519852700\"></p>\n<h3 id=\"1-19-2-开启新分支\"><a href=\"#1-19-2-开启新分支\" class=\"headerlink\" title=\"1.19.2. 开启新分支\"></a>1.19.2. 开启新分支</h3><p>​    在完成1.0版本发布后（commit之后），开启新分支 dev（dev为分支名）</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git branch dev</span><br></pre></td></tr></table></figure>\n\n<p>​    查看当前仓库下的分支</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git branch</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"medias/1528520046133.png\" alt=\"1528520046133\"></p>\n<h3 id=\"1-19-3-切换分支\"><a href=\"#1-19-3-切换分支\" class=\"headerlink\" title=\"1.19.3. 切换分支\"></a>1.19.3. 切换分支</h3><p>​    此时，需要手动切换分支到dev上，</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git checkout dev</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"medias/1528520161732.png\" alt=\"1528520161732\"></p>\n<h3 id=\"1-19-4-在分支dev上开发功能\"><a href=\"#1-19-4-在分支dev上开发功能\" class=\"headerlink\" title=\"1.19.4. 在分支dev上开发功能\"></a>1.19.4. 在分支dev上开发功能</h3><p>​    此时，我们可以在分支dev上，放心的进行功能开发。编辑文件 <code>index.html</code> 添加一下内容 </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">开发新功能1.0</span><br></pre></td></tr></table></figure>\n\n<p>​    提交到仓库</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git add .</span><br><span class=\"line\">git commit -m <span class=\"string\">\"dev下开发新功能1.1\"</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"medias/1528520834607.png\" alt=\"1528520834607\"></p>\n<h3 id=\"1-19-5-合并分支\"><a href=\"#1-19-5-合并分支\" class=\"headerlink\" title=\"1.19.5. 合并分支\"></a>1.19.5. 合并分支</h3><p>​    新功能开发完毕，需要将分支<code>dev</code>的代码合并到主分支<code>master</code>上</p>\n<ol>\n<li><p>切换回主分支 <code>master</code></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git checkout master</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>合并分支 <code>dev</code></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git merge dev</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"medias/1528521188063.png\" alt=\"1528521188063\"></p>\n</li>\n</ol>\n<h3 id=\"1-19-6-删除分支\"><a href=\"#1-19-6-删除分支\" class=\"headerlink\" title=\"1.19.6. 删除分支\"></a>1.19.6. 删除分支</h3><p>既然 分支dev的功能已经完成，我们可以将其删除。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git branch -d dev</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"medias/1525947107745.png\" alt=\"1525947107745\"></p>\n<p>查看git仓库下的分支，发现 分支dev 确实没有了</p>\n<p><img src=\"medias/1525947206980.png\" alt=\"1525947206980\"></p>\n<h2 id=\"1-20-冲突\"><a href=\"#1-20-冲突\" class=\"headerlink\" title=\"1.20. 冲突\"></a>1.20. 冲突</h2><p>​    冲突是指当两个同名的文件进行合并时，会产生的一种场景。</p>\n<h3 id=\"1-20-1-冲突描述\"><a href=\"#1-20-1-冲突描述\" class=\"headerlink\" title=\"1.20.1. 冲突描述\"></a>1.20.1. 冲突描述</h3><p><img src=\"medias/1526001349246.png\" alt=\"1526001349246\"></p>\n<p>​    当把       <code>我的代码</code>内的两个文件 拷贝到 <code>他的代码</code> 文件夹内时 </p>\n<p><img src=\"medias/1526001545996.png\" alt=\"1526001545996\"></p>\n<p>​    可以看到此时，冲突就产生了 因为电脑并不知道 你想要保留哪一份   <code>index.html</code> 文件（<strong>home.html</strong>没有冲突） ，于是，弹出对话框，让用户进行选择。</p>\n<p>​    所以冲突具有以下特点</p>\n<ul>\n<li>在文件进行合并时容易产生</li>\n<li>冲突的解决方法，只能是用户决定</li>\n</ul>\n<h2 id=\"1-21-分支合并时的冲突\"><a href=\"#1-21-分支合并时的冲突\" class=\"headerlink\" title=\"1.21. 分支合并时的冲突\"></a>1.21. 分支合并时的冲突</h2><p>​    刚才的演示，是人为手动操作导致的。当我们使用分支，进行合并的时候，也会出现冲突，只不过这次冲突的 <strong>提示框</strong> 和 <strong>解决方法</strong> 都是通过 <strong>命令行</strong>来体现的。</p>\n<h3 id=\"1-21-1-初始化仓库\"><a href=\"#1-21-1-初始化仓库\" class=\"headerlink\" title=\"1.21.1. 初始化仓库\"></a>1.21.1. 初始化仓库</h3><ol>\n<li>新建一个文件夹 <code>冲突的演示</code></li>\n<li>初始化 git 仓库 <code>git init</code></li>\n<li>新建文件 <code>index.html</code></li>\n<li>添加到暂存区 </li>\n<li>提交到本地仓库</li>\n</ol>\n<p><img src=\"medias/1526002222651.png\" alt=\"1526002222651\"></p>\n<p>​    </p>\n<h3 id=\"1-21-2-开启-分支-dev\"><a href=\"#1-21-2-开启-分支-dev\" class=\"headerlink\" title=\"1.21.2. 开启 分支 dev\"></a>1.21.2. 开启 分支 dev</h3><p>​    初始化完仓库之后，开启分支dev，此时 分支dev 的内容和主分支master 是一模一样的</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git branch dev</span><br></pre></td></tr></table></figure>\n\n<p>​    <img src=\"medias/1526002370112.png\" alt=\"1526002370112\"></p>\n<p><img src=\"medias/1526002472933.png\" alt=\"1526002472933\"></p>\n<p>​    在分支master下，</p>\n<ol>\n<li>编辑 <strong>index.html</strong>  输入  <code>主分支master下的编辑</code></li>\n<li>添加到暂存区 <code>git add *</code></li>\n<li>提交到本地仓库 <code>git commit -m &quot;master下修改了index.html&quot;</code></li>\n</ol>\n<p><img src=\"medias/1526002990206.png\" alt=\"1526002990206\"></p>\n<p>​    切换到 分支 dev下</p>\n<ol>\n<li><p>切换分支 <code>git checkout dev</code></p>\n<p><img src=\"medias/1526003304232.png\" alt=\"1526003304232\"></p>\n</li>\n<li><p>编辑 <strong>index.html</strong>  输入  <code>分支dev下的编辑</code></p>\n</li>\n<li><p>添加到暂存区 <code>git add *</code></p>\n</li>\n<li><p>提交到本地仓库 <code>git commit -m &quot;dev下修改了index.html&quot;</code></p>\n</li>\n</ol>\n<p><img src=\"medias/1526003463186.png\" alt=\"1526003463186\"></p>\n<p>完成了以上操作之后，主分支<strong>master</strong>和 分支<strong>dev</strong> 下的index.html 分别是</p>\n<p><img src=\"medias/1526003571578.png\" alt=\"1526003571578\"></p>\n<h3 id=\"1-21-3-合并冲突分支以及解决\"><a href=\"#1-21-3-合并冲突分支以及解决\" class=\"headerlink\" title=\"1.21.3. 合并冲突分支以及解决\"></a>1.21.3. 合并冲突分支以及解决</h3><p>此时准备分支合并，</p>\n<ol>\n<li><p>切换回主分支 <code>git checkout master</code></p>\n</li>\n<li><p>执行合并 <code>git merge dev</code> 弹出提示 <strong>文件合并产生冲突了</strong></p>\n<p><img src=\"medias/1526003800813.png\" alt=\"1526003800813\"></p>\n</li>\n<li><p>此时，手动解决冲突，打开 <code>index.html</code> 文件 发现 </p>\n<p><img src=\"medias/1526004039990.png\" alt=\"1526004039990\"></p>\n</li>\n<li><p>添加到暂存区 </p>\n</li>\n<li><p>提交到本地仓库 </p>\n<p><img src=\"medias/1526004176375.png\" alt=\"1526004176375\"></p>\n</li>\n</ol>\n<p>至此，冲突的产生以及解决，演示完毕。 强烈建议  自行多练习该步骤，了解每一步的含义。</p>\n<h2 id=\"1-22-常用git命令\"><a href=\"#1-22-常用git命令\" class=\"headerlink\" title=\"1.22. 常用git命令\"></a>1.22. 常用git命令</h2><table>\n<thead>\n<tr>\n<th>注解</th>\n<th>命令</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>git reset HEAD XXX</td>\n<td>从暂存区移出</td>\n</tr>\n<tr>\n<td>git diff</td>\n<td>查看编辑过的文件和 版本库的区别</td>\n</tr>\n<tr>\n<td>git config user.name xxx</td>\n<td>配置当前仓库的用户名</td>\n</tr>\n<tr>\n<td>git config user.email xxx</td>\n<td>配置当前仓库的邮箱</td>\n</tr>\n<tr>\n<td>git init</td>\n<td>初始化 git 仓库</td>\n</tr>\n<tr>\n<td>git add xxx</td>\n<td>添加到暂存区</td>\n</tr>\n<tr>\n<td>git commit -m “备注”</td>\n<td>提交到本地仓库</td>\n</tr>\n<tr>\n<td>git commit -m “备注” -a</td>\n<td>git add  和 git commit 的综合</td>\n</tr>\n<tr>\n<td>git remote -v</td>\n<td>查看远程仓库地址</td>\n</tr>\n<tr>\n<td>git remote add 远程仓库名  远程仓库地址</td>\n<td>添加远程仓库地址</td>\n</tr>\n<tr>\n<td>git remote rm 远程仓库名</td>\n<td>删除远程仓库</td>\n</tr>\n<tr>\n<td>git remote set-url 远程仓库名 远程仓库地址</td>\n<td>修改远程仓库地址</td>\n</tr>\n<tr>\n<td>git push 远程仓库地址 master</td>\n<td>提交到远程仓库</td>\n</tr>\n<tr>\n<td>git push 远程仓库地址 master -u</td>\n<td>提交到远程仓库 (以后 git push 即可)</td>\n</tr>\n<tr>\n<td>git clone 远程仓库地址</td>\n<td>克隆仓库</td>\n</tr>\n<tr>\n<td>git pull</td>\n<td>拉取更新</td>\n</tr>\n<tr>\n<td>ssh-keygen -t rsa -C “邮箱地址”</td>\n<td>生成 ssh证书</td>\n</tr>\n<tr>\n<td>cat ~/.ssh/id_rsa.pub</td>\n<td>查看ssh证书</td>\n</tr>\n<tr>\n<td>git reset –hard “commit Id”</td>\n<td>还原到某版本</td>\n</tr>\n<tr>\n<td>git reset –hared HEAD^</td>\n<td>还原到上一个版本</td>\n</tr>\n<tr>\n<td>git log</td>\n<td>查看版本历史</td>\n</tr>\n<tr>\n<td>git reflog</td>\n<td>查看更强大的版本历史</td>\n</tr>\n<tr>\n<td>git checkout 文件名</td>\n<td>还原文件到上一个版本</td>\n</tr>\n<tr>\n<td>git branch 分支名</td>\n<td>创建分支</td>\n</tr>\n<tr>\n<td>git checkout 分支名</td>\n<td>切换到分支</td>\n</tr>\n<tr>\n<td>git merge 分支名</td>\n<td>合并分支</td>\n</tr>\n<tr>\n<td>git branch</td>\n<td>查看分支</td>\n</tr>\n<tr>\n<td>git branch -d 分支名</td>\n<td>删除分支</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n</tr>\n</tbody></table>\n<h2 id=\"1-23-扩展阅读\"><a href=\"#1-23-扩展阅读\" class=\"headerlink\" title=\"1.23. 扩展阅读\"></a>1.23. 扩展阅读</h2><p><a href=\"https://progit.bootcss.com/\" target=\"_blank\" rel=\"noopener\">Pro Git</a></p>\n<p><a href=\"https://backlog.com/git-tutorial/cn\" target=\"_blank\" rel=\"noopener\">猴子都能看懂的git</a></p>\n<p><a href=\"https://www.cnblogs.com/savorboard/p/bash-guide.html\" target=\"_blank\" rel=\"noopener\">十分钟掌握bash 命令</a></p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cjz5kjzsx0004nwqqx4kco9jy","category_id":"cjz5kjzt10005nwqqnuo6hy8k","_id":"cjz5kjzta0008nwqq33l9rub6"}],"PostTag":[{"post_id":"cjz5kjzsx0004nwqqx4kco9jy","tag_id":"cjz5kjzt60006nwqq2b7gawou","_id":"cjz5kjztb0009nwqqwlln5rlw"},{"post_id":"cjz5kjzsx0004nwqqx4kco9jy","tag_id":"cjz5kjzt80007nwqqmu36ge85","_id":"cjz5kjztc000anwqqfsuqi4fb"}],"Tag":[{"name":"编程","_id":"cjz5kjzt60006nwqq2b7gawou"},{"name":"感悟","_id":"cjz5kjzt80007nwqqmu36ge85"}]}}